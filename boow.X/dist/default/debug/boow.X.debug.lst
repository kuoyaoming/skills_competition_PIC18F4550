

Microchip Technology PIC18 LITE Macro Assembler V1.35 build -356382666 
                                                                                               Tue Aug 25 23:49:00 2015

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1
    20                           	psect	text10,global,reloc=2,class=CODE,delta=1
    21                           	psect	text11,global,reloc=2,class=CODE,delta=1
    22                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    23                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    24                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    25                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    26                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    27  0000                     
    28                           	psect	idataCOMRAM
    29  0004D0                     __pidataCOMRAM:
    30                           	opt stack 0
    31                           
    32                           ;initializer for _b
    33  0004D0  003B               	dw	59
    34                           
    35                           ;initializer for _c
    36  0004D2  003B               	dw	59
    37                           
    38                           ;initializer for _d
    39  0004D4  0017               	dw	23
    40                           
    41                           ;initializer for _e
    42  0004D6  0E10               	dw	3600
    43  0000                     _PORTD	set	3971
    44  0000                     _TRISB	set	3987
    45  0000                     _TRISC	set	3988
    46  0000                     _TRISD	set	3989
    47  0000                     _RB3	set	31755
    48  0000                     _RB4	set	31756
    49  0000                     _RB5	set	31757
    50  0000                     _RD7	set	31775
    51  0000                     _TRISD7	set	31919
    52  0000                     _ADCON1	set	4033
    53  0000                     _OSCCON	set	4051
    54  0000                     _PIR1	set	3998
    55  0000                     _T1CON	set	4045
    56  0000                     _TMR1H	set	4047
    57  0000                     _TMR1L	set	4046
    58  0000                     _TMR1IE	set	31976
    59  0000                     _TMR1IF	set	31984
    60  0000                     _GIE	set	32663
    61  0000                     _PEIE	set	32662
    62                           
    63                           ; #config settings
    64  0000                     
    65                           	psect	cinit
    66  000408                     __pcinit:
    67                           	opt stack 0
    68  000408                     start_initialization:
    69                           	opt stack 0
    70  000408                     __initialization:
    71                           	opt stack 0
    72                           
    73                           ; Clear objects allocated to COMRAM (2 bytes)
    74  000408  6A27               	clrf	(__pbssCOMRAM+1)& (0+255),c
    75  00040A  6A26               	clrf	__pbssCOMRAM& (0+255),c
    76                           
    77                           ; Initialize objects allocated to COMRAM (8 bytes)
    78                           ; load TBLPTR registers with __pidataCOMRAM
    79  00040C  0ED0               	movlw	low __pidataCOMRAM
    80  00040E  6EF6               	movwf	tblptrl,c
    81  000410  0E04               	movlw	high __pidataCOMRAM
    82  000412  6EF7               	movwf	tblptrh,c
    83  000414  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
    84  000416  6EF8               	movwf	tblptru,c
    85  000418  EE00  F01E         	lfsr	0,__pdataCOMRAM
    86  00041C  EE10 F008          	lfsr	1,8
    87  000420                     copy_data0:
    88  000420  0009               	tblrd		*+
    89  000422  CFF5 FFEE          	movff	tablat,postinc0
    90  000426  50E5               	movf	postdec1,w,c
    91  000428  50E1               	movf	fsr1l,w,c
    92  00042A  E1FA               	bnz	copy_data0
    93  00042C                     end_of_initialization:
    94                           	opt stack 0
    95  00042C                     __end_of__initialization:
    96                           	opt stack 0
    97  00042C  9028               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
    98  00042E  9228               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
    99  000430  0100               	movlb	0
   100  000432  EF0D  F000         	goto	_main	;jump to C main() function
   101                           tblptru	equ	0xFF8
   102                           tblptrh	equ	0xFF7
   103                           tblptrl	equ	0xFF6
   104                           tablat	equ	0xFF5
   105                           postinc0	equ	0xFEE
   106                           postdec1	equ	0xFE5
   107                           fsr1l	equ	0xFE1
   108                           
   109                           	psect	bssCOMRAM
   110  000026                     __pbssCOMRAM:
   111                           	opt stack 0
   112  000026                     _a:
   113                           	opt stack 0
   114  000026                     	ds	2
   115                           tblptru	equ	0xFF8
   116                           tblptrh	equ	0xFF7
   117                           tblptrl	equ	0xFF6
   118                           tablat	equ	0xFF5
   119                           postinc0	equ	0xFEE
   120                           postdec1	equ	0xFE5
   121                           fsr1l	equ	0xFE1
   122                           
   123                           	psect	dataCOMRAM
   124  00001E                     __pdataCOMRAM:
   125                           	opt stack 0
   126  00001E                     _b:
   127                           	opt stack 0
   128  00001E                     	ds	2
   129  000020                     _c:
   130                           	opt stack 0
   131  000020                     	ds	2
   132  000022                     _d:
   133                           	opt stack 0
   134  000022                     	ds	2
   135  000024                     _e:
   136                           	opt stack 0
   137  000024                     	ds	2
   138                           tblptru	equ	0xFF8
   139                           tblptrh	equ	0xFF7
   140                           tblptrl	equ	0xFF6
   141                           tablat	equ	0xFF5
   142                           postinc0	equ	0xFEE
   143                           postdec1	equ	0xFE5
   144                           fsr1l	equ	0xFE1
   145                           
   146                           	psect	cstackCOMRAM
   147  000001                     __pcstackCOMRAM:
   148                           	opt stack 0
   149  000001                     ??_T1:
   150  000001                     
   151                           ; 0 bytes @ 0x0
   152  000001                     	ds	14
   153  00000F                     ?___lwmod:
   154                           	opt stack 0
   155  00000F                     lcd_write_com@combuf:
   156                           	opt stack 0
   157  00000F                     lcd_write_data@databuf:
   158                           	opt stack 0
   159  00000F                     delay@t:
   160                           	opt stack 0
   161  00000F                     ___lwmod@dividend:
   162                           	opt stack 0
   163                           
   164                           ; 2 bytes @ 0xE
   165  00000F                     	ds	1
   166  000010                     lcd_write_com_busy@combuf:
   167                           	opt stack 0
   168                           
   169                           ; 1 bytes @ 0xF
   170  000010                     	ds	1
   171  000011                     lcd_write_address@y:
   172                           	opt stack 0
   173  000011                     delay@i:
   174                           	opt stack 0
   175  000011                     ___lwmod@divisor:
   176                           	opt stack 0
   177                           
   178                           ; 2 bytes @ 0x10
   179  000011                     	ds	1
   180  000012                     lcd_write_address@x:
   181                           	opt stack 0
   182                           
   183                           ; 1 bytes @ 0x11
   184  000012                     	ds	1
   185  000013                     ___lwmod@counter:
   186                           	opt stack 0
   187  000013                     delay@j:
   188                           	opt stack 0
   189                           
   190                           ; 2 bytes @ 0x12
   191  000013                     	ds	1
   192  000014                     ?___lwdiv:
   193                           	opt stack 0
   194  000014                     ___lwdiv@dividend:
   195                           	opt stack 0
   196                           
   197                           ; 2 bytes @ 0x13
   198  000014                     	ds	1
   199  000015                     
   200                           ; 0 bytes @ 0x14
   201  000015                     	ds	1
   202  000016                     ___lwdiv@divisor:
   203                           	opt stack 0
   204                           
   205                           ; 2 bytes @ 0x15
   206  000016                     	ds	2
   207  000018                     ___lwdiv@quotient:
   208                           	opt stack 0
   209                           
   210                           ; 2 bytes @ 0x17
   211  000018                     	ds	2
   212  00001A                     ___lwdiv@counter:
   213                           	opt stack 0
   214                           
   215                           ; 1 bytes @ 0x19
   216  00001A                     	ds	1
   217  00001B                     lcd_write_char@y:
   218                           	opt stack 0
   219                           
   220                           ; 1 bytes @ 0x1A
   221  00001B                     	ds	1
   222  00001C                     lcd_write_char@buf:
   223                           	opt stack 0
   224                           
   225                           ; 1 bytes @ 0x1B
   226  00001C                     	ds	1
   227  00001D                     lcd_write_char@x:
   228                           	opt stack 0
   229                           
   230                           ; 1 bytes @ 0x1C
   231  00001D                     	ds	1
   232  00001E                     tblptru	equ	0xFF8
   233                           tblptrh	equ	0xFF7
   234                           tblptrl	equ	0xFF6
   235                           tablat	equ	0xFF5
   236                           postinc0	equ	0xFEE
   237                           postdec1	equ	0xFE5
   238                           fsr1l	equ	0xFE1
   239                           
   240                           ; 0 bytes @ 0x1D
   241 ;;
   242 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   243 ;;
   244 ;; *************** function _main *****************
   245 ;; Defined at:
   246 ;;		line 134 in file "newfile.c"
   247 ;; Parameters:    Size  Location     Type
   248 ;;		None
   249 ;; Auto vars:     Size  Location     Type
   250 ;;		None
   251 ;; Return value:  Size  Location     Type
   252 ;;		None               void
   253 ;; Registers used:
   254 ;;		wreg, status,2, status,0, cstack
   255 ;; Tracked objects:
   256 ;;		On entry : 0/0
   257 ;;		On exit  : 0/0
   258 ;;		Unchanged: 0/0
   259 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   260 ;;      Params:         0       0       0       0       0       0       0       0       0
   261 ;;      Locals:         0       0       0       0       0       0       0       0       0
   262 ;;      Temps:          0       0       0       0       0       0       0       0       0
   263 ;;      Totals:         0       0       0       0       0       0       0       0       0
   264 ;;Total ram usage:        0 bytes
   265 ;; Hardware stack levels required when called:    5
   266 ;; This function calls:
   267 ;;		___lwdiv
   268 ;;		___lwmod
   269 ;;		_lcd_write_char
   270 ;;		_lcdreset
   271 ;;		_timer1init
   272 ;; This function is called by:
   273 ;;		Startup code after reset
   274 ;; This function uses a non-reentrant model
   275 ;;
   276                           
   277                           	psect	text0
   278  00001A                     __ptext0:
   279                           	opt stack 0
   280  00001A                     _main:
   281                           	opt stack 26
   282                           
   283                           ;newfile.c: 136: OSCCON=0X00;
   284                           
   285                           ;incstack = 0
   286  00001A  0E00               	movlw	0
   287  00001C  6ED3               	movwf	4051,c	;volatile
   288                           
   289                           ;newfile.c: 137: ADCON1=0X0f;
   290  00001E  0E0F               	movlw	15
   291  000020  6EC1               	movwf	4033,c	;volatile
   292                           
   293                           ;newfile.c: 138: TRISB=0B11000111;
   294  000022  0EC7               	movlw	199
   295  000024  6E93               	movwf	3987,c	;volatile
   296                           
   297                           ;newfile.c: 139: TRISD=0B00000000;
   298  000026  0E00               	movlw	0
   299  000028  6E95               	movwf	3989,c	;volatile
   300                           
   301                           ;newfile.c: 140: TRISC=0B11111011;
   302  00002A  0EFB               	movlw	251
   303  00002C  6E94               	movwf	3988,c	;volatile
   304                           
   305                           ;newfile.c: 141: lcdreset();
   306  00002E  EC74  F001         	call	_lcdreset	;wreg free
   307                           
   308                           ;newfile.c: 142: timer1init();
   309  000032  EC2E  F002         	call	_timer1init	;wreg free
   310                           
   311                           ;newfile.c: 151: {
   312                           ;newfile.c: 152: lcd_write_char(0,0,0x0a);
   313  000036  0E00               	movlw	0
   314  000038  6E1B               	movwf	lcd_write_char@y,c
   315  00003A  0E0A               	movlw	10
   316  00003C  6E1C               	movwf	lcd_write_char@buf,c
   317  00003E  0E00               	movlw	0
   318  000040  EC45  F002         	call	_lcd_write_char
   319                           
   320                           ;newfile.c: 153: lcd_write_char(4,0,'M');
   321  000044  0E00               	movlw	0
   322  000046  6E1B               	movwf	lcd_write_char@y,c
   323  000048  0E4D               	movlw	77
   324  00004A  6E1C               	movwf	lcd_write_char@buf,c
   325  00004C  0E04               	movlw	4
   326  00004E  EC45  F002         	call	_lcd_write_char
   327                           
   328                           ;newfile.c: 154: lcd_write_char(5,0,'y');
   329  000052  0E00               	movlw	0
   330  000054  6E1B               	movwf	lcd_write_char@y,c
   331  000056  0E79               	movlw	121
   332  000058  6E1C               	movwf	lcd_write_char@buf,c
   333  00005A  0E05               	movlw	5
   334  00005C  EC45  F002         	call	_lcd_write_char
   335                           
   336                           ;newfile.c: 155: lcd_write_char(7,0,'C');
   337  000060  0E00               	movlw	0
   338  000062  6E1B               	movwf	lcd_write_char@y,c
   339  000064  0E43               	movlw	67
   340  000066  6E1C               	movwf	lcd_write_char@buf,c
   341  000068  0E07               	movlw	7
   342  00006A  EC45  F002         	call	_lcd_write_char
   343                           
   344                           ;newfile.c: 156: lcd_write_char(8,0,'l');
   345  00006E  0E00               	movlw	0
   346  000070  6E1B               	movwf	lcd_write_char@y,c
   347  000072  0E6C               	movlw	108
   348  000074  6E1C               	movwf	lcd_write_char@buf,c
   349  000076  0E08               	movlw	8
   350  000078  EC45  F002         	call	_lcd_write_char
   351                           
   352                           ;newfile.c: 157: lcd_write_char(9,0,'o');
   353  00007C  0E00               	movlw	0
   354  00007E  6E1B               	movwf	lcd_write_char@y,c
   355  000080  0E6F               	movlw	111
   356  000082  6E1C               	movwf	lcd_write_char@buf,c
   357  000084  0E09               	movlw	9
   358  000086  EC45  F002         	call	_lcd_write_char
   359                           
   360                           ;newfile.c: 158: lcd_write_char(10,0,'c');
   361  00008A  0E00               	movlw	0
   362  00008C  6E1B               	movwf	lcd_write_char@y,c
   363  00008E  0E63               	movlw	99
   364  000090  6E1C               	movwf	lcd_write_char@buf,c
   365  000092  0E0A               	movlw	10
   366  000094  EC45  F002         	call	_lcd_write_char
   367                           
   368                           ;newfile.c: 159: lcd_write_char(11,0,'k');
   369  000098  0E00               	movlw	0
   370  00009A  6E1B               	movwf	lcd_write_char@y,c
   371  00009C  0E6B               	movlw	107
   372  00009E  6E1C               	movwf	lcd_write_char@buf,c
   373  0000A0  0E0B               	movlw	11
   374  0000A2  EC45  F002         	call	_lcd_write_char
   375                           
   376                           ;newfile.c: 160: lcd_write_char(15,0,0x0a);
   377  0000A6  0E00               	movlw	0
   378  0000A8  6E1B               	movwf	lcd_write_char@y,c
   379  0000AA  0E0A               	movlw	10
   380  0000AC  6E1C               	movwf	lcd_write_char@buf,c
   381  0000AE  0E0F               	movlw	15
   382  0000B0  EC45  F002         	call	_lcd_write_char
   383                           
   384                           ;newfile.c: 161: lcd_write_char(0,1,0x0a);
   385  0000B4  0E01               	movlw	1
   386  0000B6  6E1B               	movwf	lcd_write_char@y,c
   387  0000B8  0E0A               	movlw	10
   388  0000BA  6E1C               	movwf	lcd_write_char@buf,c
   389  0000BC  0E00               	movlw	0
   390  0000BE  EC45  F002         	call	_lcd_write_char
   391                           
   392                           ;newfile.c: 162: lcd_write_char(4,1,(d%60)/10+0x30);
   393  0000C2  0E01               	movlw	1
   394  0000C4  6E1B               	movwf	lcd_write_char@y,c
   395  0000C6  0E00               	movlw	0
   396  0000C8  6E12               	movwf	___lwmod@divisor+1,c
   397  0000CA  0E3C               	movlw	60
   398  0000CC  6E11               	movwf	___lwmod@divisor,c
   399  0000CE  C022  F00F         	movff	_d,___lwmod@dividend
   400  0000D2  C023  F010         	movff	_d+1,___lwmod@dividend+1
   401  0000D6  ECC8  F001         	call	___lwmod	;wreg free
   402  0000DA  C00F  F014         	movff	?___lwmod,___lwdiv@dividend
   403  0000DE  C010  F015         	movff	?___lwmod+1,___lwdiv@dividend+1
   404  0000E2  0E00               	movlw	0
   405  0000E4  6E17               	movwf	___lwdiv@divisor+1,c
   406  0000E6  0E0A               	movlw	10
   407  0000E8  6E16               	movwf	___lwdiv@divisor,c
   408  0000EA  EC9F  F001         	call	___lwdiv	;wreg free
   409  0000EE  5014               	movf	?___lwdiv,w,c
   410  0000F0  0F30               	addlw	48
   411  0000F2  6E1C               	movwf	lcd_write_char@buf,c
   412  0000F4  0E04               	movlw	4
   413  0000F6  EC45  F002         	call	_lcd_write_char
   414                           
   415                           ;newfile.c: 163: lcd_write_char(5,1,(d%10)+0x30);
   416  0000FA  0E01               	movlw	1
   417  0000FC  6E1B               	movwf	lcd_write_char@y,c
   418  0000FE  C022  F00F         	movff	_d,___lwmod@dividend
   419  000102  C023  F010         	movff	_d+1,___lwmod@dividend+1
   420  000106  0E00               	movlw	0
   421  000108  6E12               	movwf	___lwmod@divisor+1,c
   422  00010A  0E0A               	movlw	10
   423  00010C  6E11               	movwf	___lwmod@divisor,c
   424  00010E  ECC8  F001         	call	___lwmod	;wreg free
   425  000112  500F               	movf	?___lwmod,w,c
   426  000114  0F30               	addlw	48
   427  000116  6E1C               	movwf	lcd_write_char@buf,c
   428  000118  0E05               	movlw	5
   429  00011A  EC45  F002         	call	_lcd_write_char
   430                           
   431                           ;newfile.c: 164: lcd_write_char(6,1,0x3a);
   432  00011E  0E01               	movlw	1
   433  000120  6E1B               	movwf	lcd_write_char@y,c
   434  000122  0E3A               	movlw	58
   435  000124  6E1C               	movwf	lcd_write_char@buf,c
   436  000126  0E06               	movlw	6
   437  000128  EC45  F002         	call	_lcd_write_char
   438                           
   439                           ;newfile.c: 165: lcd_write_char(7,1,(c%60)/10+0x30);
   440  00012C  0E01               	movlw	1
   441  00012E  6E1B               	movwf	lcd_write_char@y,c
   442  000130  0E00               	movlw	0
   443  000132  6E12               	movwf	___lwmod@divisor+1,c
   444  000134  0E3C               	movlw	60
   445  000136  6E11               	movwf	___lwmod@divisor,c
   446  000138  C020  F00F         	movff	_c,___lwmod@dividend
   447  00013C  C021  F010         	movff	_c+1,___lwmod@dividend+1
   448  000140  ECC8  F001         	call	___lwmod	;wreg free
   449  000144  C00F  F014         	movff	?___lwmod,___lwdiv@dividend
   450  000148  C010  F015         	movff	?___lwmod+1,___lwdiv@dividend+1
   451  00014C  0E00               	movlw	0
   452  00014E  6E17               	movwf	___lwdiv@divisor+1,c
   453  000150  0E0A               	movlw	10
   454  000152  6E16               	movwf	___lwdiv@divisor,c
   455  000154  EC9F  F001         	call	___lwdiv	;wreg free
   456  000158  5014               	movf	?___lwdiv,w,c
   457  00015A  0F30               	addlw	48
   458  00015C  6E1C               	movwf	lcd_write_char@buf,c
   459  00015E  0E07               	movlw	7
   460  000160  EC45  F002         	call	_lcd_write_char
   461                           
   462                           ;newfile.c: 166: lcd_write_char(8,1,(c%10)+0x30);
   463  000164  0E01               	movlw	1
   464  000166  6E1B               	movwf	lcd_write_char@y,c
   465  000168  C020  F00F         	movff	_c,___lwmod@dividend
   466  00016C  C021  F010         	movff	_c+1,___lwmod@dividend+1
   467  000170  0E00               	movlw	0
   468  000172  6E12               	movwf	___lwmod@divisor+1,c
   469  000174  0E0A               	movlw	10
   470  000176  6E11               	movwf	___lwmod@divisor,c
   471  000178  ECC8  F001         	call	___lwmod	;wreg free
   472  00017C  500F               	movf	?___lwmod,w,c
   473  00017E  0F30               	addlw	48
   474  000180  6E1C               	movwf	lcd_write_char@buf,c
   475  000182  0E08               	movlw	8
   476  000184  EC45  F002         	call	_lcd_write_char
   477                           
   478                           ;newfile.c: 167: lcd_write_char(9,1,0x3a);
   479  000188  0E01               	movlw	1
   480  00018A  6E1B               	movwf	lcd_write_char@y,c
   481  00018C  0E3A               	movlw	58
   482  00018E  6E1C               	movwf	lcd_write_char@buf,c
   483  000190  0E09               	movlw	9
   484  000192  EC45  F002         	call	_lcd_write_char
   485                           
   486                           ;newfile.c: 168: lcd_write_char(10,1,(b%60)/10+0x30);
   487  000196  0E01               	movlw	1
   488  000198  6E1B               	movwf	lcd_write_char@y,c
   489  00019A  0E00               	movlw	0
   490  00019C  6E12               	movwf	___lwmod@divisor+1,c
   491  00019E  0E3C               	movlw	60
   492  0001A0  6E11               	movwf	___lwmod@divisor,c
   493  0001A2  C01E  F00F         	movff	_b,___lwmod@dividend
   494  0001A6  C01F  F010         	movff	_b+1,___lwmod@dividend+1
   495  0001AA  ECC8  F001         	call	___lwmod	;wreg free
   496  0001AE  C00F  F014         	movff	?___lwmod,___lwdiv@dividend
   497  0001B2  C010  F015         	movff	?___lwmod+1,___lwdiv@dividend+1
   498  0001B6  0E00               	movlw	0
   499  0001B8  6E17               	movwf	___lwdiv@divisor+1,c
   500  0001BA  0E0A               	movlw	10
   501  0001BC  6E16               	movwf	___lwdiv@divisor,c
   502  0001BE  EC9F  F001         	call	___lwdiv	;wreg free
   503  0001C2  5014               	movf	?___lwdiv,w,c
   504  0001C4  0F30               	addlw	48
   505  0001C6  6E1C               	movwf	lcd_write_char@buf,c
   506  0001C8  0E0A               	movlw	10
   507  0001CA  EC45  F002         	call	_lcd_write_char
   508                           
   509                           ;newfile.c: 169: lcd_write_char(11,1,(b%10)+0x30);
   510  0001CE  0E01               	movlw	1
   511  0001D0  6E1B               	movwf	lcd_write_char@y,c
   512  0001D2  C01E  F00F         	movff	_b,___lwmod@dividend
   513  0001D6  C01F  F010         	movff	_b+1,___lwmod@dividend+1
   514  0001DA  0E00               	movlw	0
   515  0001DC  6E12               	movwf	___lwmod@divisor+1,c
   516  0001DE  0E0A               	movlw	10
   517  0001E0  6E11               	movwf	___lwmod@divisor,c
   518  0001E2  ECC8  F001         	call	___lwmod	;wreg free
   519  0001E6  500F               	movf	?___lwmod,w,c
   520  0001E8  0F30               	addlw	48
   521  0001EA  6E1C               	movwf	lcd_write_char@buf,c
   522  0001EC  0E0B               	movlw	11
   523  0001EE  EC45  F002         	call	_lcd_write_char
   524                           
   525                           ;newfile.c: 170: lcd_write_char(15,1,0x0a);
   526  0001F2  0E01               	movlw	1
   527  0001F4  6E1B               	movwf	lcd_write_char@y,c
   528  0001F6  0E0A               	movlw	10
   529  0001F8  6E1C               	movwf	lcd_write_char@buf,c
   530  0001FA  0E0F               	movlw	15
   531  0001FC  EC45  F002         	call	_lcd_write_char
   532  000200  EF0B  F000         	goto	start
   533  000204                     __end_of_main:
   534                           	opt stack 0
   535                           tblptru	equ	0xFF8
   536                           tblptrh	equ	0xFF7
   537                           tblptrl	equ	0xFF6
   538                           tablat	equ	0xFF5
   539                           postinc0	equ	0xFEE
   540                           postdec1	equ	0xFE5
   541                           fsr1l	equ	0xFE1
   542                           
   543 ;; *************** function _timer1init *****************
   544 ;; Defined at:
   545 ;;		line 94 in file "newfile.c"
   546 ;; Parameters:    Size  Location     Type
   547 ;;		None
   548 ;; Auto vars:     Size  Location     Type
   549 ;;		None
   550 ;; Return value:  Size  Location     Type
   551 ;;		None               void
   552 ;; Registers used:
   553 ;;		wreg, status,2
   554 ;; Tracked objects:
   555 ;;		On entry : 0/0
   556 ;;		On exit  : 0/0
   557 ;;		Unchanged: 0/0
   558 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   559 ;;      Params:         0       0       0       0       0       0       0       0       0
   560 ;;      Locals:         0       0       0       0       0       0       0       0       0
   561 ;;      Temps:          0       0       0       0       0       0       0       0       0
   562 ;;      Totals:         0       0       0       0       0       0       0       0       0
   563 ;;Total ram usage:        0 bytes
   564 ;; Hardware stack levels used:    1
   565 ;; Hardware stack levels required when called:    1
   566 ;; This function calls:
   567 ;;		Nothing
   568 ;; This function is called by:
   569 ;;		_main
   570 ;; This function uses a non-reentrant model
   571 ;;
   572                           
   573                           	psect	text1
   574  00045C                     __ptext1:
   575                           	opt stack 0
   576  00045C                     _timer1init:
   577                           	opt stack 29
   578                           
   579                           ;newfile.c: 96: T1CON=0X01;
   580                           
   581                           ;incstack = 0
   582  00045C  0E01               	movlw	1
   583  00045E  6ECD               	movwf	4045,c	;volatile
   584                           
   585                           ;newfile.c: 97: TMR1IF=0;
   586  000460  909E               	bcf	3998,0,c	;volatile
   587                           
   588                           ;newfile.c: 98: TMR1IE=1;
   589  000462  809D               	bsf	3997,0,c	;volatile
   590                           
   591                           ;newfile.c: 99: TMR1H=0xFF;
   592  000464  68CF               	setf	4047,c	;volatile
   593                           
   594                           ;newfile.c: 100: TMR1L=0x13;
   595  000466  0E13               	movlw	19
   596  000468  6ECE               	movwf	4046,c	;volatile
   597                           
   598                           ;newfile.c: 101: PIR1=0;
   599  00046A  0E00               	movlw	0
   600  00046C  6E9E               	movwf	3998,c	;volatile
   601                           
   602                           ;newfile.c: 102: PEIE=1;
   603  00046E  8CF2               	bsf	intcon,6,c	;volatile
   604                           
   605                           ;newfile.c: 103: GIE=1;
   606  000470  8EF2               	bsf	intcon,7,c	;volatile
   607  000472  0012               	return		;funcret
   608  000474                     __end_of_timer1init:
   609                           	opt stack 0
   610                           tblptru	equ	0xFF8
   611                           tblptrh	equ	0xFF7
   612                           tblptrl	equ	0xFF6
   613                           tablat	equ	0xFF5
   614                           intcon	equ	0xFF2
   615                           postinc0	equ	0xFEE
   616                           postdec1	equ	0xFE5
   617                           fsr1l	equ	0xFE1
   618                           
   619 ;; *************** function _lcdreset *****************
   620 ;; Defined at:
   621 ;;		line 73 in file "newfile.c"
   622 ;; Parameters:    Size  Location     Type
   623 ;;		None
   624 ;; Auto vars:     Size  Location     Type
   625 ;;		None
   626 ;; Return value:  Size  Location     Type
   627 ;;		None               void
   628 ;; Registers used:
   629 ;;		wreg, status,2, status,0, cstack
   630 ;; Tracked objects:
   631 ;;		On entry : 0/0
   632 ;;		On exit  : 0/0
   633 ;;		Unchanged: 0/0
   634 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   635 ;;      Params:         0       0       0       0       0       0       0       0       0
   636 ;;      Locals:         0       0       0       0       0       0       0       0       0
   637 ;;      Temps:          0       0       0       0       0       0       0       0       0
   638 ;;      Totals:         0       0       0       0       0       0       0       0       0
   639 ;;Total ram usage:        0 bytes
   640 ;; Hardware stack levels used:    1
   641 ;; Hardware stack levels required when called:    3
   642 ;; This function calls:
   643 ;;		_delay
   644 ;;		_lcd_write_com
   645 ;;		_lcd_write_com_busy
   646 ;; This function is called by:
   647 ;;		_main
   648 ;; This function uses a non-reentrant model
   649 ;;
   650                           
   651                           	psect	text2
   652  0002E8                     __ptext2:
   653                           	opt stack 0
   654  0002E8                     _lcdreset:
   655                           	opt stack 27
   656                           
   657                           ;newfile.c: 75: delay(150);
   658                           
   659                           ;incstack = 0
   660  0002E8  0E00               	movlw	0
   661  0002EA  6E10               	movwf	delay@t+1,c
   662  0002EC  0E96               	movlw	150
   663  0002EE  6E0F               	movwf	delay@t,c
   664  0002F0  ECE9  F001         	call	_delay	;wreg free
   665                           
   666                           ;newfile.c: 76: lcd_write_com(0x38);
   667  0002F4  0E38               	movlw	56
   668  0002F6  EC4F  F002         	call	_lcd_write_com
   669                           
   670                           ;newfile.c: 77: delay(50);
   671  0002FA  0E00               	movlw	0
   672  0002FC  6E10               	movwf	delay@t+1,c
   673  0002FE  0E32               	movlw	50
   674  000300  6E0F               	movwf	delay@t,c
   675  000302  ECE9  F001         	call	_delay	;wreg free
   676                           
   677                           ;newfile.c: 78: lcd_write_com(0x38);
   678  000306  0E38               	movlw	56
   679  000308  EC4F  F002         	call	_lcd_write_com
   680                           
   681                           ;newfile.c: 79: delay(50);
   682  00030C  0E00               	movlw	0
   683  00030E  6E10               	movwf	delay@t+1,c
   684  000310  0E32               	movlw	50
   685  000312  6E0F               	movwf	delay@t,c
   686  000314  ECE9  F001         	call	_delay	;wreg free
   687                           
   688                           ;newfile.c: 80: lcd_write_com(0x38);
   689  000318  0E38               	movlw	56
   690  00031A  EC4F  F002         	call	_lcd_write_com
   691                           
   692                           ;newfile.c: 81: lcd_write_com_busy(0x38);
   693  00031E  0E38               	movlw	56
   694  000320  EC61  F002         	call	_lcd_write_com_busy
   695                           
   696                           ;newfile.c: 82: lcd_write_com_busy(0x08);
   697  000324  0E08               	movlw	8
   698  000326  EC61  F002         	call	_lcd_write_com_busy
   699                           
   700                           ;newfile.c: 83: lcd_write_com_busy(0x01);
   701  00032A  0E01               	movlw	1
   702  00032C  EC61  F002         	call	_lcd_write_com_busy
   703                           
   704                           ;newfile.c: 84: lcd_write_com_busy(0x06);
   705  000330  0E06               	movlw	6
   706  000332  EC61  F002         	call	_lcd_write_com_busy
   707                           
   708                           ;newfile.c: 85: lcd_write_com_busy(0x0c);
   709  000336  0E0C               	movlw	12
   710  000338  EC61  F002         	call	_lcd_write_com_busy
   711  00033C  0012               	return		;funcret
   712  00033E                     __end_of_lcdreset:
   713                           	opt stack 0
   714                           tblptru	equ	0xFF8
   715                           tblptrh	equ	0xFF7
   716                           tblptrl	equ	0xFF6
   717                           tablat	equ	0xFF5
   718                           intcon	equ	0xFF2
   719                           postinc0	equ	0xFEE
   720                           postdec1	equ	0xFE5
   721                           fsr1l	equ	0xFE1
   722                           
   723 ;; *************** function _delay *****************
   724 ;; Defined at:
   725 ;;		line 16 in file "newfile.c"
   726 ;; Parameters:    Size  Location     Type
   727 ;;  t               2   14[COMRAM] unsigned int 
   728 ;; Auto vars:     Size  Location     Type
   729 ;;  j               2   18[COMRAM] unsigned int 
   730 ;;  i               2   16[COMRAM] unsigned int 
   731 ;; Return value:  Size  Location     Type
   732 ;;		None               void
   733 ;; Registers used:
   734 ;;		wreg, status,2, status,0
   735 ;; Tracked objects:
   736 ;;		On entry : 0/0
   737 ;;		On exit  : 0/0
   738 ;;		Unchanged: 0/0
   739 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   740 ;;      Params:         2       0       0       0       0       0       0       0       0
   741 ;;      Locals:         4       0       0       0       0       0       0       0       0
   742 ;;      Temps:          0       0       0       0       0       0       0       0       0
   743 ;;      Totals:         6       0       0       0       0       0       0       0       0
   744 ;;Total ram usage:        6 bytes
   745 ;; Hardware stack levels used:    1
   746 ;; Hardware stack levels required when called:    1
   747 ;; This function calls:
   748 ;;		Nothing
   749 ;; This function is called by:
   750 ;;		_lcdreset
   751 ;; This function uses a non-reentrant model
   752 ;;
   753                           
   754                           	psect	text3
   755  0003D2                     __ptext3:
   756                           	opt stack 0
   757  0003D2                     _delay:
   758                           	opt stack 28
   759                           
   760                           ;newfile.c: 18: unsigned int i,j;
   761                           ;newfile.c: 19: for(i=0;i<t;i++)
   762                           
   763                           ;incstack = 0
   764  0003D2  0E00               	movlw	0
   765  0003D4  6E12               	movwf	delay@i+1,c
   766  0003D6  0E00               	movlw	0
   767  0003D8  6E11               	movwf	delay@i,c
   768  0003DA  D00F               	goto	l906
   769  0003DC                     l894:
   770                           
   771                           ;newfile.c: 20: {
   772                           ;newfile.c: 21: for(j=0;j<10;j++);
   773  0003DC  0E00               	movlw	0
   774  0003DE  6E14               	movwf	delay@j+1,c
   775  0003E0  0E00               	movlw	0
   776  0003E2  6E13               	movwf	delay@j,c
   777  0003E4                     l896:
   778  0003E4  5014               	movf	delay@j+1,w,c
   779  0003E6  E107               	bnz	l904
   780  0003E8  0E0A               	movlw	10
   781  0003EA  5C13               	subwf	delay@j,w,c
   782  0003EC  B0D8               	btfsc	status,0,c
   783  0003EE  D003               	goto	l904
   784  0003F0  4A13               	infsnz	delay@j,f,c
   785  0003F2  2A14               	incf	delay@j+1,f,c
   786  0003F4  D7F7               	goto	l896
   787  0003F6                     l904:
   788  0003F6  4A11               	infsnz	delay@i,f,c
   789  0003F8  2A12               	incf	delay@i+1,f,c
   790  0003FA                     l906:
   791  0003FA  500F               	movf	delay@t,w,c
   792  0003FC  5C11               	subwf	delay@i,w,c
   793  0003FE  5010               	movf	delay@t+1,w,c
   794  000400  5812               	subwfb	delay@i+1,w,c
   795  000402  B0D8               	btfsc	status,0,c
   796  000404  0012               	return	
   797  000406  D7EA               	goto	l894
   798  000408                     __end_of_delay:
   799                           	opt stack 0
   800                           tblptru	equ	0xFF8
   801                           tblptrh	equ	0xFF7
   802                           tblptrl	equ	0xFF6
   803                           tablat	equ	0xFF5
   804                           intcon	equ	0xFF2
   805                           postinc0	equ	0xFEE
   806                           postdec1	equ	0xFE5
   807                           fsr1l	equ	0xFE1
   808                           status	equ	0xFD8
   809                           
   810 ;; *************** function _lcd_write_char *****************
   811 ;; Defined at:
   812 ;;		line 88 in file "newfile.c"
   813 ;; Parameters:    Size  Location     Type
   814 ;;  x               1    wreg     unsigned char 
   815 ;;  y               1   26[COMRAM] unsigned char 
   816 ;;  buf             1   27[COMRAM] unsigned char 
   817 ;; Auto vars:     Size  Location     Type
   818 ;;  x               1   28[COMRAM] unsigned char 
   819 ;; Return value:  Size  Location     Type
   820 ;;		None               void
   821 ;; Registers used:
   822 ;;		wreg, status,2, status,0, cstack
   823 ;; Tracked objects:
   824 ;;		On entry : 0/0
   825 ;;		On exit  : 0/0
   826 ;;		Unchanged: 0/0
   827 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   828 ;;      Params:         2       0       0       0       0       0       0       0       0
   829 ;;      Locals:         1       0       0       0       0       0       0       0       0
   830 ;;      Temps:          0       0       0       0       0       0       0       0       0
   831 ;;      Totals:         3       0       0       0       0       0       0       0       0
   832 ;;Total ram usage:        3 bytes
   833 ;; Hardware stack levels used:    1
   834 ;; Hardware stack levels required when called:    4
   835 ;; This function calls:
   836 ;;		_lcd_write_address
   837 ;;		_lcd_write_data
   838 ;; This function is called by:
   839 ;;		_main
   840 ;; This function uses a non-reentrant model
   841 ;;
   842                           
   843                           	psect	text4
   844  00048A                     __ptext4:
   845                           	opt stack 0
   846  00048A                     _lcd_write_char:
   847                           	opt stack 26
   848                           
   849                           ;incstack = 0
   850                           ;lcd_write_char@x stored from wreg
   851  00048A  6E1D               	movwf	lcd_write_char@x,c
   852                           
   853                           ;newfile.c: 90: lcd_write_address(x,y);
   854  00048C  C01B  F011         	movff	lcd_write_char@y,lcd_write_address@y
   855  000490  501D               	movf	lcd_write_char@x,w,c
   856  000492  EC1B  F002         	call	_lcd_write_address
   857                           
   858                           ;newfile.c: 91: lcd_write_data(buf);
   859  000496  501C               	movf	lcd_write_char@buf,w,c
   860  000498  EC3A  F002         	call	_lcd_write_data
   861  00049C  0012               	return		;funcret
   862  00049E                     __end_of_lcd_write_char:
   863                           	opt stack 0
   864                           tblptru	equ	0xFF8
   865                           tblptrh	equ	0xFF7
   866                           tblptrl	equ	0xFF6
   867                           tablat	equ	0xFF5
   868                           intcon	equ	0xFF2
   869                           postinc0	equ	0xFEE
   870                           postdec1	equ	0xFE5
   871                           fsr1l	equ	0xFE1
   872                           status	equ	0xFD8
   873                           
   874 ;; *************** function _lcd_write_data *****************
   875 ;; Defined at:
   876 ;;		line 52 in file "newfile.c"
   877 ;; Parameters:    Size  Location     Type
   878 ;;  databuf         1    wreg     unsigned char 
   879 ;; Auto vars:     Size  Location     Type
   880 ;;  databuf         1   14[COMRAM] unsigned char 
   881 ;; Return value:  Size  Location     Type
   882 ;;		None               void
   883 ;; Registers used:
   884 ;;		wreg, cstack
   885 ;; Tracked objects:
   886 ;;		On entry : 0/0
   887 ;;		On exit  : 0/0
   888 ;;		Unchanged: 0/0
   889 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   890 ;;      Params:         0       0       0       0       0       0       0       0       0
   891 ;;      Locals:         1       0       0       0       0       0       0       0       0
   892 ;;      Temps:          0       0       0       0       0       0       0       0       0
   893 ;;      Totals:         1       0       0       0       0       0       0       0       0
   894 ;;Total ram usage:        1 bytes
   895 ;; Hardware stack levels used:    1
   896 ;; Hardware stack levels required when called:    2
   897 ;; This function calls:
   898 ;;		_lcd_wait_busy
   899 ;; This function is called by:
   900 ;;		_lcd_write_char
   901 ;; This function uses a non-reentrant model
   902 ;;
   903                           
   904                           	psect	text5
   905  000474                     __ptext5:
   906                           	opt stack 0
   907  000474                     _lcd_write_data:
   908                           	opt stack 27
   909                           
   910                           ;incstack = 0
   911                           ;lcd_write_data@databuf stored from wreg
   912  000474  6E0F               	movwf	lcd_write_data@databuf,c
   913                           
   914                           ;newfile.c: 54: lcd_wait_busy();
   915  000476  EC58  F002         	call	_lcd_wait_busy	;wreg free
   916                           
   917                           ;newfile.c: 55: RB5=1;
   918  00047A  8A81               	bsf	3969,5,c	;volatile
   919                           
   920                           ;newfile.c: 56: RB4=0;
   921  00047C  9881               	bcf	3969,4,c	;volatile
   922                           
   923                           ;newfile.c: 57: PORTD=databuf;
   924  00047E  C00F  FF83         	movff	lcd_write_data@databuf,3971	;volatile
   925                           
   926                           ;newfile.c: 58: RB3=1;
   927  000482  8681               	bsf	3969,3,c	;volatile
   928  000484  F000               	nop		;# 
   929                           
   930                           ;newfile.c: 60: RB3=0;
   931  000486  9681               	bcf	3969,3,c	;volatile
   932  000488  0012               	return		;funcret
   933  00048A                     __end_of_lcd_write_data:
   934                           	opt stack 0
   935                           tblptru	equ	0xFF8
   936                           tblptrh	equ	0xFF7
   937                           tblptrl	equ	0xFF6
   938                           tablat	equ	0xFF5
   939                           intcon	equ	0xFF2
   940                           postinc0	equ	0xFEE
   941                           postdec1	equ	0xFE5
   942                           fsr1l	equ	0xFE1
   943                           status	equ	0xFD8
   944                           
   945 ;; *************** function _lcd_write_address *****************
   946 ;; Defined at:
   947 ;;		line 63 in file "newfile.c"
   948 ;; Parameters:    Size  Location     Type
   949 ;;  x               1    wreg     unsigned char 
   950 ;;  y               1   16[COMRAM] unsigned char 
   951 ;; Auto vars:     Size  Location     Type
   952 ;;  x               1   17[COMRAM] unsigned char 
   953 ;; Return value:  Size  Location     Type
   954 ;;		None               void
   955 ;; Registers used:
   956 ;;		wreg, status,2, status,0, cstack
   957 ;; Tracked objects:
   958 ;;		On entry : 0/0
   959 ;;		On exit  : 0/0
   960 ;;		Unchanged: 0/0
   961 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   962 ;;      Params:         1       0       0       0       0       0       0       0       0
   963 ;;      Locals:         1       0       0       0       0       0       0       0       0
   964 ;;      Temps:          0       0       0       0       0       0       0       0       0
   965 ;;      Totals:         2       0       0       0       0       0       0       0       0
   966 ;;Total ram usage:        2 bytes
   967 ;; Hardware stack levels used:    1
   968 ;; Hardware stack levels required when called:    3
   969 ;; This function calls:
   970 ;;		_lcd_write_com_busy
   971 ;; This function is called by:
   972 ;;		_lcd_write_char
   973 ;; This function uses a non-reentrant model
   974 ;;
   975                           
   976                           	psect	text6
   977  000436                     __ptext6:
   978                           	opt stack 0
   979  000436                     _lcd_write_address:
   980                           	opt stack 26
   981                           
   982                           ;incstack = 0
   983                           ;lcd_write_address@x stored from wreg
   984  000436  6E12               	movwf	lcd_write_address@x,c
   985                           
   986                           ;newfile.c: 65: x&=0x0f;
   987  000438  0E0F               	movlw	15
   988  00043A  1612               	andwf	lcd_write_address@x,f,c
   989                           
   990                           ;newfile.c: 66: y&=0x01;
   991  00043C  0E01               	movlw	1
   992  00043E  1611               	andwf	lcd_write_address@y,f,c
   993                           
   994                           ;newfile.c: 67: if(y==0x00)
   995  000440  5011               	movf	lcd_write_address@y,w,c
   996  000442  A4D8               	btfss	status,2,c
   997  000444  D005               	goto	l914
   998                           
   999                           ;newfile.c: 68: lcd_write_com_busy(x|0x80);
  1000  000446  5012               	movf	lcd_write_address@x,w,c
  1001  000448  0980               	iorlw	128
  1002  00044A  EC61  F002         	call	_lcd_write_com_busy
  1003  00044E  0012               	return	
  1004  000450                     l914:
  1005                           
  1006                           ;newfile.c: 69: else
  1007                           ;newfile.c: 70: lcd_write_com_busy((x+0x40)|0x80);
  1008  000450  5012               	movf	lcd_write_address@x,w,c
  1009  000452  0F40               	addlw	64
  1010  000454  0980               	iorlw	128
  1011  000456  EC61  F002         	call	_lcd_write_com_busy
  1012  00045A  0012               	return	
  1013  00045C                     __end_of_lcd_write_address:
  1014                           	opt stack 0
  1015                           tblptru	equ	0xFF8
  1016                           tblptrh	equ	0xFF7
  1017                           tblptrl	equ	0xFF6
  1018                           tablat	equ	0xFF5
  1019                           intcon	equ	0xFF2
  1020                           postinc0	equ	0xFEE
  1021                           postdec1	equ	0xFE5
  1022                           fsr1l	equ	0xFE1
  1023                           status	equ	0xFD8
  1024                           
  1025 ;; *************** function _lcd_write_com_busy *****************
  1026 ;; Defined at:
  1027 ;;		line 46 in file "newfile.c"
  1028 ;; Parameters:    Size  Location     Type
  1029 ;;  combuf          1    wreg     unsigned char 
  1030 ;; Auto vars:     Size  Location     Type
  1031 ;;  combuf          1   15[COMRAM] unsigned char 
  1032 ;; Return value:  Size  Location     Type
  1033 ;;		None               void
  1034 ;; Registers used:
  1035 ;;		wreg, status,2, cstack
  1036 ;; Tracked objects:
  1037 ;;		On entry : 0/0
  1038 ;;		On exit  : 0/0
  1039 ;;		Unchanged: 0/0
  1040 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1041 ;;      Params:         0       0       0       0       0       0       0       0       0
  1042 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1043 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1044 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1045 ;;Total ram usage:        1 bytes
  1046 ;; Hardware stack levels used:    1
  1047 ;; Hardware stack levels required when called:    2
  1048 ;; This function calls:
  1049 ;;		_lcd_wait_busy
  1050 ;;		_lcd_write_com
  1051 ;; This function is called by:
  1052 ;;		_lcd_write_address
  1053 ;;		_lcdreset
  1054 ;; This function uses a non-reentrant model
  1055 ;;
  1056                           
  1057                           	psect	text7
  1058  0004C2                     __ptext7:
  1059                           	opt stack 0
  1060  0004C2                     _lcd_write_com_busy:
  1061                           	opt stack 27
  1062                           
  1063                           ;incstack = 0
  1064                           ;lcd_write_com_busy@combuf stored from wreg
  1065  0004C2  6E10               	movwf	lcd_write_com_busy@combuf,c
  1066                           
  1067                           ;newfile.c: 48: lcd_wait_busy();
  1068  0004C4  EC58  F002         	call	_lcd_wait_busy	;wreg free
  1069                           
  1070                           ;newfile.c: 49: lcd_write_com(combuf);
  1071  0004C8  5010               	movf	lcd_write_com_busy@combuf,w,c
  1072  0004CA  EC4F  F002         	call	_lcd_write_com
  1073  0004CE  0012               	return		;funcret
  1074  0004D0                     __end_of_lcd_write_com_busy:
  1075                           	opt stack 0
  1076                           tblptru	equ	0xFF8
  1077                           tblptrh	equ	0xFF7
  1078                           tblptrl	equ	0xFF6
  1079                           tablat	equ	0xFF5
  1080                           intcon	equ	0xFF2
  1081                           postinc0	equ	0xFEE
  1082                           postdec1	equ	0xFE5
  1083                           fsr1l	equ	0xFE1
  1084                           status	equ	0xFD8
  1085                           
  1086 ;; *************** function _lcd_write_com *****************
  1087 ;; Defined at:
  1088 ;;		line 36 in file "newfile.c"
  1089 ;; Parameters:    Size  Location     Type
  1090 ;;  combuf          1    wreg     unsigned char 
  1091 ;; Auto vars:     Size  Location     Type
  1092 ;;  combuf          1   14[COMRAM] unsigned char 
  1093 ;; Return value:  Size  Location     Type
  1094 ;;		None               void
  1095 ;; Registers used:
  1096 ;;		wreg
  1097 ;; Tracked objects:
  1098 ;;		On entry : 0/0
  1099 ;;		On exit  : 0/0
  1100 ;;		Unchanged: 0/0
  1101 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1102 ;;      Params:         0       0       0       0       0       0       0       0       0
  1103 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1104 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1105 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1106 ;;Total ram usage:        1 bytes
  1107 ;; Hardware stack levels used:    1
  1108 ;; Hardware stack levels required when called:    1
  1109 ;; This function calls:
  1110 ;;		Nothing
  1111 ;; This function is called by:
  1112 ;;		_lcd_write_com_busy
  1113 ;;		_lcdreset
  1114 ;; This function uses a non-reentrant model
  1115 ;;
  1116                           
  1117                           	psect	text8
  1118  00049E                     __ptext8:
  1119                           	opt stack 0
  1120  00049E                     _lcd_write_com:
  1121                           	opt stack 27
  1122                           
  1123                           ;incstack = 0
  1124                           ;lcd_write_com@combuf stored from wreg
  1125  00049E  6E0F               	movwf	lcd_write_com@combuf,c
  1126                           
  1127                           ;newfile.c: 38: RB5=0;
  1128  0004A0  9A81               	bcf	3969,5,c	;volatile
  1129                           
  1130                           ;newfile.c: 39: RB4=0;
  1131  0004A2  9881               	bcf	3969,4,c	;volatile
  1132                           
  1133                           ;newfile.c: 40: PORTD=combuf;
  1134  0004A4  C00F  FF83         	movff	lcd_write_com@combuf,3971	;volatile
  1135                           
  1136                           ;newfile.c: 41: RB3=1;
  1137  0004A8  8681               	bsf	3969,3,c	;volatile
  1138  0004AA  F000               	nop		;# 
  1139                           
  1140                           ;newfile.c: 43: RB3=0;
  1141  0004AC  9681               	bcf	3969,3,c	;volatile
  1142  0004AE  0012               	return		;funcret
  1143  0004B0                     __end_of_lcd_write_com:
  1144                           	opt stack 0
  1145                           tblptru	equ	0xFF8
  1146                           tblptrh	equ	0xFF7
  1147                           tblptrl	equ	0xFF6
  1148                           tablat	equ	0xFF5
  1149                           intcon	equ	0xFF2
  1150                           postinc0	equ	0xFEE
  1151                           postdec1	equ	0xFE5
  1152                           fsr1l	equ	0xFE1
  1153                           status	equ	0xFD8
  1154                           
  1155 ;; *************** function _lcd_wait_busy *****************
  1156 ;; Defined at:
  1157 ;;		line 25 in file "newfile.c"
  1158 ;; Parameters:    Size  Location     Type
  1159 ;;		None
  1160 ;; Auto vars:     Size  Location     Type
  1161 ;;		None
  1162 ;; Return value:  Size  Location     Type
  1163 ;;		None               void
  1164 ;; Registers used:
  1165 ;;		None
  1166 ;; Tracked objects:
  1167 ;;		On entry : 0/0
  1168 ;;		On exit  : 0/0
  1169 ;;		Unchanged: 0/0
  1170 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1171 ;;      Params:         0       0       0       0       0       0       0       0       0
  1172 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1173 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1174 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1175 ;;Total ram usage:        0 bytes
  1176 ;; Hardware stack levels used:    1
  1177 ;; Hardware stack levels required when called:    1
  1178 ;; This function calls:
  1179 ;;		Nothing
  1180 ;; This function is called by:
  1181 ;;		_lcd_write_com_busy
  1182 ;;		_lcd_write_data
  1183 ;; This function uses a non-reentrant model
  1184 ;;
  1185                           
  1186                           	psect	text9
  1187  0004B0                     __ptext9:
  1188                           	opt stack 0
  1189  0004B0                     _lcd_wait_busy:
  1190                           	opt stack 27
  1191                           
  1192                           ;newfile.c: 27: TRISD7=1;
  1193                           
  1194                           ;incstack = 0
  1195  0004B0  8E95               	bsf	3989,7,c	;volatile
  1196                           
  1197                           ;newfile.c: 28: RB5=0;
  1198  0004B2  9A81               	bcf	3969,5,c	;volatile
  1199                           
  1200                           ;newfile.c: 29: RB4=1;
  1201  0004B4  8881               	bsf	3969,4,c	;volatile
  1202                           
  1203                           ;newfile.c: 30: RB3=1;
  1204  0004B6  8681               	bsf	3969,3,c	;volatile
  1205  0004B8                     l59:
  1206  0004B8  BE83               	btfsc	3971,7,c	;volatile
  1207  0004BA  D7FE               	goto	l59
  1208                           
  1209                           ;newfile.c: 32: RB3=0;
  1210  0004BC  9681               	bcf	3969,3,c	;volatile
  1211                           
  1212                           ;newfile.c: 33: TRISD7=0;
  1213  0004BE  9E95               	bcf	3989,7,c	;volatile
  1214  0004C0  0012               	return		;funcret
  1215  0004C2                     __end_of_lcd_wait_busy:
  1216                           	opt stack 0
  1217                           tblptru	equ	0xFF8
  1218                           tblptrh	equ	0xFF7
  1219                           tblptrl	equ	0xFF6
  1220                           tablat	equ	0xFF5
  1221                           intcon	equ	0xFF2
  1222                           postinc0	equ	0xFEE
  1223                           postdec1	equ	0xFE5
  1224                           fsr1l	equ	0xFE1
  1225                           status	equ	0xFD8
  1226                           
  1227 ;; *************** function ___lwmod *****************
  1228 ;; Defined at:
  1229 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwmod.c"
  1230 ;; Parameters:    Size  Location     Type
  1231 ;;  dividend        2   14[COMRAM] unsigned int 
  1232 ;;  divisor         2   16[COMRAM] unsigned int 
  1233 ;; Auto vars:     Size  Location     Type
  1234 ;;  counter         1   18[COMRAM] unsigned char 
  1235 ;; Return value:  Size  Location     Type
  1236 ;;                  2   14[COMRAM] unsigned int 
  1237 ;; Registers used:
  1238 ;;		wreg, status,2, status,0
  1239 ;; Tracked objects:
  1240 ;;		On entry : 0/0
  1241 ;;		On exit  : 0/0
  1242 ;;		Unchanged: 0/0
  1243 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1244 ;;      Params:         4       0       0       0       0       0       0       0       0
  1245 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1246 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1247 ;;      Totals:         5       0       0       0       0       0       0       0       0
  1248 ;;Total ram usage:        5 bytes
  1249 ;; Hardware stack levels used:    1
  1250 ;; Hardware stack levels required when called:    1
  1251 ;; This function calls:
  1252 ;;		Nothing
  1253 ;; This function is called by:
  1254 ;;		_main
  1255 ;; This function uses a non-reentrant model
  1256 ;;
  1257                           
  1258                           	psect	text10
  1259  000390                     __ptext10:
  1260                           	opt stack 0
  1261  000390                     ___lwmod:
  1262                           	opt stack 29
  1263                           
  1264                           ;incstack = 0
  1265  000390  5011               	movf	___lwmod@divisor,w,c
  1266  000392  1012               	iorwf	___lwmod@divisor+1,w,c
  1267  000394  B4D8               	btfsc	status,2,c
  1268  000396  D018               	goto	l509
  1269  000398  0E01               	movlw	1
  1270  00039A  6E13               	movwf	___lwmod@counter,c
  1271  00039C  D004               	goto	l968
  1272  00039E                     l966:
  1273  00039E  90D8               	bcf	status,0,c
  1274  0003A0  3611               	rlcf	___lwmod@divisor,f,c
  1275  0003A2  3612               	rlcf	___lwmod@divisor+1,f,c
  1276  0003A4  2A13               	incf	___lwmod@counter,f,c
  1277  0003A6                     l968:
  1278  0003A6  AE12               	btfss	___lwmod@divisor+1,7,c
  1279  0003A8  D7FA               	goto	l966
  1280  0003AA                     l970:
  1281  0003AA  5011               	movf	___lwmod@divisor,w,c
  1282  0003AC  5C0F               	subwf	___lwmod@dividend,w,c
  1283  0003AE  5012               	movf	___lwmod@divisor+1,w,c
  1284  0003B0  5810               	subwfb	___lwmod@dividend+1,w,c
  1285  0003B2  A0D8               	btfss	status,0,c
  1286  0003B4  D004               	goto	l974
  1287  0003B6  5011               	movf	___lwmod@divisor,w,c
  1288  0003B8  5E0F               	subwf	___lwmod@dividend,f,c
  1289  0003BA  5012               	movf	___lwmod@divisor+1,w,c
  1290  0003BC  5A10               	subwfb	___lwmod@dividend+1,f,c
  1291  0003BE                     l974:
  1292  0003BE  90D8               	bcf	status,0,c
  1293  0003C0  3212               	rrcf	___lwmod@divisor+1,f,c
  1294  0003C2  3211               	rrcf	___lwmod@divisor,f,c
  1295  0003C4  2E13               	decfsz	___lwmod@counter,f,c
  1296  0003C6  D7F1               	goto	l970
  1297  0003C8                     l509:
  1298  0003C8  C00F  F00F         	movff	___lwmod@dividend,?___lwmod
  1299  0003CC  C010  F010         	movff	___lwmod@dividend+1,?___lwmod+1
  1300  0003D0  0012               	return		;funcret
  1301  0003D2                     __end_of___lwmod:
  1302                           	opt stack 0
  1303                           tblptru	equ	0xFF8
  1304                           tblptrh	equ	0xFF7
  1305                           tblptrl	equ	0xFF6
  1306                           tablat	equ	0xFF5
  1307                           intcon	equ	0xFF2
  1308                           postinc0	equ	0xFEE
  1309                           postdec1	equ	0xFE5
  1310                           fsr1l	equ	0xFE1
  1311                           status	equ	0xFD8
  1312                           
  1313 ;; *************** function ___lwdiv *****************
  1314 ;; Defined at:
  1315 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwdiv.c"
  1316 ;; Parameters:    Size  Location     Type
  1317 ;;  dividend        2   19[COMRAM] unsigned int 
  1318 ;;  divisor         2   21[COMRAM] unsigned int 
  1319 ;; Auto vars:     Size  Location     Type
  1320 ;;  quotient        2   23[COMRAM] unsigned int 
  1321 ;;  counter         1   25[COMRAM] unsigned char 
  1322 ;; Return value:  Size  Location     Type
  1323 ;;                  2   19[COMRAM] unsigned int 
  1324 ;; Registers used:
  1325 ;;		wreg, status,2, status,0
  1326 ;; Tracked objects:
  1327 ;;		On entry : 0/0
  1328 ;;		On exit  : 0/0
  1329 ;;		Unchanged: 0/0
  1330 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1331 ;;      Params:         4       0       0       0       0       0       0       0       0
  1332 ;;      Locals:         3       0       0       0       0       0       0       0       0
  1333 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1334 ;;      Totals:         7       0       0       0       0       0       0       0       0
  1335 ;;Total ram usage:        7 bytes
  1336 ;; Hardware stack levels used:    1
  1337 ;; Hardware stack levels required when called:    1
  1338 ;; This function calls:
  1339 ;;		Nothing
  1340 ;; This function is called by:
  1341 ;;		_main
  1342 ;; This function uses a non-reentrant model
  1343 ;;
  1344                           
  1345                           	psect	text11
  1346  00033E                     __ptext11:
  1347                           	opt stack 0
  1348  00033E                     ___lwdiv:
  1349                           	opt stack 29
  1350                           
  1351                           ;incstack = 0
  1352  00033E  0E00               	movlw	0
  1353  000340  6E19               	movwf	___lwdiv@quotient+1,c
  1354  000342  0E00               	movlw	0
  1355  000344  6E18               	movwf	___lwdiv@quotient,c
  1356  000346  5016               	movf	___lwdiv@divisor,w,c
  1357  000348  1017               	iorwf	___lwdiv@divisor+1,w,c
  1358  00034A  B4D8               	btfsc	status,2,c
  1359  00034C  D01C               	goto	l499
  1360  00034E  0E01               	movlw	1
  1361  000350  6E1A               	movwf	___lwdiv@counter,c
  1362  000352  D004               	goto	l948
  1363  000354                     l946:
  1364  000354  90D8               	bcf	status,0,c
  1365  000356  3616               	rlcf	___lwdiv@divisor,f,c
  1366  000358  3617               	rlcf	___lwdiv@divisor+1,f,c
  1367  00035A  2A1A               	incf	___lwdiv@counter,f,c
  1368  00035C                     l948:
  1369  00035C  AE17               	btfss	___lwdiv@divisor+1,7,c
  1370  00035E  D7FA               	goto	l946
  1371  000360                     l950:
  1372  000360  90D8               	bcf	status,0,c
  1373  000362  3618               	rlcf	___lwdiv@quotient,f,c
  1374  000364  3619               	rlcf	___lwdiv@quotient+1,f,c
  1375  000366  5016               	movf	___lwdiv@divisor,w,c
  1376  000368  5C14               	subwf	___lwdiv@dividend,w,c
  1377  00036A  5017               	movf	___lwdiv@divisor+1,w,c
  1378  00036C  5815               	subwfb	___lwdiv@dividend+1,w,c
  1379  00036E  A0D8               	btfss	status,0,c
  1380  000370  D005               	goto	l958
  1381  000372  5016               	movf	___lwdiv@divisor,w,c
  1382  000374  5E14               	subwf	___lwdiv@dividend,f,c
  1383  000376  5017               	movf	___lwdiv@divisor+1,w,c
  1384  000378  5A15               	subwfb	___lwdiv@dividend+1,f,c
  1385  00037A  8018               	bsf	___lwdiv@quotient,0,c
  1386  00037C                     l958:
  1387  00037C  90D8               	bcf	status,0,c
  1388  00037E  3217               	rrcf	___lwdiv@divisor+1,f,c
  1389  000380  3216               	rrcf	___lwdiv@divisor,f,c
  1390  000382  2E1A               	decfsz	___lwdiv@counter,f,c
  1391  000384  D7ED               	goto	l950
  1392  000386                     l499:
  1393  000386  C018  F014         	movff	___lwdiv@quotient,?___lwdiv
  1394  00038A  C019  F015         	movff	___lwdiv@quotient+1,?___lwdiv+1
  1395  00038E  0012               	return		;funcret
  1396  000390                     __end_of___lwdiv:
  1397                           	opt stack 0
  1398                           tblptru	equ	0xFF8
  1399                           tblptrh	equ	0xFF7
  1400                           tblptrl	equ	0xFF6
  1401                           tablat	equ	0xFF5
  1402                           intcon	equ	0xFF2
  1403                           postinc0	equ	0xFEE
  1404                           postdec1	equ	0xFE5
  1405                           fsr1l	equ	0xFE1
  1406                           status	equ	0xFD8
  1407                           
  1408 ;; *************** function _T1 *****************
  1409 ;; Defined at:
  1410 ;;		line 106 in file "newfile.c"
  1411 ;; Parameters:    Size  Location     Type
  1412 ;;		None
  1413 ;; Auto vars:     Size  Location     Type
  1414 ;;		None
  1415 ;; Return value:  Size  Location     Type
  1416 ;;		None               void
  1417 ;; Registers used:
  1418 ;;		wreg, status,2, status,0
  1419 ;; Tracked objects:
  1420 ;;		On entry : 0/0
  1421 ;;		On exit  : 0/0
  1422 ;;		Unchanged: 0/0
  1423 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1424 ;;      Params:         0       0       0       0       0       0       0       0       0
  1425 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1426 ;;      Temps:         14       0       0       0       0       0       0       0       0
  1427 ;;      Totals:        14       0       0       0       0       0       0       0       0
  1428 ;;Total ram usage:       14 bytes
  1429 ;; Hardware stack levels used:    1
  1430 ;; This function calls:
  1431 ;;		Nothing
  1432 ;; This function is called by:
  1433 ;;		Interrupt level 2
  1434 ;; This function uses a non-reentrant model
  1435 ;;
  1436                           
  1437                           	psect	intcode
  1438  000008                     __pintcode:
  1439                           	opt stack 0
  1440  000008                     _T1:
  1441                           	opt stack 26
  1442                           
  1443                           ;incstack = 0
  1444  000008  8228               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  1445  00000A  CFFA F001          	movff	pclath,??_T1
  1446  00000E  CFFB F002          	movff	pclatu,??_T1+1
  1447  000012  ED02  F001         	call	int_func,f	;refresh shadow registers
  1448                           pclatu	equ	0xFFB
  1449                           pclath	equ	0xFFA
  1450                           tblptru	equ	0xFF8
  1451                           tblptrh	equ	0xFF7
  1452                           tblptrl	equ	0xFF6
  1453                           tablat	equ	0xFF5
  1454                           intcon	equ	0xFF2
  1455                           postinc0	equ	0xFEE
  1456                           postdec1	equ	0xFE5
  1457                           fsr1l	equ	0xFE1
  1458                           status	equ	0xFD8
  1459                           
  1460                           	psect	intcode_body
  1461  000204                     __pintcode_body:
  1462                           	opt stack 26
  1463  000204                     int_func:
  1464                           	opt stack 26
  1465  000204  0006               	pop		; remove dummy address from shadow register refresh
  1466  000206  CFE9 F003          	movff	fsr0l,??_T1+2
  1467  00020A  CFEA F004          	movff	fsr0h,??_T1+3
  1468  00020E  CFE1 F005          	movff	fsr1l,??_T1+4
  1469  000212  CFE2 F006          	movff	fsr1h,??_T1+5
  1470  000216  CFD9 F007          	movff	fsr2l,??_T1+6
  1471  00021A  CFDA F008          	movff	fsr2h,??_T1+7
  1472  00021E  CFF3 F009          	movff	prodl,??_T1+8
  1473  000222  CFF4 F00A          	movff	prodh,??_T1+9
  1474  000226  CFF6 F00B          	movff	tblptrl,??_T1+10
  1475  00022A  CFF7 F00C          	movff	tblptrh,??_T1+11
  1476  00022E  CFF8 F00D          	movff	tblptru,??_T1+12
  1477  000232  CFF5 F00E          	movff	tablat,??_T1+13
  1478                           
  1479                           ;newfile.c: 108: if(TMR1IF==1)
  1480  000236  A09E               	btfss	3998,0,c	;volatile
  1481  000238  D039               	goto	i2l93
  1482                           
  1483                           ;newfile.c: 109: {
  1484                           ;newfile.c: 110: TMR1H=0XFF;
  1485  00023A  68CF               	setf	4047,c	;volatile
  1486                           
  1487                           ;newfile.c: 111: TMR1L=0x13;
  1488  00023C  0E13               	movlw	19
  1489  00023E  6ECE               	movwf	4046,c	;volatile
  1490                           
  1491                           ;newfile.c: 112: TMR1IF=0;
  1492  000240  909E               	bcf	3998,0,c	;volatile
  1493                           
  1494                           ;newfile.c: 113: if(++a>4000)
  1495  000242  4A26               	infsnz	_a,f,c
  1496  000244  2A27               	incf	_a+1,f,c
  1497  000246  0EA1               	movlw	161
  1498  000248  5C26               	subwf	_a,w,c
  1499  00024A  0E0F               	movlw	15
  1500  00024C  5827               	subwfb	_a+1,w,c
  1501  00024E  A0D8               	btfss	status,0,c
  1502  000250  D02D               	goto	i2l93
  1503                           
  1504                           ;newfile.c: 114: {
  1505                           ;newfile.c: 115: a=0;
  1506  000252  0E00               	movlw	0
  1507  000254  6E27               	movwf	_a+1,c
  1508  000256  0E00               	movlw	0
  1509  000258  6E26               	movwf	_a,c
  1510                           
  1511                           ;newfile.c: 117: if(--b<1&&c>0)
  1512  00025A  061E               	decf	_b,f,c
  1513  00025C  A0D8               	btfss	status,0,c
  1514  00025E  061F               	decf	_b+1,f,c
  1515  000260  501E               	movf	_b,w,c
  1516  000262  101F               	iorwf	_b+1,w,c
  1517  000264  A4D8               	btfss	status,2,c
  1518  000266  D022               	goto	i2l93
  1519  000268  5020               	movf	_c,w,c
  1520  00026A  1021               	iorwf	_c+1,w,c
  1521  00026C  B4D8               	btfsc	status,2,c
  1522  00026E  D01E               	goto	i2l93
  1523                           
  1524                           ;newfile.c: 118: {
  1525                           ;newfile.c: 119: b=59;
  1526  000270  0E00               	movlw	0
  1527  000272  6E1F               	movwf	_b+1,c
  1528  000274  0E3B               	movlw	59
  1529  000276  6E1E               	movwf	_b,c
  1530                           
  1531                           ;newfile.c: 120: c=--c;
  1532  000278  0620               	decf	_c,f,c
  1533  00027A  A0D8               	btfss	status,0,c
  1534  00027C  0621               	decf	_c+1,f,c
  1535  00027E  C020  F020         	movff	_c,_c
  1536  000282  C021  F021         	movff	_c+1,_c+1
  1537                           
  1538                           ;newfile.c: 121: if(c<1&&d>0)
  1539  000286  5020               	movf	_c,w,c
  1540  000288  1021               	iorwf	_c+1,w,c
  1541  00028A  A4D8               	btfss	status,2,c
  1542  00028C  D00F               	goto	i2l93
  1543  00028E  5022               	movf	_d,w,c
  1544  000290  1023               	iorwf	_d+1,w,c
  1545  000292  B4D8               	btfsc	status,2,c
  1546  000294  D00B               	goto	i2l93
  1547                           
  1548                           ;newfile.c: 122: {
  1549                           ;newfile.c: 123: c=59;
  1550  000296  0E00               	movlw	0
  1551  000298  6E21               	movwf	_c+1,c
  1552  00029A  0E3B               	movlw	59
  1553  00029C  6E20               	movwf	_c,c
  1554                           
  1555                           ;newfile.c: 124: d=--d;
  1556  00029E  0622               	decf	_d,f,c
  1557  0002A0  A0D8               	btfss	status,0,c
  1558  0002A2  0623               	decf	_d+1,f,c
  1559  0002A4  C022  F022         	movff	_d,_d
  1560  0002A8  C023  F023         	movff	_d+1,_d+1
  1561  0002AC                     i2l93:
  1562  0002AC  C00E  FFF5         	movff	??_T1+13,tablat
  1563  0002B0  C00D  FFF8         	movff	??_T1+12,tblptru
  1564  0002B4  C00C  FFF7         	movff	??_T1+11,tblptrh
  1565  0002B8  C00B  FFF6         	movff	??_T1+10,tblptrl
  1566  0002BC  C00A  FFF4         	movff	??_T1+9,prodh
  1567  0002C0  C009  FFF3         	movff	??_T1+8,prodl
  1568  0002C4  C008  FFDA         	movff	??_T1+7,fsr2h
  1569  0002C8  C007  FFD9         	movff	??_T1+6,fsr2l
  1570  0002CC  C006  FFE2         	movff	??_T1+5,fsr1h
  1571  0002D0  C005  FFE1         	movff	??_T1+4,fsr1l
  1572  0002D4  C004  FFEA         	movff	??_T1+3,fsr0h
  1573  0002D8  C003  FFE9         	movff	??_T1+2,fsr0l
  1574  0002DC  C002  FFFB         	movff	??_T1+1,pclatu
  1575  0002E0  C001  FFFA         	movff	??_T1,pclath
  1576  0002E4  9228               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  1577  0002E6  0011               	retfie		f
  1578  0002E8                     __end_of_T1:
  1579                           	opt stack 0
  1580  0000                     pclatu	equ	0xFFB
  1581                           pclath	equ	0xFFA
  1582                           tblptru	equ	0xFF8
  1583                           tblptrh	equ	0xFF7
  1584                           tblptrl	equ	0xFF6
  1585                           tablat	equ	0xFF5
  1586                           prodh	equ	0xFF4
  1587                           prodl	equ	0xFF3
  1588                           intcon	equ	0xFF2
  1589                           postinc0	equ	0xFEE
  1590                           fsr0h	equ	0xFEA
  1591                           fsr0l	equ	0xFE9
  1592                           postdec1	equ	0xFE5
  1593                           fsr1h	equ	0xFE2
  1594                           fsr1l	equ	0xFE1
  1595                           fsr2h	equ	0xFDA
  1596                           fsr2l	equ	0xFD9
  1597                           status	equ	0xFD8
  1598                           pclatu	equ	0xFFB
  1599                           pclath	equ	0xFFA
  1600                           tblptru	equ	0xFF8
  1601                           tblptrh	equ	0xFF7
  1602                           tblptrl	equ	0xFF6
  1603                           tablat	equ	0xFF5
  1604                           prodh	equ	0xFF4
  1605                           prodl	equ	0xFF3
  1606                           intcon	equ	0xFF2
  1607                           postinc0	equ	0xFEE
  1608                           fsr0h	equ	0xFEA
  1609                           fsr0l	equ	0xFE9
  1610                           postdec1	equ	0xFE5
  1611                           fsr1h	equ	0xFE2
  1612                           fsr1l	equ	0xFE1
  1613                           fsr2h	equ	0xFDA
  1614                           fsr2l	equ	0xFD9
  1615                           status	equ	0xFD8
  1616                           
  1617                           	psect	rparam
  1618  0000                     pclatu	equ	0xFFB
  1619                           pclath	equ	0xFFA
  1620                           tblptru	equ	0xFF8
  1621                           tblptrh	equ	0xFF7
  1622                           tblptrl	equ	0xFF6
  1623                           tablat	equ	0xFF5
  1624                           prodh	equ	0xFF4
  1625                           prodl	equ	0xFF3
  1626                           intcon	equ	0xFF2
  1627                           postinc0	equ	0xFEE
  1628                           fsr0h	equ	0xFEA
  1629                           fsr0l	equ	0xFE9
  1630                           postdec1	equ	0xFE5
  1631                           fsr1h	equ	0xFE2
  1632                           fsr1l	equ	0xFE1
  1633                           fsr2h	equ	0xFDA
  1634                           fsr2l	equ	0xFD9
  1635                           status	equ	0xFD8
  1636                           
  1637                           	psect	temp
  1638  000028                     btemp:
  1639                           	opt stack 0
  1640  000028                     	ds	1
  1641  0000                     int$flags	set	btemp
  1642                           pclatu	equ	0xFFB
  1643                           pclath	equ	0xFFA
  1644                           tblptru	equ	0xFF8
  1645                           tblptrh	equ	0xFF7
  1646                           tblptrl	equ	0xFF6
  1647                           tablat	equ	0xFF5
  1648                           prodh	equ	0xFF4
  1649                           prodl	equ	0xFF3
  1650                           intcon	equ	0xFF2
  1651                           postinc0	equ	0xFEE
  1652                           fsr0h	equ	0xFEA
  1653                           fsr0l	equ	0xFE9
  1654                           postdec1	equ	0xFE5
  1655                           fsr1h	equ	0xFE2
  1656                           fsr1l	equ	0xFE1
  1657                           fsr2h	equ	0xFDA
  1658                           fsr2l	equ	0xFD9
  1659                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        8
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     29      39
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           239      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_lcd_write_char
    _lcdreset->_delay
    _lcd_write_char->___lwdiv
    _lcd_write_address->_lcd_write_com_busy
    _lcd_write_com_busy->_lcd_write_com
    ___lwdiv->___lwmod

Critical Paths under _T1 in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _T1 in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _T1 in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _T1 in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _T1 in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _T1 in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _T1 in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _T1 in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _T1 in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    3217
                            ___lwdiv
                            ___lwmod
                     _lcd_write_char
                           _lcdreset
                         _timer1init
 ---------------------------------------------------------------------------------
 (1) _timer1init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _lcdreset                                             0     0      0     266
                              _delay
                      _lcd_write_com
                 _lcd_write_com_busy
 ---------------------------------------------------------------------------------
 (2) _delay                                                6     4      2     221
                                             14 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (1) _lcd_write_char                                       3     1      2    1856
                                             26 COMRAM     3     1      2
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
                  _lcd_write_address
                     _lcd_write_data
 ---------------------------------------------------------------------------------
 (2) _lcd_write_data                                       1     1      0      15
                                             14 COMRAM     1     1      0
                      _lcd_wait_busy
 ---------------------------------------------------------------------------------
 (2) _lcd_write_address                                    2     1      1     141
                                             16 COMRAM     2     1      1
                 _lcd_write_com_busy
 ---------------------------------------------------------------------------------
 (2) _lcd_write_com_busy                                   1     1      0      30
                                             15 COMRAM     1     1      0
                      _lcd_wait_busy
                      _lcd_write_com
 ---------------------------------------------------------------------------------
 (3) _lcd_write_com                                        1     1      0      15
                                             14 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _lcd_wait_busy                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) ___lwmod                                              5     1      4     675
                                             14 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (1) ___lwdiv                                              7     3      4     420
                                             19 COMRAM     7     3      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _T1                                                  14    14      0       0
                                              0 COMRAM    14    14      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___lwdiv
     ___lwmod (ARG)
   ___lwmod
   _lcd_write_char
     ___lwdiv (ARG)
       ___lwmod (ARG)
     ___lwmod (ARG)
     _lcd_write_address (ARG)
       _lcd_write_com_busy
         _lcd_wait_busy
         _lcd_write_com
     _lcd_write_data (ARG)
       _lcd_wait_busy
   _lcdreset
     _delay
     _lcd_write_com
     _lcd_write_com_busy
       _lcd_wait_busy
       _lcd_write_com
   _timer1init

 _T1 (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM_1           400      0       0      21        0.0%
BIGRAM             3EE      0       0      22        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK3            EF      0       0      12        0.0%
BANK3               EF      0       0      10        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     1D      27       1       41.5%
BITSFR_5             0      0       0      40        0.0%
SFR_5                0      0       0      40        0.0%
BITSFR_4             0      0       0      40        0.0%
SFR_4                0      0       0      40        0.0%
BITSFR_3             0      0       0      40        0.0%
SFR_3                0      0       0      40        0.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      27      11        0.0%
DATA                 0      0      27       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Tue Aug 25 23:49:00 2015

                          _a 0026                            _b 001E                            _c 0020  
                          _d 0022                            _e 0024                           l59 04B8  
                         _T1 0008                  __CFG_BORV$1 000000                          ?_T1 0001  
                        l509 03C8                          l904 03F6                          l914 0450  
                        l906 03FA                          l499 0386                          l950 0360  
                        l946 0354                          l970 03AA                          l948 035C  
                        l958 037C                          l974 03BE                          l966 039E  
                        l894 03DC                          l968 03A6                          l896 03E4  
                        _GIE 007F97                          _RB3 007C0B                          _RB4 007C0C  
                        _RB5 007C0D                          _RD7 007C1F               ?_lcd_wait_busy 0001  
               __CFG_FOSC$HS 000000                         ??_T1 0001                 __CFG_LVP$OFF 000000  
               __CFG_WDT$OFF 000000                         _PEIE 007F96                         _PIR1 000F9E  
                       i2l93 02AC              lcd_write_char@x 001D              lcd_write_char@y 001B  
      lcd_write_data@databuf 000F       __end_of_lcd_write_char 049E       __end_of_lcd_write_data 048A  
                       _main 001A                         fsr0h 000FEA                         fsr1h 000FE2  
                       fsr0l 000FE9                         fsr2h 000FDA                         fsr1l 000FE1  
                       fsr2l 000FD9                         btemp 0028                         pclat 000FFA  
                       prodh 000FF4                         prodl 000FF3               ?_lcd_write_com 0001  
                       start 0016                __CFG_MCLRE$ON 000000                 ___param_bank 000010  
                      ?_main 0001                        _T1CON 000FCD              __end_of___lwdiv 0390  
            __end_of___lwmod 03D2                        _TMR1H 000FCF                        _TMR1L 000FCE  
                      _PORTD 000F83                        _TRISB 000F93                        _TRISC 000F94  
                      _TRISD 000F95                        _delay 03D2                        tablat 000FF5  
            ?_lcd_write_char 001B              ?_lcd_write_data 0001                        status 000FD8  
 __size_of_lcd_write_address 0026              __initialization 0408                 __end_of_main 0204  
            ??_lcd_wait_busy 000F                       ??_main 001E                __activetblptr 000000  
                     ?_delay 000F                       _ADCON1 000FC1                       _OSCCON 000FD3  
                     _TMR1IE 007CE8                       _TMR1IF 007CF0              ??_lcd_write_com 000F  
                     _TRISD7 007CAF            lcd_write_char@buf 001C               __CFG_XINST$OFF 000000  
           __end_of_lcdreset 033E                    ??___lwdiv 0018                    ??___lwmod 0013  
                     delay@i 0011                       delay@j 0013                       delay@t 000F  
               __pdataCOMRAM 001E                       tblptrh 000FF7                       tblptrl 000FF6  
                     tblptru 000FF8     lcd_write_com_busy@combuf 0010                   __accesstop 0060  
    __end_of__initialization 042C              __CFG_PBADEN$OFF 000000                ___rparam_used 000001  
__size_of_lcd_write_com_busy 000E               __pcstackCOMRAM 0001                __end_of_delay 0408  
                 __end_of_T1 02E8                      ??_delay 0011             ??_lcd_write_char 001D  
           ??_lcd_write_data 000F           lcd_write_address@x 0012           lcd_write_address@y 0011  
                  ?_lcdreset 0001                      __Hparam 0000                      __Lparam 0000  
                    ___lwdiv 033E                      ___lwmod 0390                      __pcinit 0408  
                    __ramtop 0800                      __ptext0 001A                      __ptext1 045C  
                    __ptext2 02E8                      __ptext3 03D2                      __ptext4 048A  
                    __ptext5 0474                      __ptext6 0436                      __ptext7 04C2  
                    __ptext8 049E                      __ptext9 04B0               __pintcode_body 0204  
       end_of_initialization 042C                   ??_lcdreset 0015                      int_func 0204  
                    postdec1 000FE5                      postinc0 000FEE                   _timer1init 045C  
      __end_of_lcd_wait_busy 04C2        __end_of_lcd_write_com 04B0                __pidataCOMRAM 04D0  
        start_initialization 0408   __end_of_lcd_write_com_busy 04D0                  ?_timer1init 0001  
         __CFG_BOR$ON_ACTIVE 000000                  __pbssCOMRAM 0026            __size_of_lcdreset 0056  
           ___lwdiv@dividend 0014                    __pintcode 0008                     ?___lwdiv 0014  
                   ?___lwmod 000F             ___lwdiv@quotient 0018               __size_of_delay 0036  
        __size_of_timer1init 0018                  __size_of_T1 02E0                    copy_data0 0420  
        lcd_write_com@combuf 000F      __size_of_lcd_write_char 0014      __size_of_lcd_write_data 0016  
                   __Hrparam 0000                     __Lrparam 0000             __size_of___lwdiv 0052  
           __size_of___lwmod 0042              ___lwdiv@divisor 0016              ___lwdiv@counter 001A  
                   __ptext10 0390                     __ptext11 033E                     _lcdreset 02E8  
              __size_of_main 01EA       __size_of_lcd_wait_busy 0012                 ??_timer1init 000F  
                   int$flags 0028           _lcd_write_com_busy 04C2       __size_of_lcd_write_com 0012  
        ?_lcd_write_com_busy 0001                     intlevel2 0000           __end_of_timer1init 0474  
           ___lwmod@dividend 000F         ??_lcd_write_com_busy 0010            _lcd_write_address 0436  
         ?_lcd_write_address 0011          ??_lcd_write_address 0012              ___lwmod@divisor 0011  
              _lcd_wait_busy 04B0              ___lwmod@counter 0013               _lcd_write_char 048A  
             _lcd_write_data 0474    __end_of_lcd_write_address 045C                _lcd_write_com 049E  
