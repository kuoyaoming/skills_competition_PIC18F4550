

Microchip Technology PIC18 LITE Macro Assembler V1.35 build -356382666 
                                                                                               Tue Aug 25 14:56:45 2015

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
     7                           	psect	text0,global,reloc=2,class=CODE,delta=1
     8                           	psect	text1,global,reloc=2,class=CODE,delta=1
     9                           	psect	text2,global,reloc=2,class=CODE,delta=1
    10                           	psect	text3,global,reloc=2,class=CODE,delta=1
    11                           	psect	text4,global,reloc=2,class=CODE,delta=1
    12                           	psect	text5,global,reloc=2,class=CODE,delta=1
    13                           	psect	text6,global,reloc=2,class=CODE,delta=1
    14                           	psect	text7,global,reloc=2,class=CODE,delta=1
    15                           	psect	text8,global,reloc=2,class=CODE,delta=1
    16                           	psect	text9,global,reloc=2,class=CODE,delta=1
    17                           	psect	text10,global,reloc=2,class=CODE,delta=1
    18                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    19                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    20  0000                     _ADCON1	set	4033
    21  0000                     _OSCCON	set	4051
    22  0000                     _PORTD	set	3971
    23  0000                     _TRISB	set	3987
    24  0000                     _TRISD	set	3989
    25  0000                     _RB3	set	31755
    26  0000                     _RB4	set	31756
    27  0000                     _RB5	set	31757
    28  0000                     _RD7	set	31775
    29  0000                     _TRISD7	set	31919
    30                           
    31                           ; #config settings
    32  0000                     
    33                           	psect	cinit
    34  007CDC                     __pcinit:
    35                           	opt stack 0
    36  007CDC                     start_initialization:
    37                           	opt stack 0
    38  007CDC                     __initialization:
    39                           	opt stack 0
    40  007CDC                     end_of_initialization:
    41                           	opt stack 0
    42  007CDC                     __end_of__initialization:
    43                           	opt stack 0
    44  007CDC  0100               	movlb	0
    45  007CDE  EF73  F03F         	goto	_main	;jump to C main() function
    46                           
    47                           	psect	cstackCOMRAM
    48  000001                     __pcstackCOMRAM:
    49                           	opt stack 0
    50  000001                     ?___awmod:
    51                           	opt stack 0
    52  000001                     lcd_write_com@combuf:
    53                           	opt stack 0
    54  000001                     lcd_write_data@databuf:
    55                           	opt stack 0
    56  000001                     delay@t:
    57                           	opt stack 0
    58  000001                     ___awmod@dividend:
    59                           	opt stack 0
    60                           
    61                           ; 2 bytes @ 0x0
    62  000001                     	ds	1
    63  000002                     lcd_write_com_busy@combuf:
    64                           	opt stack 0
    65                           
    66                           ; 1 bytes @ 0x1
    67  000002                     	ds	1
    68  000003                     lcd_write_address@y:
    69                           	opt stack 0
    70  000003                     delay@i:
    71                           	opt stack 0
    72  000003                     ___awmod@divisor:
    73                           	opt stack 0
    74                           
    75                           ; 2 bytes @ 0x2
    76  000003                     	ds	1
    77  000004                     lcd_write_address@x:
    78                           	opt stack 0
    79                           
    80                           ; 1 bytes @ 0x3
    81  000004                     	ds	1
    82  000005                     ___awmod@counter:
    83                           	opt stack 0
    84  000005                     delay@j:
    85                           	opt stack 0
    86                           
    87                           ; 2 bytes @ 0x4
    88  000005                     	ds	1
    89  000006                     ___awmod@sign:
    90                           	opt stack 0
    91                           
    92                           ; 1 bytes @ 0x5
    93  000006                     	ds	1
    94  000007                     ?___awdiv:
    95                           	opt stack 0
    96  000007                     ___awdiv@dividend:
    97                           	opt stack 0
    98                           
    99                           ; 2 bytes @ 0x6
   100  000007                     	ds	2
   101  000009                     ___awdiv@divisor:
   102                           	opt stack 0
   103                           
   104                           ; 2 bytes @ 0x8
   105  000009                     	ds	2
   106  00000B                     ___awdiv@counter:
   107                           	opt stack 0
   108                           
   109                           ; 1 bytes @ 0xA
   110  00000B                     	ds	1
   111  00000C                     ___awdiv@sign:
   112                           	opt stack 0
   113                           
   114                           ; 1 bytes @ 0xB
   115  00000C                     	ds	1
   116  00000D                     ___awdiv@quotient:
   117                           	opt stack 0
   118                           
   119                           ; 2 bytes @ 0xC
   120  00000D                     	ds	2
   121  00000F                     lcd_write_char@y:
   122                           	opt stack 0
   123                           
   124                           ; 1 bytes @ 0xE
   125  00000F                     	ds	1
   126  000010                     lcd_write_char@buf:
   127                           	opt stack 0
   128                           
   129                           ; 1 bytes @ 0xF
   130  000010                     	ds	1
   131  000011                     lcd_write_char@x:
   132                           	opt stack 0
   133                           
   134                           ; 1 bytes @ 0x10
   135  000011                     	ds	1
   136  000012                     main@buf1:
   137                           	opt stack 0
   138                           
   139                           ; 2 bytes @ 0x11
   140  000012                     	ds	2
   141  000014                     main@buf2:
   142                           	opt stack 0
   143                           
   144                           ; 1 bytes @ 0x13
   145  000014                     	ds	1
   146                           
   147 ;;
   148 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   149 ;;
   150 ;; *************** function _main *****************
   151 ;; Defined at:
   152 ;;		line 148 in file "newfile.c"
   153 ;; Parameters:    Size  Location     Type
   154 ;;		None
   155 ;; Auto vars:     Size  Location     Type
   156 ;;  buf1            2   17[COMRAM] unsigned int 
   157 ;;  buf2            1   19[COMRAM] unsigned char 
   158 ;; Return value:  Size  Location     Type
   159 ;;		None               void
   160 ;; Registers used:
   161 ;;		wreg, status,2, status,0, cstack
   162 ;; Tracked objects:
   163 ;;		On entry : 0/0
   164 ;;		On exit  : 0/0
   165 ;;		Unchanged: 0/0
   166 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   167 ;;      Params:         0       0       0       0       0       0       0       0       0
   168 ;;      Locals:         3       0       0       0       0       0       0       0       0
   169 ;;      Temps:          0       0       0       0       0       0       0       0       0
   170 ;;      Totals:         3       0       0       0       0       0       0       0       0
   171 ;;Total ram usage:        3 bytes
   172 ;; Hardware stack levels required when called:    4
   173 ;; This function calls:
   174 ;;		___awdiv
   175 ;;		___awmod
   176 ;;		_lcd_write_char
   177 ;;		_lcdreset
   178 ;; This function is called by:
   179 ;;		Startup code after reset
   180 ;; This function uses a non-reentrant model
   181 ;;
   182                           
   183                           	psect	text0
   184  007EE6                     __ptext0:
   185                           	opt stack 0
   186  007EE6                     _main:
   187                           	opt stack 27
   188                           
   189                           ;newfile.c: 150: unsigned int buf1;
   190                           ;newfile.c: 151: unsigned char buf2;
   191                           ;newfile.c: 152: OSCCON=0X00;
   192                           
   193                           ;incstack = 0
   194  007EE6  0E00               	movlw	0
   195  007EE8  6ED3               	movwf	4051,c	;volatile
   196                           
   197                           ;newfile.c: 153: ADCON1=0X0f;
   198  007EEA  0E0F               	movlw	15
   199  007EEC  6EC1               	movwf	4033,c	;volatile
   200                           
   201                           ;newfile.c: 154: TRISB=0B11000111;
   202  007EEE  0EC7               	movlw	199
   203  007EF0  6E93               	movwf	3987,c	;volatile
   204                           
   205                           ;newfile.c: 155: TRISD=0B00000000;
   206  007EF2  0E00               	movlw	0
   207  007EF4  6E95               	movwf	3989,c	;volatile
   208                           
   209                           ;newfile.c: 156: lcdreset();
   210  007EF6  ECCE  F03E         	call	_lcdreset	;wreg free
   211                           
   212                           ;newfile.c: 157: buf2=0;
   213  007EFA  0E00               	movlw	0
   214  007EFC  6E14               	movwf	main@buf2,c
   215  007EFE                     l972:
   216                           
   217                           ;newfile.c: 159: {
   218                           ;newfile.c: 160: if(++buf1>50000)
   219  007EFE  4A12               	infsnz	main@buf1,f,c
   220  007F00  2A13               	incf	main@buf1+1,f,c
   221  007F02  0E51               	movlw	81
   222  007F04  5C12               	subwf	main@buf1,w,c
   223  007F06  0EC3               	movlw	195
   224  007F08  5813               	subwfb	main@buf1+1,w,c
   225  007F0A  A0D8               	btfss	status,0,c
   226  007F0C  D7F8               	goto	l972
   227                           
   228                           ;newfile.c: 161: {
   229                           ;newfile.c: 162: buf1=0;
   230  007F0E  0E00               	movlw	0
   231  007F10  6E13               	movwf	main@buf1+1,c
   232  007F12  0E00               	movlw	0
   233  007F14  6E12               	movwf	main@buf1,c
   234                           
   235                           ;newfile.c: 163: if(++buf2>50000) buf2=0;
   236  007F16  2A14               	incf	main@buf2,f,c
   237                           
   238                           ;newfile.c: 164: lcd_write_char(0,0,buf2/10000+0x30);
   239  007F18  0E00               	movlw	0
   240  007F1A  6E0F               	movwf	lcd_write_char@y,c
   241  007F1C  C014  F007         	movff	main@buf2,___awdiv@dividend
   242  007F20  6A08               	clrf	___awdiv@dividend+1,c
   243  007F22  0E27               	movlw	39
   244  007F24  6E0A               	movwf	___awdiv@divisor+1,c
   245  007F26  0E10               	movlw	16
   246  007F28  6E09               	movwf	___awdiv@divisor,c
   247  007F2A  EC31  F03F         	call	___awdiv	;wreg free
   248  007F2E  5007               	movf	?___awdiv,w,c
   249  007F30  0F30               	addlw	48
   250  007F32  6E10               	movwf	lcd_write_char@buf,c
   251  007F34  0E00               	movlw	0
   252  007F36  EC8A  F03E         	call	_lcd_write_char
   253                           
   254                           ;newfile.c: 165: lcd_write_char(1,0,(buf2%10000)/1000+0x30);
   255  007F3A  0E00               	movlw	0
   256  007F3C  6E0F               	movwf	lcd_write_char@y,c
   257  007F3E  0E27               	movlw	39
   258  007F40  6E04               	movwf	___awmod@divisor+1,c
   259  007F42  0E10               	movlw	16
   260  007F44  6E03               	movwf	___awmod@divisor,c
   261  007F46  C014  F001         	movff	main@buf2,___awmod@dividend
   262  007F4A  6A02               	clrf	___awmod@dividend+1,c
   263  007F4C  ECF9  F03E         	call	___awmod	;wreg free
   264  007F50  C001  F007         	movff	?___awmod,___awdiv@dividend
   265  007F54  C002  F008         	movff	?___awmod+1,___awdiv@dividend+1
   266  007F58  0E03               	movlw	3
   267  007F5A  6E0A               	movwf	___awdiv@divisor+1,c
   268  007F5C  0EE8               	movlw	232
   269  007F5E  6E09               	movwf	___awdiv@divisor,c
   270  007F60  EC31  F03F         	call	___awdiv	;wreg free
   271  007F64  5007               	movf	?___awdiv,w,c
   272  007F66  0F30               	addlw	48
   273  007F68  6E10               	movwf	lcd_write_char@buf,c
   274  007F6A  0E01               	movlw	1
   275  007F6C  EC8A  F03E         	call	_lcd_write_char
   276                           
   277                           ;newfile.c: 166: lcd_write_char(2,0,(buf2%1000)/100+0x30);
   278  007F70  0E00               	movlw	0
   279  007F72  6E0F               	movwf	lcd_write_char@y,c
   280  007F74  0E03               	movlw	3
   281  007F76  6E04               	movwf	___awmod@divisor+1,c
   282  007F78  0EE8               	movlw	232
   283  007F7A  6E03               	movwf	___awmod@divisor,c
   284  007F7C  C014  F001         	movff	main@buf2,___awmod@dividend
   285  007F80  6A02               	clrf	___awmod@dividend+1,c
   286  007F82  ECF9  F03E         	call	___awmod	;wreg free
   287  007F86  C001  F007         	movff	?___awmod,___awdiv@dividend
   288  007F8A  C002  F008         	movff	?___awmod+1,___awdiv@dividend+1
   289  007F8E  0E00               	movlw	0
   290  007F90  6E0A               	movwf	___awdiv@divisor+1,c
   291  007F92  0E64               	movlw	100
   292  007F94  6E09               	movwf	___awdiv@divisor,c
   293  007F96  EC31  F03F         	call	___awdiv	;wreg free
   294  007F9A  5007               	movf	?___awdiv,w,c
   295  007F9C  0F30               	addlw	48
   296  007F9E  6E10               	movwf	lcd_write_char@buf,c
   297  007FA0  0E02               	movlw	2
   298  007FA2  EC8A  F03E         	call	_lcd_write_char
   299                           
   300                           ;newfile.c: 167: lcd_write_char(3,0,(buf2%100)/10+0x30);
   301  007FA6  0E00               	movlw	0
   302  007FA8  6E0F               	movwf	lcd_write_char@y,c
   303  007FAA  0E00               	movlw	0
   304  007FAC  6E04               	movwf	___awmod@divisor+1,c
   305  007FAE  0E64               	movlw	100
   306  007FB0  6E03               	movwf	___awmod@divisor,c
   307  007FB2  C014  F001         	movff	main@buf2,___awmod@dividend
   308  007FB6  6A02               	clrf	___awmod@dividend+1,c
   309  007FB8  ECF9  F03E         	call	___awmod	;wreg free
   310  007FBC  C001  F007         	movff	?___awmod,___awdiv@dividend
   311  007FC0  C002  F008         	movff	?___awmod+1,___awdiv@dividend+1
   312  007FC4  0E00               	movlw	0
   313  007FC6  6E0A               	movwf	___awdiv@divisor+1,c
   314  007FC8  0E0A               	movlw	10
   315  007FCA  6E09               	movwf	___awdiv@divisor,c
   316  007FCC  EC31  F03F         	call	___awdiv	;wreg free
   317  007FD0  5007               	movf	?___awdiv,w,c
   318  007FD2  0F30               	addlw	48
   319  007FD4  6E10               	movwf	lcd_write_char@buf,c
   320  007FD6  0E03               	movlw	3
   321  007FD8  EC8A  F03E         	call	_lcd_write_char
   322                           
   323                           ;newfile.c: 168: lcd_write_char(4,0,(buf2%10)+0x30);
   324  007FDC  0E00               	movlw	0
   325  007FDE  6E0F               	movwf	lcd_write_char@y,c
   326  007FE0  C014  F001         	movff	main@buf2,___awmod@dividend
   327  007FE4  6A02               	clrf	___awmod@dividend+1,c
   328  007FE6  0E00               	movlw	0
   329  007FE8  6E04               	movwf	___awmod@divisor+1,c
   330  007FEA  0E0A               	movlw	10
   331  007FEC  6E03               	movwf	___awmod@divisor,c
   332  007FEE  ECF9  F03E         	call	___awmod	;wreg free
   333  007FF2  5001               	movf	?___awmod,w,c
   334  007FF4  0F30               	addlw	48
   335  007FF6  6E10               	movwf	lcd_write_char@buf,c
   336  007FF8  0E04               	movlw	4
   337  007FFA  EC8A  F03E         	call	_lcd_write_char
   338  007FFE  D77F               	goto	l972
   339  008000                     __end_of_main:
   340                           	opt stack 0
   341                           status	equ	0xFD8
   342                           
   343 ;; *************** function _lcdreset *****************
   344 ;; Defined at:
   345 ;;		line 114 in file "newfile.c"
   346 ;; Parameters:    Size  Location     Type
   347 ;;		None
   348 ;; Auto vars:     Size  Location     Type
   349 ;;		None
   350 ;; Return value:  Size  Location     Type
   351 ;;		None               void
   352 ;; Registers used:
   353 ;;		wreg, status,2, status,0, cstack
   354 ;; Tracked objects:
   355 ;;		On entry : 0/0
   356 ;;		On exit  : 0/0
   357 ;;		Unchanged: 0/0
   358 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   359 ;;      Params:         0       0       0       0       0       0       0       0       0
   360 ;;      Locals:         0       0       0       0       0       0       0       0       0
   361 ;;      Temps:          0       0       0       0       0       0       0       0       0
   362 ;;      Totals:         0       0       0       0       0       0       0       0       0
   363 ;;Total ram usage:        0 bytes
   364 ;; Hardware stack levels used:    1
   365 ;; Hardware stack levels required when called:    2
   366 ;; This function calls:
   367 ;;		_delay
   368 ;;		_lcd_write_com
   369 ;;		_lcd_write_com_busy
   370 ;; This function is called by:
   371 ;;		_main
   372 ;; This function uses a non-reentrant model
   373 ;;
   374                           
   375                           	psect	text1
   376  007D9C                     __ptext1:
   377                           	opt stack 0
   378  007D9C                     _lcdreset:
   379                           	opt stack 28
   380                           
   381                           ;newfile.c: 116: delay(150);
   382                           
   383                           ;incstack = 0
   384  007D9C  0E00               	movlw	0
   385  007D9E  6E02               	movwf	delay@t+1,c
   386  007DA0  0E96               	movlw	150
   387  007DA2  6E01               	movwf	delay@t,c
   388  007DA4  ECB2  F03E         	call	_delay	;wreg free
   389                           
   390                           ;newfile.c: 117: lcd_write_com(0x38);
   391  007DA8  0E38               	movlw	56
   392  007DAA  EC81  F03E         	call	_lcd_write_com
   393                           
   394                           ;newfile.c: 118: delay(50);
   395  007DAE  0E00               	movlw	0
   396  007DB0  6E02               	movwf	delay@t+1,c
   397  007DB2  0E32               	movlw	50
   398  007DB4  6E01               	movwf	delay@t,c
   399  007DB6  ECB2  F03E         	call	_delay	;wreg free
   400                           
   401                           ;newfile.c: 119: lcd_write_com(0x38);
   402  007DBA  0E38               	movlw	56
   403  007DBC  EC81  F03E         	call	_lcd_write_com
   404                           
   405                           ;newfile.c: 120: delay(50);
   406  007DC0  0E00               	movlw	0
   407  007DC2  6E02               	movwf	delay@t+1,c
   408  007DC4  0E32               	movlw	50
   409  007DC6  6E01               	movwf	delay@t,c
   410  007DC8  ECB2  F03E         	call	_delay	;wreg free
   411                           
   412                           ;newfile.c: 121: lcd_write_com(0x38);
   413  007DCC  0E38               	movlw	56
   414  007DCE  EC81  F03E         	call	_lcd_write_com
   415                           
   416                           ;newfile.c: 122: lcd_write_com_busy(0x38);
   417  007DD2  0E38               	movlw	56
   418  007DD4  EC71  F03E         	call	_lcd_write_com_busy
   419                           
   420                           ;newfile.c: 123: lcd_write_com_busy(0x08);
   421  007DD8  0E08               	movlw	8
   422  007DDA  EC71  F03E         	call	_lcd_write_com_busy
   423                           
   424                           ;newfile.c: 124: lcd_write_com_busy(0x01);
   425  007DDE  0E01               	movlw	1
   426  007DE0  EC71  F03E         	call	_lcd_write_com_busy
   427                           
   428                           ;newfile.c: 125: lcd_write_com_busy(0x06);
   429  007DE4  0E06               	movlw	6
   430  007DE6  EC71  F03E         	call	_lcd_write_com_busy
   431                           
   432                           ;newfile.c: 126: lcd_write_com_busy(0x0c);
   433  007DEA  0E0C               	movlw	12
   434  007DEC  EC71  F03E         	call	_lcd_write_com_busy
   435  007DF0  0012               	return		;funcret
   436  007DF2                     __end_of_lcdreset:
   437                           	opt stack 0
   438                           status	equ	0xFD8
   439                           
   440 ;; *************** function _delay *****************
   441 ;; Defined at:
   442 ;;		line 17 in file "newfile.c"
   443 ;; Parameters:    Size  Location     Type
   444 ;;  t               2    0[COMRAM] unsigned int 
   445 ;; Auto vars:     Size  Location     Type
   446 ;;  j               2    4[COMRAM] unsigned int 
   447 ;;  i               2    2[COMRAM] unsigned int 
   448 ;; Return value:  Size  Location     Type
   449 ;;		None               void
   450 ;; Registers used:
   451 ;;		wreg, status,2, status,0
   452 ;; Tracked objects:
   453 ;;		On entry : 0/0
   454 ;;		On exit  : 0/0
   455 ;;		Unchanged: 0/0
   456 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   457 ;;      Params:         2       0       0       0       0       0       0       0       0
   458 ;;      Locals:         4       0       0       0       0       0       0       0       0
   459 ;;      Temps:          0       0       0       0       0       0       0       0       0
   460 ;;      Totals:         6       0       0       0       0       0       0       0       0
   461 ;;Total ram usage:        6 bytes
   462 ;; Hardware stack levels used:    1
   463 ;; This function calls:
   464 ;;		Nothing
   465 ;; This function is called by:
   466 ;;		_lcdreset
   467 ;; This function uses a non-reentrant model
   468 ;;
   469                           
   470                           	psect	text2
   471  007D64                     __ptext2:
   472                           	opt stack 0
   473  007D64                     _delay:
   474                           	opt stack 29
   475                           
   476                           ;newfile.c: 19: unsigned int i,j;
   477                           ;newfile.c: 20: for(i=0;i<t;i++)
   478                           
   479                           ;incstack = 0
   480  007D64  0E00               	movlw	0
   481  007D66  6E04               	movwf	delay@i+1,c
   482  007D68  0E00               	movlw	0
   483  007D6A  6E03               	movwf	delay@i,c
   484  007D6C  D010               	goto	l852
   485  007D6E                     l840:
   486                           
   487                           ;newfile.c: 21: {
   488                           ;newfile.c: 22: for(j=0;j<10;j++)
   489  007D6E  0E00               	movlw	0
   490  007D70  6E06               	movwf	delay@j+1,c
   491  007D72  0E00               	movlw	0
   492  007D74  6E05               	movwf	delay@j,c
   493  007D76                     l842:
   494  007D76  5006               	movf	delay@j+1,w,c
   495  007D78  E108               	bnz	l850
   496  007D7A  0E0A               	movlw	10
   497  007D7C  5C05               	subwf	delay@j,w,c
   498  007D7E  B0D8               	btfsc	status,0,c
   499  007D80  D004               	goto	l850
   500  007D82  0004               	clrwdt		;# 
   501  007D84  4A05               	infsnz	delay@j,f,c
   502  007D86  2A06               	incf	delay@j+1,f,c
   503  007D88  D7F6               	goto	l842
   504  007D8A                     l850:
   505  007D8A  4A03               	infsnz	delay@i,f,c
   506  007D8C  2A04               	incf	delay@i+1,f,c
   507  007D8E                     l852:
   508  007D8E  5001               	movf	delay@t,w,c
   509  007D90  5C03               	subwf	delay@i,w,c
   510  007D92  5002               	movf	delay@t+1,w,c
   511  007D94  5804               	subwfb	delay@i+1,w,c
   512  007D96  B0D8               	btfsc	status,0,c
   513  007D98  0012               	return	
   514  007D9A  D7E9               	goto	l840
   515  007D9C                     __end_of_delay:
   516                           	opt stack 0
   517                           status	equ	0xFD8
   518                           
   519 ;; *************** function _lcd_write_char *****************
   520 ;; Defined at:
   521 ;;		line 135 in file "newfile.c"
   522 ;; Parameters:    Size  Location     Type
   523 ;;  x               1    wreg     unsigned char 
   524 ;;  y               1   14[COMRAM] unsigned char 
   525 ;;  buf             1   15[COMRAM] unsigned char 
   526 ;; Auto vars:     Size  Location     Type
   527 ;;  x               1   16[COMRAM] unsigned char 
   528 ;; Return value:  Size  Location     Type
   529 ;;		None               void
   530 ;; Registers used:
   531 ;;		wreg, status,2, status,0, cstack
   532 ;; Tracked objects:
   533 ;;		On entry : 0/0
   534 ;;		On exit  : 0/0
   535 ;;		Unchanged: 0/0
   536 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   537 ;;      Params:         2       0       0       0       0       0       0       0       0
   538 ;;      Locals:         1       0       0       0       0       0       0       0       0
   539 ;;      Temps:          0       0       0       0       0       0       0       0       0
   540 ;;      Totals:         3       0       0       0       0       0       0       0       0
   541 ;;Total ram usage:        3 bytes
   542 ;; Hardware stack levels used:    1
   543 ;; Hardware stack levels required when called:    3
   544 ;; This function calls:
   545 ;;		_lcd_write_address
   546 ;;		_lcd_write_data
   547 ;; This function is called by:
   548 ;;		_main
   549 ;; This function uses a non-reentrant model
   550 ;;
   551                           
   552                           	psect	text3
   553  007D14                     __ptext3:
   554                           	opt stack 0
   555  007D14                     _lcd_write_char:
   556                           	opt stack 27
   557                           
   558                           ;incstack = 0
   559                           ;lcd_write_char@x stored from wreg
   560  007D14  6E11               	movwf	lcd_write_char@x,c
   561                           
   562                           ;newfile.c: 137: lcd_write_address(x,y);
   563  007D16  C00F  F003         	movff	lcd_write_char@y,lcd_write_address@y
   564  007D1A  5011               	movf	lcd_write_char@x,w,c
   565  007D1C  EC9F  F03E         	call	_lcd_write_address
   566                           
   567                           ;newfile.c: 138: lcd_write_data(buf);
   568  007D20  5010               	movf	lcd_write_char@buf,w,c
   569  007D22  EC94  F03E         	call	_lcd_write_data
   570  007D26  0012               	return		;funcret
   571  007D28                     __end_of_lcd_write_char:
   572                           	opt stack 0
   573                           status	equ	0xFD8
   574                           
   575 ;; *************** function _lcd_write_data *****************
   576 ;; Defined at:
   577 ;;		line 81 in file "newfile.c"
   578 ;; Parameters:    Size  Location     Type
   579 ;;  databuf         1    wreg     unsigned char 
   580 ;; Auto vars:     Size  Location     Type
   581 ;;  databuf         1    0[COMRAM] unsigned char 
   582 ;; Return value:  Size  Location     Type
   583 ;;		None               void
   584 ;; Registers used:
   585 ;;		wreg, cstack
   586 ;; Tracked objects:
   587 ;;		On entry : 0/0
   588 ;;		On exit  : 0/0
   589 ;;		Unchanged: 0/0
   590 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   591 ;;      Params:         0       0       0       0       0       0       0       0       0
   592 ;;      Locals:         1       0       0       0       0       0       0       0       0
   593 ;;      Temps:          0       0       0       0       0       0       0       0       0
   594 ;;      Totals:         1       0       0       0       0       0       0       0       0
   595 ;;Total ram usage:        1 bytes
   596 ;; Hardware stack levels used:    1
   597 ;; Hardware stack levels required when called:    1
   598 ;; This function calls:
   599 ;;		_lcd_wait_busy
   600 ;; This function is called by:
   601 ;;		_lcd_write_char
   602 ;; This function uses a non-reentrant model
   603 ;;
   604                           
   605                           	psect	text4
   606  007D28                     __ptext4:
   607                           	opt stack 0
   608  007D28                     _lcd_write_data:
   609                           	opt stack 28
   610                           
   611                           ;incstack = 0
   612                           ;lcd_write_data@databuf stored from wreg
   613  007D28  6E01               	movwf	lcd_write_data@databuf,c
   614                           
   615                           ;newfile.c: 83: lcd_wait_busy();
   616  007D2A  EC78  F03E         	call	_lcd_wait_busy	;wreg free
   617                           
   618                           ;newfile.c: 84: RB5=1;
   619  007D2E  8A81               	bsf	3969,5,c	;volatile
   620                           
   621                           ;newfile.c: 85: RB4=0;
   622  007D30  9881               	bcf	3969,4,c	;volatile
   623                           
   624                           ;newfile.c: 86: PORTD=databuf;
   625  007D32  C001  FF83         	movff	lcd_write_data@databuf,3971	;volatile
   626                           
   627                           ;newfile.c: 87: RB3=1;
   628  007D36  8681               	bsf	3969,3,c	;volatile
   629  007D38  F000               	nop		;# 
   630                           
   631                           ;newfile.c: 89: RB3=0;
   632  007D3A  9681               	bcf	3969,3,c	;volatile
   633  007D3C  0012               	return		;funcret
   634  007D3E                     __end_of_lcd_write_data:
   635                           	opt stack 0
   636                           status	equ	0xFD8
   637                           
   638 ;; *************** function _lcd_write_address *****************
   639 ;; Defined at:
   640 ;;		line 98 in file "newfile.c"
   641 ;; Parameters:    Size  Location     Type
   642 ;;  x               1    wreg     unsigned char 
   643 ;;  y               1    2[COMRAM] unsigned char 
   644 ;; Auto vars:     Size  Location     Type
   645 ;;  x               1    3[COMRAM] unsigned char 
   646 ;; Return value:  Size  Location     Type
   647 ;;		None               void
   648 ;; Registers used:
   649 ;;		wreg, status,2, status,0, cstack
   650 ;; Tracked objects:
   651 ;;		On entry : 0/0
   652 ;;		On exit  : 0/0
   653 ;;		Unchanged: 0/0
   654 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   655 ;;      Params:         1       0       0       0       0       0       0       0       0
   656 ;;      Locals:         1       0       0       0       0       0       0       0       0
   657 ;;      Temps:          0       0       0       0       0       0       0       0       0
   658 ;;      Totals:         2       0       0       0       0       0       0       0       0
   659 ;;Total ram usage:        2 bytes
   660 ;; Hardware stack levels used:    1
   661 ;; Hardware stack levels required when called:    2
   662 ;; This function calls:
   663 ;;		_lcd_write_com_busy
   664 ;; This function is called by:
   665 ;;		_lcd_write_char
   666 ;; This function uses a non-reentrant model
   667 ;;
   668                           
   669                           	psect	text5
   670  007D3E                     __ptext5:
   671                           	opt stack 0
   672  007D3E                     _lcd_write_address:
   673                           	opt stack 27
   674                           
   675                           ;incstack = 0
   676                           ;lcd_write_address@x stored from wreg
   677  007D3E  6E04               	movwf	lcd_write_address@x,c
   678                           
   679                           ;newfile.c: 100: x&=0x0f;
   680  007D40  0E0F               	movlw	15
   681  007D42  1604               	andwf	lcd_write_address@x,f,c
   682                           
   683                           ;newfile.c: 101: y&=0x01;
   684  007D44  0E01               	movlw	1
   685  007D46  1603               	andwf	lcd_write_address@y,f,c
   686                           
   687                           ;newfile.c: 102: if(y==0x00)
   688  007D48  5003               	movf	lcd_write_address@y,w,c
   689  007D4A  A4D8               	btfss	status,2,c
   690  007D4C  D005               	goto	l860
   691                           
   692                           ;newfile.c: 103: lcd_write_com_busy(x|0x80);
   693  007D4E  5004               	movf	lcd_write_address@x,w,c
   694  007D50  0980               	iorlw	128
   695  007D52  EC71  F03E         	call	_lcd_write_com_busy
   696  007D56  0012               	return	
   697  007D58                     l860:
   698                           
   699                           ;newfile.c: 104: else
   700                           ;newfile.c: 105: lcd_write_com_busy((x+0x40)|0x80);
   701  007D58  5004               	movf	lcd_write_address@x,w,c
   702  007D5A  0F40               	addlw	64
   703  007D5C  0980               	iorlw	128
   704  007D5E  EC71  F03E         	call	_lcd_write_com_busy
   705  007D62  0012               	return	
   706  007D64                     __end_of_lcd_write_address:
   707                           	opt stack 0
   708                           status	equ	0xFD8
   709                           
   710 ;; *************** function _lcd_write_com_busy *****************
   711 ;; Defined at:
   712 ;;		line 69 in file "newfile.c"
   713 ;; Parameters:    Size  Location     Type
   714 ;;  combuf          1    wreg     unsigned char 
   715 ;; Auto vars:     Size  Location     Type
   716 ;;  combuf          1    1[COMRAM] unsigned char 
   717 ;; Return value:  Size  Location     Type
   718 ;;		None               void
   719 ;; Registers used:
   720 ;;		wreg, status,2, cstack
   721 ;; Tracked objects:
   722 ;;		On entry : 0/0
   723 ;;		On exit  : 0/0
   724 ;;		Unchanged: 0/0
   725 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   726 ;;      Params:         0       0       0       0       0       0       0       0       0
   727 ;;      Locals:         1       0       0       0       0       0       0       0       0
   728 ;;      Temps:          0       0       0       0       0       0       0       0       0
   729 ;;      Totals:         1       0       0       0       0       0       0       0       0
   730 ;;Total ram usage:        1 bytes
   731 ;; Hardware stack levels used:    1
   732 ;; Hardware stack levels required when called:    1
   733 ;; This function calls:
   734 ;;		_lcd_wait_busy
   735 ;;		_lcd_write_com
   736 ;; This function is called by:
   737 ;;		_lcd_write_address
   738 ;;		_lcdreset
   739 ;; This function uses a non-reentrant model
   740 ;;
   741                           
   742                           	psect	text6
   743  007CE2                     __ptext6:
   744                           	opt stack 0
   745  007CE2                     _lcd_write_com_busy:
   746                           	opt stack 28
   747                           
   748                           ;incstack = 0
   749                           ;lcd_write_com_busy@combuf stored from wreg
   750  007CE2  6E02               	movwf	lcd_write_com_busy@combuf,c
   751                           
   752                           ;newfile.c: 71: lcd_wait_busy();
   753  007CE4  EC78  F03E         	call	_lcd_wait_busy	;wreg free
   754                           
   755                           ;newfile.c: 72: lcd_write_com(combuf);
   756  007CE8  5002               	movf	lcd_write_com_busy@combuf,w,c
   757  007CEA  EC81  F03E         	call	_lcd_write_com
   758  007CEE  0012               	return		;funcret
   759  007CF0                     __end_of_lcd_write_com_busy:
   760                           	opt stack 0
   761                           status	equ	0xFD8
   762                           
   763 ;; *************** function _lcd_write_com *****************
   764 ;; Defined at:
   765 ;;		line 53 in file "newfile.c"
   766 ;; Parameters:    Size  Location     Type
   767 ;;  combuf          1    wreg     unsigned char 
   768 ;; Auto vars:     Size  Location     Type
   769 ;;  combuf          1    0[COMRAM] unsigned char 
   770 ;; Return value:  Size  Location     Type
   771 ;;		None               void
   772 ;; Registers used:
   773 ;;		wreg
   774 ;; Tracked objects:
   775 ;;		On entry : 0/0
   776 ;;		On exit  : 0/0
   777 ;;		Unchanged: 0/0
   778 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   779 ;;      Params:         0       0       0       0       0       0       0       0       0
   780 ;;      Locals:         1       0       0       0       0       0       0       0       0
   781 ;;      Temps:          0       0       0       0       0       0       0       0       0
   782 ;;      Totals:         1       0       0       0       0       0       0       0       0
   783 ;;Total ram usage:        1 bytes
   784 ;; Hardware stack levels used:    1
   785 ;; This function calls:
   786 ;;		Nothing
   787 ;; This function is called by:
   788 ;;		_lcd_write_com_busy
   789 ;;		_lcdreset
   790 ;; This function uses a non-reentrant model
   791 ;;
   792                           
   793                           	psect	text7
   794  007D02                     __ptext7:
   795                           	opt stack 0
   796  007D02                     _lcd_write_com:
   797                           	opt stack 28
   798                           
   799                           ;incstack = 0
   800                           ;lcd_write_com@combuf stored from wreg
   801  007D02  6E01               	movwf	lcd_write_com@combuf,c
   802                           
   803                           ;newfile.c: 55: RB5=0;
   804  007D04  9A81               	bcf	3969,5,c	;volatile
   805                           
   806                           ;newfile.c: 56: RB4=0;
   807  007D06  9881               	bcf	3969,4,c	;volatile
   808                           
   809                           ;newfile.c: 57: PORTD=combuf;
   810  007D08  C001  FF83         	movff	lcd_write_com@combuf,3971	;volatile
   811                           
   812                           ;newfile.c: 58: RB3=1;
   813  007D0C  8681               	bsf	3969,3,c	;volatile
   814  007D0E  F000               	nop		;# 
   815                           
   816                           ;newfile.c: 60: RB3=0;
   817  007D10  9681               	bcf	3969,3,c	;volatile
   818  007D12  0012               	return		;funcret
   819  007D14                     __end_of_lcd_write_com:
   820                           	opt stack 0
   821                           status	equ	0xFD8
   822                           
   823 ;; *************** function _lcd_wait_busy *****************
   824 ;; Defined at:
   825 ;;		line 36 in file "newfile.c"
   826 ;; Parameters:    Size  Location     Type
   827 ;;		None
   828 ;; Auto vars:     Size  Location     Type
   829 ;;		None
   830 ;; Return value:  Size  Location     Type
   831 ;;		None               void
   832 ;; Registers used:
   833 ;;		None
   834 ;; Tracked objects:
   835 ;;		On entry : 0/0
   836 ;;		On exit  : 0/0
   837 ;;		Unchanged: 0/0
   838 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   839 ;;      Params:         0       0       0       0       0       0       0       0       0
   840 ;;      Locals:         0       0       0       0       0       0       0       0       0
   841 ;;      Temps:          0       0       0       0       0       0       0       0       0
   842 ;;      Totals:         0       0       0       0       0       0       0       0       0
   843 ;;Total ram usage:        0 bytes
   844 ;; Hardware stack levels used:    1
   845 ;; This function calls:
   846 ;;		Nothing
   847 ;; This function is called by:
   848 ;;		_lcd_write_com_busy
   849 ;;		_lcd_write_data
   850 ;; This function uses a non-reentrant model
   851 ;;
   852                           
   853                           	psect	text8
   854  007CF0                     __ptext8:
   855                           	opt stack 0
   856  007CF0                     _lcd_wait_busy:
   857                           	opt stack 28
   858                           
   859                           ;newfile.c: 38: TRISD7=1;
   860                           
   861                           ;incstack = 0
   862  007CF0  8E95               	bsf	3989,7,c	;volatile
   863                           
   864                           ;newfile.c: 39: RB5=0;
   865  007CF2  9A81               	bcf	3969,5,c	;volatile
   866                           
   867                           ;newfile.c: 40: RB4=1;
   868  007CF4  8881               	bsf	3969,4,c	;volatile
   869                           
   870                           ;newfile.c: 41: RB3=1;
   871  007CF6  8681               	bsf	3969,3,c	;volatile
   872  007CF8                     l31:
   873  007CF8  BE83               	btfsc	3971,7,c	;volatile
   874  007CFA  D7FE               	goto	l31
   875                           
   876                           ;newfile.c: 43: RB3=0;
   877  007CFC  9681               	bcf	3969,3,c	;volatile
   878                           
   879                           ;newfile.c: 44: TRISD7=0;
   880  007CFE  9E95               	bcf	3989,7,c	;volatile
   881  007D00  0012               	return		;funcret
   882  007D02                     __end_of_lcd_wait_busy:
   883                           	opt stack 0
   884                           status	equ	0xFD8
   885                           
   886 ;; *************** function ___awmod *****************
   887 ;; Defined at:
   888 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awmod.c"
   889 ;; Parameters:    Size  Location     Type
   890 ;;  dividend        2    0[COMRAM] int 
   891 ;;  divisor         2    2[COMRAM] int 
   892 ;; Auto vars:     Size  Location     Type
   893 ;;  sign            1    5[COMRAM] unsigned char 
   894 ;;  counter         1    4[COMRAM] unsigned char 
   895 ;; Return value:  Size  Location     Type
   896 ;;                  2    0[COMRAM] int 
   897 ;; Registers used:
   898 ;;		wreg, status,2, status,0
   899 ;; Tracked objects:
   900 ;;		On entry : 0/0
   901 ;;		On exit  : 0/0
   902 ;;		Unchanged: 0/0
   903 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   904 ;;      Params:         4       0       0       0       0       0       0       0       0
   905 ;;      Locals:         2       0       0       0       0       0       0       0       0
   906 ;;      Temps:          0       0       0       0       0       0       0       0       0
   907 ;;      Totals:         6       0       0       0       0       0       0       0       0
   908 ;;Total ram usage:        6 bytes
   909 ;; Hardware stack levels used:    1
   910 ;; This function calls:
   911 ;;		Nothing
   912 ;; This function is called by:
   913 ;;		_main
   914 ;; This function uses a non-reentrant model
   915 ;;
   916                           
   917                           	psect	text9
   918  007DF2                     __ptext9:
   919                           	opt stack 0
   920  007DF2                     ___awmod:
   921                           	opt stack 30
   922                           
   923                           ;incstack = 0
   924  007DF2  0E00               	movlw	0
   925  007DF4  6E06               	movwf	___awmod@sign,c
   926  007DF6  AE02               	btfss	___awmod@dividend+1,7,c
   927  007DF8  D006               	goto	l938
   928  007DFA  6C01               	negf	___awmod@dividend,c
   929  007DFC  1E02               	comf	___awmod@dividend+1,f,c
   930  007DFE  B0D8               	btfsc	status,0,c
   931  007E00  2A02               	incf	___awmod@dividend+1,f,c
   932  007E02  0E01               	movlw	1
   933  007E04  6E06               	movwf	___awmod@sign,c
   934  007E06                     l938:
   935  007E06  AE04               	btfss	___awmod@divisor+1,7,c
   936  007E08  D004               	goto	l942
   937  007E0A  6C03               	negf	___awmod@divisor,c
   938  007E0C  1E04               	comf	___awmod@divisor+1,f,c
   939  007E0E  B0D8               	btfsc	status,0,c
   940  007E10  2A04               	incf	___awmod@divisor+1,f,c
   941  007E12                     l942:
   942  007E12  5003               	movf	___awmod@divisor,w,c
   943  007E14  1004               	iorwf	___awmod@divisor+1,w,c
   944  007E16  B4D8               	btfsc	status,2,c
   945  007E18  D018               	goto	l958
   946  007E1A  0E01               	movlw	1
   947  007E1C  6E05               	movwf	___awmod@counter,c
   948  007E1E  D004               	goto	l948
   949  007E20                     l946:
   950  007E20  90D8               	bcf	status,0,c
   951  007E22  3603               	rlcf	___awmod@divisor,f,c
   952  007E24  3604               	rlcf	___awmod@divisor+1,f,c
   953  007E26  2A05               	incf	___awmod@counter,f,c
   954  007E28                     l948:
   955  007E28  AE04               	btfss	___awmod@divisor+1,7,c
   956  007E2A  D7FA               	goto	l946
   957  007E2C                     l950:
   958  007E2C  5003               	movf	___awmod@divisor,w,c
   959  007E2E  5C01               	subwf	___awmod@dividend,w,c
   960  007E30  5004               	movf	___awmod@divisor+1,w,c
   961  007E32  5802               	subwfb	___awmod@dividend+1,w,c
   962  007E34  A0D8               	btfss	status,0,c
   963  007E36  D004               	goto	l954
   964  007E38  5003               	movf	___awmod@divisor,w,c
   965  007E3A  5E01               	subwf	___awmod@dividend,f,c
   966  007E3C  5004               	movf	___awmod@divisor+1,w,c
   967  007E3E  5A02               	subwfb	___awmod@dividend+1,f,c
   968  007E40                     l954:
   969  007E40  90D8               	bcf	status,0,c
   970  007E42  3204               	rrcf	___awmod@divisor+1,f,c
   971  007E44  3203               	rrcf	___awmod@divisor,f,c
   972  007E46  2E05               	decfsz	___awmod@counter,f,c
   973  007E48  D7F1               	goto	l950
   974  007E4A                     l958:
   975  007E4A  5006               	movf	___awmod@sign,w,c
   976  007E4C  B4D8               	btfsc	status,2,c
   977  007E4E  D004               	goto	l962
   978  007E50  6C01               	negf	___awmod@dividend,c
   979  007E52  1E02               	comf	___awmod@dividend+1,f,c
   980  007E54  B0D8               	btfsc	status,0,c
   981  007E56  2A02               	incf	___awmod@dividend+1,f,c
   982  007E58                     l962:
   983  007E58  C001  F001         	movff	___awmod@dividend,?___awmod
   984  007E5C  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
   985  007E60  0012               	return	
   986  007E62                     __end_of___awmod:
   987                           	opt stack 0
   988                           status	equ	0xFD8
   989                           
   990 ;; *************** function ___awdiv *****************
   991 ;; Defined at:
   992 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awdiv.c"
   993 ;; Parameters:    Size  Location     Type
   994 ;;  dividend        2    6[COMRAM] int 
   995 ;;  divisor         2    8[COMRAM] int 
   996 ;; Auto vars:     Size  Location     Type
   997 ;;  quotient        2   12[COMRAM] int 
   998 ;;  sign            1   11[COMRAM] unsigned char 
   999 ;;  counter         1   10[COMRAM] unsigned char 
  1000 ;; Return value:  Size  Location     Type
  1001 ;;                  2    6[COMRAM] int 
  1002 ;; Registers used:
  1003 ;;		wreg, status,2, status,0
  1004 ;; Tracked objects:
  1005 ;;		On entry : 0/0
  1006 ;;		On exit  : 0/0
  1007 ;;		Unchanged: 0/0
  1008 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1009 ;;      Params:         4       0       0       0       0       0       0       0       0
  1010 ;;      Locals:         4       0       0       0       0       0       0       0       0
  1011 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1012 ;;      Totals:         8       0       0       0       0       0       0       0       0
  1013 ;;Total ram usage:        8 bytes
  1014 ;; Hardware stack levels used:    1
  1015 ;; This function calls:
  1016 ;;		Nothing
  1017 ;; This function is called by:
  1018 ;;		_main
  1019 ;; This function uses a non-reentrant model
  1020 ;;
  1021                           
  1022                           	psect	text10
  1023  007E62                     __ptext10:
  1024                           	opt stack 0
  1025  007E62                     ___awdiv:
  1026                           	opt stack 30
  1027                           
  1028                           ;incstack = 0
  1029  007E62  0E00               	movlw	0
  1030  007E64  6E0C               	movwf	___awdiv@sign,c
  1031  007E66  AE0A               	btfss	___awdiv@divisor+1,7,c
  1032  007E68  D006               	goto	l894
  1033  007E6A  6C09               	negf	___awdiv@divisor,c
  1034  007E6C  1E0A               	comf	___awdiv@divisor+1,f,c
  1035  007E6E  B0D8               	btfsc	status,0,c
  1036  007E70  2A0A               	incf	___awdiv@divisor+1,f,c
  1037  007E72  0E01               	movlw	1
  1038  007E74  6E0C               	movwf	___awdiv@sign,c
  1039  007E76                     l894:
  1040  007E76  AE08               	btfss	___awdiv@dividend+1,7,c
  1041  007E78  D006               	goto	l900
  1042  007E7A  6C07               	negf	___awdiv@dividend,c
  1043  007E7C  1E08               	comf	___awdiv@dividend+1,f,c
  1044  007E7E  B0D8               	btfsc	status,0,c
  1045  007E80  2A08               	incf	___awdiv@dividend+1,f,c
  1046  007E82  0E01               	movlw	1
  1047  007E84  1A0C               	xorwf	___awdiv@sign,f,c
  1048  007E86                     l900:
  1049  007E86  0E00               	movlw	0
  1050  007E88  6E0E               	movwf	___awdiv@quotient+1,c
  1051  007E8A  0E00               	movlw	0
  1052  007E8C  6E0D               	movwf	___awdiv@quotient,c
  1053  007E8E  5009               	movf	___awdiv@divisor,w,c
  1054  007E90  100A               	iorwf	___awdiv@divisor+1,w,c
  1055  007E92  B4D8               	btfsc	status,2,c
  1056  007E94  D01C               	goto	l922
  1057  007E96  0E01               	movlw	1
  1058  007E98  6E0B               	movwf	___awdiv@counter,c
  1059  007E9A  D004               	goto	l908
  1060  007E9C                     l906:
  1061  007E9C  90D8               	bcf	status,0,c
  1062  007E9E  3609               	rlcf	___awdiv@divisor,f,c
  1063  007EA0  360A               	rlcf	___awdiv@divisor+1,f,c
  1064  007EA2  2A0B               	incf	___awdiv@counter,f,c
  1065  007EA4                     l908:
  1066  007EA4  AE0A               	btfss	___awdiv@divisor+1,7,c
  1067  007EA6  D7FA               	goto	l906
  1068  007EA8                     l910:
  1069  007EA8  90D8               	bcf	status,0,c
  1070  007EAA  360D               	rlcf	___awdiv@quotient,f,c
  1071  007EAC  360E               	rlcf	___awdiv@quotient+1,f,c
  1072  007EAE  5009               	movf	___awdiv@divisor,w,c
  1073  007EB0  5C07               	subwf	___awdiv@dividend,w,c
  1074  007EB2  500A               	movf	___awdiv@divisor+1,w,c
  1075  007EB4  5808               	subwfb	___awdiv@dividend+1,w,c
  1076  007EB6  A0D8               	btfss	status,0,c
  1077  007EB8  D005               	goto	l918
  1078  007EBA  5009               	movf	___awdiv@divisor,w,c
  1079  007EBC  5E07               	subwf	___awdiv@dividend,f,c
  1080  007EBE  500A               	movf	___awdiv@divisor+1,w,c
  1081  007EC0  5A08               	subwfb	___awdiv@dividend+1,f,c
  1082  007EC2  800D               	bsf	___awdiv@quotient,0,c
  1083  007EC4                     l918:
  1084  007EC4  90D8               	bcf	status,0,c
  1085  007EC6  320A               	rrcf	___awdiv@divisor+1,f,c
  1086  007EC8  3209               	rrcf	___awdiv@divisor,f,c
  1087  007ECA  2E0B               	decfsz	___awdiv@counter,f,c
  1088  007ECC  D7ED               	goto	l910
  1089  007ECE                     l922:
  1090  007ECE  500C               	movf	___awdiv@sign,w,c
  1091  007ED0  B4D8               	btfsc	status,2,c
  1092  007ED2  D004               	goto	l926
  1093  007ED4  6C0D               	negf	___awdiv@quotient,c
  1094  007ED6  1E0E               	comf	___awdiv@quotient+1,f,c
  1095  007ED8  B0D8               	btfsc	status,0,c
  1096  007EDA  2A0E               	incf	___awdiv@quotient+1,f,c
  1097  007EDC                     l926:
  1098  007EDC  C00D  F007         	movff	___awdiv@quotient,?___awdiv
  1099  007EE0  C00E  F008         	movff	___awdiv@quotient+1,?___awdiv+1
  1100  007EE4  0012               	return	
  1101  007EE6                     __end_of___awdiv:
  1102                           	opt stack 0
  1103  0000                     status	equ	0xFD8
  1104                           status	equ	0xFD8
  1105                           
  1106                           	psect	rparam
  1107  0000                     status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     20      20
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_lcd_write_char
    _lcdreset->_delay
    _lcd_write_char->___awdiv
    _lcd_write_address->_lcd_write_com_busy
    _lcd_write_com_busy->_lcd_write_com
    ___awdiv->___awmod

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    2338
                                             17 COMRAM     3     3      0
                            ___awdiv
                            ___awmod
                     _lcd_write_char
                           _lcdreset
 ---------------------------------------------------------------------------------
 (1) _lcdreset                                             0     0      0     266
                              _delay
                      _lcd_write_com
                 _lcd_write_com_busy
 ---------------------------------------------------------------------------------
 (2) _delay                                                6     4      2     221
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (1) _lcd_write_char                                       3     1      2     652
                                             14 COMRAM     3     1      2
                            ___awdiv (ARG)
                            ___awmod (ARG)
                  _lcd_write_address
                     _lcd_write_data
 ---------------------------------------------------------------------------------
 (2) _lcd_write_data                                       1     1      0      15
                                              0 COMRAM     1     1      0
                      _lcd_wait_busy
 ---------------------------------------------------------------------------------
 (2) _lcd_write_address                                    2     1      1     141
                                              2 COMRAM     2     1      1
                 _lcd_write_com_busy
 ---------------------------------------------------------------------------------
 (2) _lcd_write_com_busy                                   1     1      0      30
                                              1 COMRAM     1     1      0
                      _lcd_wait_busy
                      _lcd_write_com
 ---------------------------------------------------------------------------------
 (3) _lcd_write_com                                        1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _lcd_wait_busy                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) ___awmod                                              6     2      4     640
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              8     4      4     644
                                              6 COMRAM     8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___awdiv
     ___awmod (ARG)
   ___awmod
   _lcd_write_char
     ___awdiv (ARG)
       ___awmod (ARG)
     ___awmod (ARG)
     _lcd_write_address (ARG)
       _lcd_write_com_busy
         _lcd_wait_busy
         _lcd_write_com
     _lcd_write_data (ARG)
       _lcd_wait_busy
   _lcdreset
     _delay
     _lcd_write_com
     _lcd_write_com_busy
       _lcd_wait_busy
       _lcd_write_com

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5F      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5F     14      14       1       21.1%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
ABS                  0      0       0      20        0.0%
BIGRAM             7FF      0       0      21        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%


Microchip Technology PIC18 Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Tue Aug 25 14:56:45 2015

                         l31 7CF8                 ___awdiv@sign 000C                  __CFG_BORV$1 000000  
                        l900 7E86                          l910 7EA8                          l840 7D6E  
                        l906 7E9C                          l922 7ECE                          l850 7D8A  
                        l842 7D76                          l908 7EA4                          l860 7D58  
                        l852 7D8E                          l926 7EDC                          l918 7EC4  
                        l950 7E2C                          l942 7E12                          l962 7E58  
                        l954 7E40                          l946 7E20                          l938 7E06  
                        l948 7E28                          l972 7EFE                          l894 7E76  
                        l958 7E4A                          _RB3 007C0B                          _RB4 007C0C  
                        _RB5 007C0D                          _RD7 007C1F               ?_lcd_wait_busy 0001  
               ___awmod@sign 0006                 __CFG_FOSC$HS 000000                 __CFG_LVP$OFF 000000  
               __CFG_WDT$OFF 000000              lcd_write_char@x 0011              lcd_write_char@y 000F  
      lcd_write_data@databuf 0001       __end_of_lcd_write_char 7D28       __end_of_lcd_write_data 7D3E  
                       _main 7EE6               ?_lcd_write_com 0001                         start 0000  
              __CFG_MCLRE$ON 000000                 ___param_bank 000010                        ?_main 0001  
            __end_of___awdiv 7EE6              __end_of___awmod 7E62              ___awdiv@divisor 0009  
            ___awdiv@counter 000B                        _PORTD 000F83                        _TRISB 000F93  
                      _TRISD 000F95                        _delay 7D64              ?_lcd_write_char 000F  
            ?_lcd_write_data 0001                        status 000FD8   __size_of_lcd_write_address 0026  
            __initialization 7CDC                 __end_of_main 8000              ??_lcd_wait_busy 0001  
                     ??_main 0012                __activetblptr 000000                       ?_delay 0001  
                     _ADCON1 000FC1             ___awdiv@dividend 0007                       _OSCCON 000FD3  
            ??_lcd_write_com 0001                       _TRISD7 007CAF            lcd_write_char@buf 0010  
             __CFG_XINST$OFF 000000             __end_of_lcdreset 7DF2                    ??___awdiv 000B  
                  ??___awmod 0005                       delay@i 0003                       delay@j 0005  
                     delay@t 0001             ___awdiv@quotient 000D              ___awmod@divisor 0003  
            ___awmod@counter 0005     lcd_write_com_busy@combuf 0002                   __accesstop 0060  
    __end_of__initialization 7CDC              __CFG_PBADEN$OFF 000000                ___rparam_used 000001  
__size_of_lcd_write_com_busy 000E               __pcstackCOMRAM 0001                __end_of_delay 7D9C  
                    ??_delay 0003             ??_lcd_write_char 0011             ??_lcd_write_data 0001  
         lcd_write_address@x 0004           lcd_write_address@y 0003                    ?_lcdreset 0001  
                    __Hparam 0000                      __Lparam 0000                      ___awdiv 7E62  
                    ___awmod 7DF2                      __pcinit 7CDC                      __ramtop 0800  
                    __ptext0 7EE6                      __ptext1 7D9C                      __ptext2 7D64  
                    __ptext3 7D14                      __ptext4 7D28                      __ptext5 7D3E  
                    __ptext6 7CE2                      __ptext7 7D02                      __ptext8 7CF0  
                    __ptext9 7DF2             ___awmod@dividend 0001         end_of_initialization 7CDC  
                 ??_lcdreset 0007        __end_of_lcd_wait_busy 7D02        __end_of_lcd_write_com 7D14  
        start_initialization 7CDC   __end_of_lcd_write_com_busy 7CF0           __CFG_BOR$ON_ACTIVE 000000  
          __size_of_lcdreset 0056                     ?___awdiv 0007                     ?___awmod 0001  
             __size_of_delay 0038          lcd_write_com@combuf 0001      __size_of_lcd_write_char 0014  
    __size_of_lcd_write_data 0016                     __Hrparam 0000                     __Lrparam 0000  
           __size_of___awdiv 0084             __size_of___awmod 0070                     __ptext10 7E62  
                   _lcdreset 7D9C                __size_of_main 011A       __size_of_lcd_wait_busy 0012  
                   main@buf1 0012                     main@buf2 0014           _lcd_write_com_busy 7CE2  
     __size_of_lcd_write_com 0012          ?_lcd_write_com_busy 0001         ??_lcd_write_com_busy 0002  
          _lcd_write_address 7D3E           ?_lcd_write_address 0003          ??_lcd_write_address 0004  
              _lcd_wait_busy 7CF0               _lcd_write_char 7D14               _lcd_write_data 7D28  
  __end_of_lcd_write_address 7D64                _lcd_write_com 7D02  
