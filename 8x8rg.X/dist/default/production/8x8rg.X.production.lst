

Microchip Technology PIC18 LITE Macro Assembler V1.35 build -356382666 
                                                                                               Wed Sep 23 15:17:54 2015

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1
    12                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    13                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    14  0000                     
    15                           	psect	smallconst
    16  000800                     __psmallconst:
    17                           	opt stack 0
    18  000800  00                 	db	0
    19  000801                     _TABLE:
    20                           	opt stack 0
    21  000801  00                 	db	0
    22  000802  00                 	db	0
    23  000803  00                 	db	0
    24  000804  00                 	db	0
    25  000805  00                 	db	0
    26  000806  00                 	db	0
    27  000807  00                 	db	0
    28  000808  00                 	db	0
    29  000809  00                 	db	0
    30  00080A  81                 	db	129
    31  00080B  FF                 	db	255
    32  00080C  91                 	db	145
    33  00080D  91                 	db	145
    34  00080E  91                 	db	145
    35  00080F  6E                 	db	110
    36  000810  00                 	db	0
    37  000811  00                 	db	0
    38  000812  81                 	db	129
    39  000813  FF                 	db	255
    40  000814  91                 	db	145
    41  000815  91                 	db	145
    42  000816  B9                 	db	185
    43  000817  C3                 	db	195
    44  000818  00                 	db	0
    45  000819  10                 	db	16
    46  00081A  10                 	db	16
    47  00081B  10                 	db	16
    48  00081C  00                 	db	0
    49  00081D  00                 	db	0
    50  00081E  81                 	db	129
    51  00081F  FF                 	db	255
    52  000820  91                 	db	145
    53  000821  90                 	db	144
    54  000822  B8                 	db	184
    55  000823  C0                 	db	192
    56  000824  00                 	db	0
    57  000825  81                 	db	129
    58  000826  FF                 	db	255
    59  000827  91                 	db	145
    60  000828  98                 	db	152
    61  000829  94                 	db	148
    62  00082A  63                 	db	99
    63  00082B  01                 	db	1
    64  00082C  00                 	db	0
    65  00082D  00                 	db	0
    66  00082E  81                 	db	129
    67  00082F  FF                 	db	255
    68  000830  81                 	db	129
    69  000831  00                 	db	0
    70  000832  00                 	db	0
    71  000833  81                 	db	129
    72  000834  FF                 	db	255
    73  000835  91                 	db	145
    74  000836  91                 	db	145
    75  000837  B9                 	db	185
    76  000838  C3                 	db	195
    77  000839  00                 	db	0
    78  00083A  81                 	db	129
    79  00083B  FF                 	db	255
    80  00083C  61                 	db	97
    81  00083D  18                 	db	24
    82  00083E  86                 	db	134
    83  00083F  FF                 	db	255
    84  000840  80                 	db	128
    85  000841  00                 	db	0
    86  000842  81                 	db	129
    87  000843  FF                 	db	255
    88  000844  81                 	db	129
    89  000845  81                 	db	129
    90  000846  81                 	db	129
    91  000847  42                 	db	66
    92  000848  3C                 	db	60
    93  000849  00                 	db	0
    94  00084A  00                 	db	0
    95  00084B  00                 	db	0
    96  00084C  00                 	db	0
    97  00084D  00                 	db	0
    98  00084E  00                 	db	0
    99  00084F  00                 	db	0
   100  000850  00                 	db	0
   101  000851  00                 	db	0
   102  000852  00                 	db	0
   103  000853  00                 	db	0
   104  000854  00                 	db	0
   105  000855  00                 	db	0
   106  000856  00                 	db	0
   107  000857  00                 	db	0
   108  000858  00                 	db	0
   109  000859                     __end_of_TABLE:
   110                           	opt stack 0
   111  000859                     _SCAN_TABLE:
   112                           	opt stack 0
   113  000859  FE                 	db	254
   114  00085A  FD                 	db	253
   115  00085B  FB                 	db	251
   116  00085C  F7                 	db	247
   117  00085D  EF                 	db	239
   118  00085E  DF                 	db	223
   119  00085F  BF                 	db	191
   120  000860  7F                 	db	127
   121  000861                     __end_of_SCAN_TABLE:
   122                           	opt stack 0
   123  0000                     _ADCON1	set	4033
   124  0000                     _CMCON	set	4020
   125  0000                     _LATB	set	3978
   126  0000                     _LATD	set	3980
   127  0000                     _TRISB	set	3987
   128  0000                     _TRISD	set	3989
   129  0000                     _LATA0	set	31816
   130  0000                     _LATA1	set	31817
   131  0000                     _LATA2	set	31818
   132  0000                     _LATA3	set	31819
   133  0000                     _LATA5	set	31821
   134  0000                     _LATE0	set	31848
   135  0000                     _LATE1	set	31849
   136  0000                     _LATE2	set	31850
   137  0000                     _RA0	set	31744
   138  0000                     _RA1	set	31745
   139  0000                     _RA2	set	31746
   140  0000                     _RA3	set	31747
   141  0000                     _RA5	set	31749
   142  0000                     _RE0	set	31776
   143  0000                     _RE1	set	31777
   144  0000                     _RE2	set	31778
   145  0000                     _TRISA0	set	31888
   146  0000                     _TRISA1	set	31889
   147  0000                     _TRISA2	set	31890
   148  0000                     _TRISA3	set	31891
   149  0000                     _TRISA5	set	31893
   150  0000                     _TRISE0	set	31920
   151  0000                     _TRISE1	set	31921
   152  0000                     _TRISE2	set	31922
   153                           
   154                           ; #config settings
   155  000861  00                 	db	0	; dummy byte at the end
   156  0000                     
   157                           	psect	cinit
   158  000B46                     __pcinit:
   159                           	opt stack 0
   160  000B46                     start_initialization:
   161                           	opt stack 0
   162  000B46                     __initialization:
   163                           	opt stack 0
   164  000B46                     end_of_initialization:
   165                           	opt stack 0
   166  000B46                     __end_of__initialization:
   167                           	opt stack 0
   168  000B46  0E00               	movlw	low (__Lmediumconst shr (0+16))
   169  000B48  6EF8               	movwf	tblptru,c
   170  000B4A  0100               	movlb	0
   171  000B4C  EF31  F004         	goto	_main	;jump to C main() function
   172                           tblptru	equ	0xFF8
   173                           
   174                           	psect	cstackCOMRAM
   175  000001                     __pcstackCOMRAM:
   176                           	opt stack 0
   177  000001                     ??_reverse_DATA:
   178  000001                     ??_PAE_WR:
   179  000001                     delay_ms@a:
   180                           	opt stack 0
   181                           
   182                           ; 2 bytes @ 0x0
   183  000001                     	ds	2
   184  000003                     ??_delay_ms:
   185  000003                     reverse_DATA@a:
   186                           	opt stack 0
   187  000003                     PAE_WR@data:
   188                           	opt stack 0
   189                           
   190                           ; 1 bytes @ 0x2
   191  000003                     	ds	1
   192  000004                     reverse_DATA@i:
   193                           	opt stack 0
   194  000004                     delay_ms@i:
   195                           	opt stack 0
   196                           
   197                           ; 2 bytes @ 0x3
   198  000004                     	ds	1
   199  000005                     reverse_DATA@b:
   200                           	opt stack 0
   201                           
   202                           ; 1 bytes @ 0x4
   203  000005                     	ds	1
   204  000006                     ??_main:
   205                           
   206                           ; 0 bytes @ 0x5
   207  000006                     	ds	2
   208  000008                     main@DELAY_COUNT:
   209                           	opt stack 0
   210                           
   211                           ; 1 bytes @ 0x7
   212  000008                     	ds	1
   213  000009                     main@COLOR_SELECT:
   214                           	opt stack 0
   215                           
   216                           ; 1 bytes @ 0x8
   217  000009                     	ds	1
   218  00000A                     main@INDEX:
   219                           	opt stack 0
   220                           
   221                           ; 1 bytes @ 0x9
   222  00000A                     	ds	1
   223  00000B                     main@SCAN_COUNT:
   224                           	opt stack 0
   225                           
   226                           ; 1 bytes @ 0xA
   227  00000B                     	ds	1
   228  00000C                     main@ROW_DATA:
   229                           	opt stack 0
   230                           
   231                           ; 1 bytes @ 0xB
   232  00000C                     	ds	1
   233                           tblptru	equ	0xFF8
   234                           
   235 ;;
   236 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   237 ;;
   238 ;; *************** function _main *****************
   239 ;; Defined at:
   240 ;;		line 105 in file "DotMatrix_8x8.c"
   241 ;; Parameters:    Size  Location     Type
   242 ;;		None
   243 ;; Auto vars:     Size  Location     Type
   244 ;;  ROW_DATA        1   11[COMRAM] unsigned char 
   245 ;;  SCAN_COUNT      1   10[COMRAM] unsigned char 
   246 ;;  INDEX           1    9[COMRAM] unsigned char 
   247 ;;  COLOR_SELECT    1    8[COMRAM] unsigned char 
   248 ;;  DELAY_COUNT     1    7[COMRAM] unsigned char 
   249 ;; Return value:  Size  Location     Type
   250 ;;		None               void
   251 ;; Registers used:
   252 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   253 ;; Tracked objects:
   254 ;;		On entry : 0/0
   255 ;;		On exit  : 0/0
   256 ;;		Unchanged: 0/0
   257 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   258 ;;      Params:         0       0       0       0       0       0       0       0       0
   259 ;;      Locals:         5       0       0       0       0       0       0       0       0
   260 ;;      Temps:          2       0       0       0       0       0       0       0       0
   261 ;;      Totals:         7       0       0       0       0       0       0       0       0
   262 ;;Total ram usage:        7 bytes
   263 ;; Hardware stack levels required when called:    1
   264 ;; This function calls:
   265 ;;		_PAE_WR
   266 ;;		_delay_ms
   267 ;;		_reverse_DATA
   268 ;; This function is called by:
   269 ;;		Startup code after reset
   270 ;; This function uses a non-reentrant model
   271 ;;
   272                           
   273                           	psect	text0
   274  000862                     __ptext0:
   275                           	opt stack 0
   276  000862                     _main:
   277                           	opt stack 30
   278                           
   279                           ;DotMatrix_8x8.c: 107: unsigned char COLOR_SELECT,DELAY_COUNT,INDEX,SCAN_COUNT;
   280                           ;DotMatrix_8x8.c: 109: ADCON1 = 0B00001111;
   281                           
   282                           ;incstack = 0
   283  000862  0E0F               	movlw	15
   284  000864  6EC1               	movwf	4033,c	;volatile
   285                           
   286                           ;DotMatrix_8x8.c: 110: CMCON = 0B00000111 ;
   287  000866  0E07               	movlw	7
   288  000868  6EB4               	movwf	4020,c	;volatile
   289                           
   290                           ;DotMatrix_8x8.c: 111: LATD = 0xff;
   291  00086A  688C               	setf	3980,c	;volatile
   292                           
   293                           ;DotMatrix_8x8.c: 112: TRISD = 0;
   294  00086C  0E00               	movlw	0
   295  00086E  6E95               	movwf	3989,c	;volatile
   296                           
   297                           ;DotMatrix_8x8.c: 113: LATB = 0xff;
   298  000870  688A               	setf	3978,c	;volatile
   299                           
   300                           ;DotMatrix_8x8.c: 114: TRISB = 0;
   301  000872  0E00               	movlw	0
   302  000874  6E93               	movwf	3987,c	;volatile
   303                           
   304                           ;DotMatrix_8x8.c: 116: COLOR_SELECT = 0;
   305  000876  0E00               	movlw	0
   306  000878  6E09               	movwf	main@COLOR_SELECT,c
   307                           
   308                           ;DotMatrix_8x8.c: 117: DELAY_COUNT = 0;
   309  00087A  0E00               	movlw	0
   310  00087C  6E08               	movwf	main@DELAY_COUNT,c
   311                           
   312                           ;DotMatrix_8x8.c: 118: INDEX = 0;
   313  00087E  0E00               	movlw	0
   314  000880  6E0A               	movwf	main@INDEX,c
   315                           
   316                           ;DotMatrix_8x8.c: 119: SCAN_COUNT = 0;
   317  000882  0E00               	movlw	0
   318  000884  6E0B               	movwf	main@SCAN_COUNT,c
   319                           
   320                           ;DotMatrix_8x8.c: 121: delay_ms(100);
   321  000886  0E00               	movlw	0
   322  000888  6E02               	movwf	delay_ms@a+1,c
   323  00088A  0E64               	movlw	100
   324  00088C  6E01               	movwf	delay_ms@a,c
   325  00088E  EC89  F005         	call	_delay_ms	;wreg free
   326  000892                     l860:
   327                           
   328                           ;DotMatrix_8x8.c: 124: {
   329                           ;DotMatrix_8x8.c: 125: LATB = 0xff;
   330  000892  688A               	setf	3978,c	;volatile
   331                           
   332                           ;DotMatrix_8x8.c: 127: unsigned char ROW_DATA = reverse_DATA(~TABLE[SCAN_COUNT+INDEX]);
   333  000894  500A               	movf	main@INDEX,w,c
   334  000896  C00B  F006         	movff	main@SCAN_COUNT,??_main
   335  00089A  6A07               	clrf	(??_main+1)& (0+255),c
   336  00089C  2606               	addwf	??_main,f,c
   337  00089E  0E00               	movlw	0
   338  0008A0  2207               	addwfc	??_main+1,f,c
   339  0008A2  0E01               	movlw	low _TABLE
   340  0008A4  2406               	addwf	??_main,w,c
   341  0008A6  6EF6               	movwf	tblptrl,c
   342  0008A8  0E08               	movlw	high _TABLE
   343  0008AA  2007               	addwfc	??_main+1,w,c
   344  0008AC  6EF7               	movwf	tblptrh,c
   345  0008AE                     	if	0	;There are less than 3 active tblptr bytes
   346  0008AE                     	endif
   347  0008AE  0008               	tblrd		*
   348  0008B0  50F5               	movf	tablat,w,c
   349  0008B2  0AFF               	xorlw	255
   350  0008B4  EC6A  F005         	call	_reverse_DATA
   351  0008B8  6E0C               	movwf	main@ROW_DATA,c
   352                           
   353                           ;DotMatrix_8x8.c: 128: switch(COLOR_SELECT)
   354  0008BA  D053               	goto	l902
   355  0008BC                     l90:
   356  0008BC  C00C  FF8C         	movff	main@ROW_DATA,3980	;volatile
   357                           
   358                           ;DotMatrix_8x8.c: 131: PAE_WR(0xff);
   359  0008C0  0EFF               	movlw	255
   360  0008C2  EC06  F005         	call	_PAE_WR
   361                           
   362                           ;DotMatrix_8x8.c: 132: break;
   363  0008C6  D073               	goto	l904
   364  0008C8                     l92:
   365  0008C8  688C               	setf	3980,c	;volatile
   366                           
   367                           ;DotMatrix_8x8.c: 134: PAE_WR(ROW_DATA);
   368  0008CA  500C               	movf	main@ROW_DATA,w,c
   369  0008CC  EC06  F005         	call	_PAE_WR
   370                           
   371                           ;DotMatrix_8x8.c: 135: break;
   372  0008D0  D06E               	goto	l904
   373  0008D2                     l93:
   374  0008D2  C00C  FF8C         	movff	main@ROW_DATA,3980	;volatile
   375                           
   376                           ;DotMatrix_8x8.c: 137: PAE_WR(ROW_DATA);
   377  0008D6  500C               	movf	main@ROW_DATA,w,c
   378  0008D8  EC06  F005         	call	_PAE_WR
   379                           
   380                           ;DotMatrix_8x8.c: 138: break;
   381  0008DC  D068               	goto	l904
   382  0008DE                     l870:
   383  0008DE  500C               	movf	main@ROW_DATA,w,c
   384  0008E0  0AFF               	xorlw	255
   385  0008E2  6E8C               	movwf	3980,c	;volatile
   386                           
   387                           ;DotMatrix_8x8.c: 141: PAE_WR(0xff);
   388  0008E4  0EFF               	movlw	255
   389  0008E6  EC06  F005         	call	_PAE_WR
   390                           
   391                           ;DotMatrix_8x8.c: 142: break;
   392  0008EA  D061               	goto	l904
   393  0008EC                     l874:
   394  0008EC  0E00               	movlw	0
   395  0008EE  6E8C               	movwf	3980,c	;volatile
   396                           
   397                           ;DotMatrix_8x8.c: 144: PAE_WR(ROW_DATA);
   398  0008F0  500C               	movf	main@ROW_DATA,w,c
   399  0008F2  EC06  F005         	call	_PAE_WR
   400                           
   401                           ;DotMatrix_8x8.c: 145: break;
   402  0008F6  D05B               	goto	l904
   403  0008F8                     l878:
   404  0008F8  500C               	movf	main@ROW_DATA,w,c
   405  0008FA  0AFF               	xorlw	255
   406  0008FC  6E8C               	movwf	3980,c	;volatile
   407                           
   408                           ;DotMatrix_8x8.c: 147: PAE_WR(ROW_DATA);
   409  0008FE  500C               	movf	main@ROW_DATA,w,c
   410  000900  EC06  F005         	call	_PAE_WR
   411                           
   412                           ;DotMatrix_8x8.c: 148: break;
   413  000904  D054               	goto	l904
   414  000906                     l882:
   415  000906  0E00               	movlw	0
   416  000908  6E8C               	movwf	3980,c	;volatile
   417                           
   418                           ;DotMatrix_8x8.c: 151: PAE_WR(~ROW_DATA);
   419  00090A  500C               	movf	main@ROW_DATA,w,c
   420  00090C  0AFF               	xorlw	255
   421  00090E  EC06  F005         	call	_PAE_WR
   422                           
   423                           ;DotMatrix_8x8.c: 152: break;
   424  000912  D04D               	goto	l904
   425  000914                     l886:
   426  000914  500C               	movf	main@ROW_DATA,w,c
   427  000916  0AFF               	xorlw	255
   428  000918  6E8C               	movwf	3980,c	;volatile
   429                           
   430                           ;DotMatrix_8x8.c: 154: PAE_WR(~ROW_DATA);
   431  00091A  500C               	movf	main@ROW_DATA,w,c
   432  00091C  0AFF               	xorlw	255
   433  00091E  EC06  F005         	call	_PAE_WR
   434                           
   435                           ;DotMatrix_8x8.c: 155: break;
   436  000922  D045               	goto	l904
   437  000924                     l890:
   438  000924  500C               	movf	main@ROW_DATA,w,c
   439  000926  0AFF               	xorlw	255
   440  000928  6E8C               	movwf	3980,c	;volatile
   441                           
   442                           ;DotMatrix_8x8.c: 157: PAE_WR(0x00);
   443  00092A  0E00               	movlw	0
   444  00092C  EC06  F005         	call	_PAE_WR
   445                           
   446                           ;DotMatrix_8x8.c: 158: break;
   447  000930  D03E               	goto	l904
   448  000932                     l100:
   449  000932  C00C  FF8C         	movff	main@ROW_DATA,3980	;volatile
   450                           
   451                           ;DotMatrix_8x8.c: 161: PAE_WR(~ROW_DATA);
   452  000936  500C               	movf	main@ROW_DATA,w,c
   453  000938  0AFF               	xorlw	255
   454  00093A  EC06  F005         	call	_PAE_WR
   455                           
   456                           ;DotMatrix_8x8.c: 162: break;
   457  00093E  D037               	goto	l904
   458  000940                     l101:
   459  000940  C00C  FF8C         	movff	main@ROW_DATA,3980	;volatile
   460                           
   461                           ;DotMatrix_8x8.c: 164: PAE_WR(0x00);
   462  000944  0E00               	movlw	0
   463  000946  EC06  F005         	call	_PAE_WR
   464                           
   465                           ;DotMatrix_8x8.c: 165: break;
   466  00094A  D031               	goto	l904
   467  00094C                     l102:
   468  00094C  688C               	setf	3980,c	;volatile
   469                           
   470                           ;DotMatrix_8x8.c: 167: PAE_WR(~ROW_DATA);
   471  00094E  500C               	movf	main@ROW_DATA,w,c
   472  000950  0AFF               	xorlw	255
   473  000952  EC06  F005         	call	_PAE_WR
   474                           
   475                           ;DotMatrix_8x8.c: 168: break;
   476  000956  D02B               	goto	l904
   477  000958                     l103:
   478  000958  688C               	setf	3980,c	;volatile
   479                           
   480                           ;DotMatrix_8x8.c: 171: PAE_WR(0xff);
   481  00095A  0EFF               	movlw	255
   482  00095C  EC06  F005         	call	_PAE_WR
   483                           
   484                           ;DotMatrix_8x8.c: 172: }
   485  000960  D026               	goto	l904
   486  000962                     l902:
   487  000962  5009               	movf	main@COLOR_SELECT,w,c
   488                           
   489                           ; Switch size 1, requested type "space"
   490                           ; Number of cases is 12, Range of values is 0 to 11
   491                           ; switch strategies available:
   492                           ; Name         Instructions Cycles
   493                           ; simple_byte           37    19 (average)
   494                           ;	Chosen strategy is simple_byte
   495  000964  0A00               	xorlw	0	; case 0
   496  000966  B4D8               	btfsc	status,2,c
   497  000968  D7A9               	goto	l90
   498  00096A  0A01               	xorlw	1	; case 1
   499  00096C  B4D8               	btfsc	status,2,c
   500  00096E  D7AC               	goto	l92
   501  000970  0A03               	xorlw	3	; case 2
   502  000972  B4D8               	btfsc	status,2,c
   503  000974  D7AE               	goto	l93
   504  000976  0A01               	xorlw	1	; case 3
   505  000978  B4D8               	btfsc	status,2,c
   506  00097A  D7B1               	goto	l870
   507  00097C  0A07               	xorlw	7	; case 4
   508  00097E  B4D8               	btfsc	status,2,c
   509  000980  D7B5               	goto	l874
   510  000982  0A01               	xorlw	1	; case 5
   511  000984  B4D8               	btfsc	status,2,c
   512  000986  D7B8               	goto	l878
   513  000988  0A03               	xorlw	3	; case 6
   514  00098A  B4D8               	btfsc	status,2,c
   515  00098C  D7BC               	goto	l882
   516  00098E  0A01               	xorlw	1	; case 7
   517  000990  B4D8               	btfsc	status,2,c
   518  000992  D7C0               	goto	l886
   519  000994  0A0F               	xorlw	15	; case 8
   520  000996  B4D8               	btfsc	status,2,c
   521  000998  D7C5               	goto	l890
   522  00099A  0A01               	xorlw	1	; case 9
   523  00099C  B4D8               	btfsc	status,2,c
   524  00099E  D7C9               	goto	l100
   525  0009A0  0A03               	xorlw	3	; case 10
   526  0009A2  B4D8               	btfsc	status,2,c
   527  0009A4  D7CD               	goto	l101
   528  0009A6  0A01               	xorlw	1	; case 11
   529  0009A8  B4D8               	btfsc	status,2,c
   530  0009AA  D7D0               	goto	l102
   531  0009AC  D7D5               	goto	l103
   532  0009AE                     l904:
   533                           
   534                           ;DotMatrix_8x8.c: 174: LATB = SCAN_TABLE[SCAN_COUNT];
   535  0009AE  500B               	movf	main@SCAN_COUNT,w,c
   536  0009B0  0D01               	mullw	1
   537  0009B2  0E59               	movlw	low _SCAN_TABLE
   538  0009B4  24F3               	addwf	prodl,w,c
   539  0009B6  6EF6               	movwf	tblptrl,c
   540  0009B8  0E08               	movlw	high _SCAN_TABLE
   541  0009BA  20F4               	addwfc	prodh,w,c
   542  0009BC  6EF7               	movwf	tblptrh,c
   543  0009BE                     	if	0	;There are less than 3 active tblptr bytes
   544  0009BE                     	endif
   545  0009BE  0008               	tblrd		*
   546  0009C0  CFF5 FF8A          	movff	tablat,3978	;volatile
   547                           
   548                           ;DotMatrix_8x8.c: 175: SCAN_COUNT++;
   549  0009C4  2A0B               	incf	main@SCAN_COUNT,f,c
   550                           
   551                           ;DotMatrix_8x8.c: 176: if(SCAN_COUNT >= 8) SCAN_COUNT = 0;
   552  0009C6  0E07               	movlw	7
   553  0009C8  640B               	cpfsgt	main@SCAN_COUNT,c
   554  0009CA  D002               	goto	l912
   555  0009CC  0E00               	movlw	0
   556  0009CE  6E0B               	movwf	main@SCAN_COUNT,c
   557  0009D0                     l912:
   558                           
   559                           ;DotMatrix_8x8.c: 178: if(DELAY_COUNT++ >= 50)
   560  0009D0  2A08               	incf	main@DELAY_COUNT,f,c
   561  0009D2  0408               	decf	main@DELAY_COUNT,w,c
   562  0009D4  6E06               	movwf	??_main& (0+255),c
   563  0009D6  0E31               	movlw	49
   564  0009D8  6406               	cpfsgt	??_main,c
   565  0009DA  D011               	goto	l924
   566                           
   567                           ;DotMatrix_8x8.c: 179: {
   568                           ;DotMatrix_8x8.c: 180: DELAY_COUNT = 0;
   569  0009DC  0E00               	movlw	0
   570  0009DE  6E08               	movwf	main@DELAY_COUNT,c
   571                           
   572                           ;DotMatrix_8x8.c: 181: if(INDEX++ >= 79)
   573  0009E0  2A0A               	incf	main@INDEX,f,c
   574  0009E2  040A               	decf	main@INDEX,w,c
   575  0009E4  6E06               	movwf	??_main& (0+255),c
   576  0009E6  0E4E               	movlw	78
   577  0009E8  6406               	cpfsgt	??_main,c
   578  0009EA  D009               	goto	l924
   579                           
   580                           ;DotMatrix_8x8.c: 182: {
   581                           ;DotMatrix_8x8.c: 183: INDEX = 0;
   582  0009EC  0E00               	movlw	0
   583  0009EE  6E0A               	movwf	main@INDEX,c
   584                           
   585                           ;DotMatrix_8x8.c: 184: if(COLOR_SELECT++ == 11) COLOR_SELECT = 0;
   586  0009F0  2A09               	incf	main@COLOR_SELECT,f,c
   587  0009F2  0E0C               	movlw	12
   588  0009F4  1809               	xorwf	main@COLOR_SELECT,w,c
   589  0009F6  A4D8               	btfss	status,2,c
   590  0009F8  D002               	goto	l924
   591  0009FA  0E00               	movlw	0
   592  0009FC  6E09               	movwf	main@COLOR_SELECT,c
   593  0009FE                     l924:
   594                           
   595                           ;DotMatrix_8x8.c: 185: }
   596                           ;DotMatrix_8x8.c: 186: }
   597                           ;DotMatrix_8x8.c: 187: delay_ms(1);
   598  0009FE  0E00               	movlw	0
   599  000A00  6E02               	movwf	delay_ms@a+1,c
   600  000A02  0E01               	movlw	1
   601  000A04  6E01               	movwf	delay_ms@a,c
   602  000A06  EC89  F005         	call	_delay_ms	;wreg free
   603  000A0A  D743               	goto	l860
   604  000A0C                     __end_of_main:
   605                           	opt stack 0
   606                           tblptru	equ	0xFF8
   607                           tblptrh	equ	0xFF7
   608                           tblptrl	equ	0xFF6
   609                           tablat	equ	0xFF5
   610                           prodh	equ	0xFF4
   611                           prodl	equ	0xFF3
   612                           status	equ	0xFD8
   613                           
   614 ;; *************** function _reverse_DATA *****************
   615 ;; Defined at:
   616 ;;		line 54 in file "DotMatrix_8x8.c"
   617 ;; Parameters:    Size  Location     Type
   618 ;;  a               1    wreg     unsigned char 
   619 ;; Auto vars:     Size  Location     Type
   620 ;;  a               1    2[COMRAM] unsigned char 
   621 ;;  i               1    3[COMRAM] unsigned char 
   622 ;;  b               1    4[COMRAM] unsigned char 
   623 ;; Return value:  Size  Location     Type
   624 ;;                  1    wreg      unsigned char 
   625 ;; Registers used:
   626 ;;		wreg, status,2, status,0
   627 ;; Tracked objects:
   628 ;;		On entry : 0/0
   629 ;;		On exit  : 0/0
   630 ;;		Unchanged: 0/0
   631 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   632 ;;      Params:         0       0       0       0       0       0       0       0       0
   633 ;;      Locals:         3       0       0       0       0       0       0       0       0
   634 ;;      Temps:          2       0       0       0       0       0       0       0       0
   635 ;;      Totals:         5       0       0       0       0       0       0       0       0
   636 ;;Total ram usage:        5 bytes
   637 ;; Hardware stack levels used:    1
   638 ;; This function calls:
   639 ;;		Nothing
   640 ;; This function is called by:
   641 ;;		_main
   642 ;; This function uses a non-reentrant model
   643 ;;
   644                           
   645                           	psect	text1
   646  000AD4                     __ptext1:
   647                           	opt stack 0
   648  000AD4                     _reverse_DATA:
   649                           	opt stack 30
   650                           
   651                           ;incstack = 0
   652                           ;reverse_DATA@a stored from wreg
   653  000AD4  6E03               	movwf	reverse_DATA@a,c
   654                           
   655                           ;DotMatrix_8x8.c: 56: unsigned char b = 0;
   656  000AD6  0E00               	movlw	0
   657  000AD8  6E05               	movwf	reverse_DATA@b,c
   658                           
   659                           ;DotMatrix_8x8.c: 57: for(unsigned char i=0;i<8;i++)
   660  000ADA  0E00               	movlw	0
   661  000ADC  6E04               	movwf	reverse_DATA@i,c
   662  000ADE                     l710:
   663  000ADE  0E07               	movlw	7
   664  000AE0  6404               	cpfsgt	reverse_DATA@i,c
   665  000AE2  D001               	goto	l714
   666  000AE4  D014               	goto	l724
   667  000AE6                     l714:
   668                           
   669                           ;DotMatrix_8x8.c: 58: {
   670                           ;DotMatrix_8x8.c: 59: if(((a>>i) & 0x01) == 0x01)
   671  000AE6  C004  F001         	movff	reverse_DATA@i,??_reverse_DATA
   672  000AEA  C003  F002         	movff	reverse_DATA@a,??_reverse_DATA+1
   673  000AEE  2A01               	incf	??_reverse_DATA,f,c
   674  000AF0  D002               	goto	u24
   675  000AF2                     u25:
   676  000AF2  90D8               	bcf	status,0,c
   677  000AF4  3202               	rrcf	??_reverse_DATA+1,f,c
   678  000AF6                     u24:
   679  000AF6  2E01               	decfsz	??_reverse_DATA,f,c
   680  000AF8  D7FC               	goto	u25
   681  000AFA  A002               	btfss	??_reverse_DATA+1,0,c
   682  000AFC  D003               	goto	l718
   683                           
   684                           ;DotMatrix_8x8.c: 60: b = (b<<1) +1;
   685  000AFE  80D8               	bsf	status,0,c
   686  000B00  3605               	rlcf	reverse_DATA@b,f,c
   687  000B02  D003               	goto	l720
   688  000B04                     l718:
   689                           
   690                           ;DotMatrix_8x8.c: 61: else b = (b<<1);
   691  000B04  5005               	movf	reverse_DATA@b,w,c
   692  000B06  2405               	addwf	reverse_DATA@b,w,c
   693  000B08  6E05               	movwf	reverse_DATA@b,c
   694  000B0A                     l720:
   695  000B0A  2A04               	incf	reverse_DATA@i,f,c
   696  000B0C  D7E8               	goto	l710
   697  000B0E                     l724:
   698                           
   699                           ;DotMatrix_8x8.c: 62: }
   700                           ;DotMatrix_8x8.c: 63: return b;
   701  000B0E  5005               	movf	reverse_DATA@b,w,c
   702  000B10  0012               	return	
   703  000B12                     __end_of_reverse_DATA:
   704                           	opt stack 0
   705                           tblptru	equ	0xFF8
   706                           tblptrh	equ	0xFF7
   707                           tblptrl	equ	0xFF6
   708                           tablat	equ	0xFF5
   709                           prodh	equ	0xFF4
   710                           prodl	equ	0xFF3
   711                           status	equ	0xFD8
   712                           
   713 ;; *************** function _delay_ms *****************
   714 ;; Defined at:
   715 ;;		line 66 in file "DotMatrix_8x8.c"
   716 ;; Parameters:    Size  Location     Type
   717 ;;  a               2    0[COMRAM] int 
   718 ;; Auto vars:     Size  Location     Type
   719 ;;  i               2    3[COMRAM] int 
   720 ;; Return value:  Size  Location     Type
   721 ;;		None               void
   722 ;; Registers used:
   723 ;;		wreg, status,2, status,0
   724 ;; Tracked objects:
   725 ;;		On entry : 0/0
   726 ;;		On exit  : 0/0
   727 ;;		Unchanged: 0/0
   728 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   729 ;;      Params:         2       0       0       0       0       0       0       0       0
   730 ;;      Locals:         2       0       0       0       0       0       0       0       0
   731 ;;      Temps:          1       0       0       0       0       0       0       0       0
   732 ;;      Totals:         5       0       0       0       0       0       0       0       0
   733 ;;Total ram usage:        5 bytes
   734 ;; Hardware stack levels used:    1
   735 ;; This function calls:
   736 ;;		Nothing
   737 ;; This function is called by:
   738 ;;		_main
   739 ;; This function uses a non-reentrant model
   740 ;;
   741                           
   742                           	psect	text2
   743  000B12                     __ptext2:
   744                           	opt stack 0
   745  000B12                     _delay_ms:
   746                           	opt stack 30
   747                           
   748                           ;DotMatrix_8x8.c: 68: int i;
   749                           ;DotMatrix_8x8.c: 69: for(i=0;i<a;i++) _delay((unsigned long)((996)*(16000000/4000000.0)
      +                          ));
   750                           
   751                           ;incstack = 0
   752  000B12  0E00               	movlw	0
   753  000B14  6E05               	movwf	delay_ms@i+1,c
   754  000B16  0E00               	movlw	0
   755  000B18  6E04               	movwf	delay_ms@i,c
   756  000B1A  D00A               	goto	l76
   757  000B1C                     l848:
   758  000B1C  0E06               	movlw	6
   759  000B1E  6E03               	movwf	??_delay_ms& (0+255),c
   760  000B20  0E2B               	movlw	43
   761  000B22                     u507:
   762  000B22  2EE8               	decfsz	wreg,f,c
   763  000B24  D7FE               	goto	u507
   764  000B26  2E03               	decfsz	??_delay_ms& (0+255),f,c
   765  000B28  D7FC               	goto	u507
   766  000B2A  F000               	nop	
   767  000B2C  4A04               	infsnz	delay_ms@i,f,c
   768  000B2E  2A05               	incf	delay_ms@i+1,f,c
   769  000B30                     l76:
   770  000B30  5001               	movf	delay_ms@a,w,c
   771  000B32  5C04               	subwf	delay_ms@i,w,c
   772  000B34  5005               	movf	delay_ms@i+1,w,c
   773  000B36  0A80               	xorlw	128
   774  000B38  6E03               	movwf	??_delay_ms& (0+255),c
   775  000B3A  5002               	movf	delay_ms@a+1,w,c
   776  000B3C  0A80               	xorlw	128
   777  000B3E  5803               	subwfb	??_delay_ms& (0+255),w,c
   778  000B40  B0D8               	btfsc	status,0,c
   779  000B42  0012               	return	
   780  000B44  D7EB               	goto	l848
   781  000B46                     __end_of_delay_ms:
   782                           	opt stack 0
   783                           tblptru	equ	0xFF8
   784                           tblptrh	equ	0xFF7
   785                           tblptrl	equ	0xFF6
   786                           tablat	equ	0xFF5
   787                           prodh	equ	0xFF4
   788                           prodl	equ	0xFF3
   789                           wreg	equ	0xFE8
   790                           status	equ	0xFD8
   791                           
   792 ;; *************** function _PAE_WR *****************
   793 ;; Defined at:
   794 ;;		line 90 in file "DotMatrix_8x8.c"
   795 ;; Parameters:    Size  Location     Type
   796 ;;  data            1    wreg     unsigned char 
   797 ;; Auto vars:     Size  Location     Type
   798 ;;  data            1    2[COMRAM] unsigned char 
   799 ;; Return value:  Size  Location     Type
   800 ;;		None               void
   801 ;; Registers used:
   802 ;;		wreg, status,2, status,0
   803 ;; Tracked objects:
   804 ;;		On entry : 0/0
   805 ;;		On exit  : 0/0
   806 ;;		Unchanged: 0/0
   807 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   808 ;;      Params:         0       0       0       0       0       0       0       0       0
   809 ;;      Locals:         1       0       0       0       0       0       0       0       0
   810 ;;      Temps:          2       0       0       0       0       0       0       0       0
   811 ;;      Totals:         3       0       0       0       0       0       0       0       0
   812 ;;Total ram usage:        3 bytes
   813 ;; Hardware stack levels used:    1
   814 ;; This function calls:
   815 ;;		Nothing
   816 ;; This function is called by:
   817 ;;		_main
   818 ;; This function uses a non-reentrant model
   819 ;;
   820                           
   821                           	psect	text3
   822  000A0C                     __ptext3:
   823                           	opt stack 0
   824  000A0C                     _PAE_WR:
   825                           	opt stack 30
   826                           
   827                           ;incstack = 0
   828                           ;PAE_WR@data stored from wreg
   829  000A0C  6E03               	movwf	PAE_WR@data,c
   830                           
   831                           ;DotMatrix_8x8.c: 92: LATA0 = data & 0x01;
   832  000A0E  A003               	btfss	PAE_WR@data,0,c
   833  000A10  D002               	goto	u60
   834  000A12  8089               	bsf	3977,0,c	;volatile
   835  000A14  D001               	goto	l736
   836  000A16                     u60:
   837  000A16  9089               	bcf	3977,0,c	;volatile
   838  000A18                     l736:
   839                           
   840                           ;DotMatrix_8x8.c: 93: LATA1 = (data>>1) & 0x01;
   841  000A18  C003  F001         	movff	PAE_WR@data,??_PAE_WR
   842  000A1C  90D8               	bcf	status,0,c
   843  000A1E  3201               	rrcf	??_PAE_WR,f,c
   844  000A20  3001               	rrcf	??_PAE_WR,w,c
   845  000A22  A0D8               	btfss	status,0,c
   846  000A24  D002               	goto	u80
   847  000A26  8289               	bsf	3977,1,c	;volatile
   848  000A28  D001               	goto	l738
   849  000A2A                     u80:
   850  000A2A  9289               	bcf	3977,1,c	;volatile
   851  000A2C                     l738:
   852                           
   853                           ;DotMatrix_8x8.c: 94: LATA2 = (data>>2) & 0x01;
   854  000A2C  C003  F001         	movff	PAE_WR@data,??_PAE_WR
   855  000A30  90D8               	bcf	status,0,c
   856  000A32  3201               	rrcf	??_PAE_WR,f,c
   857  000A34  90D8               	bcf	status,0,c
   858  000A36  3201               	rrcf	??_PAE_WR,f,c
   859  000A38  3001               	rrcf	??_PAE_WR,w,c
   860  000A3A  A0D8               	btfss	status,0,c
   861  000A3C  D002               	goto	u100
   862  000A3E  8489               	bsf	3977,2,c	;volatile
   863  000A40  D001               	goto	l740
   864  000A42                     u100:
   865  000A42  9489               	bcf	3977,2,c	;volatile
   866  000A44                     l740:
   867                           
   868                           ;DotMatrix_8x8.c: 95: LATA3 = (data>>3) & 0x01;
   869  000A44  C003  F001         	movff	PAE_WR@data,??_PAE_WR
   870  000A48  90D8               	bcf	status,0,c
   871  000A4A  3201               	rrcf	??_PAE_WR,f,c
   872  000A4C  90D8               	bcf	status,0,c
   873  000A4E  3201               	rrcf	??_PAE_WR,f,c
   874  000A50  90D8               	bcf	status,0,c
   875  000A52  3201               	rrcf	??_PAE_WR,f,c
   876  000A54  3001               	rrcf	??_PAE_WR,w,c
   877  000A56  A0D8               	btfss	status,0,c
   878  000A58  D002               	goto	u120
   879  000A5A  8689               	bsf	3977,3,c	;volatile
   880  000A5C  D001               	goto	l742
   881  000A5E                     u120:
   882  000A5E  9689               	bcf	3977,3,c	;volatile
   883  000A60                     l742:
   884                           
   885                           ;DotMatrix_8x8.c: 96: LATA5 = (data>>4) & 0x01;
   886  000A60  C003  F001         	movff	PAE_WR@data,??_PAE_WR
   887  000A64  3A01               	swapf	??_PAE_WR,f,c
   888  000A66  0E0F               	movlw	15
   889  000A68  1601               	andwf	??_PAE_WR,f,c
   890  000A6A  3001               	rrcf	??_PAE_WR,w,c
   891  000A6C  A0D8               	btfss	status,0,c
   892  000A6E  D002               	goto	u140
   893  000A70  8A89               	bsf	3977,5,c	;volatile
   894  000A72  D001               	goto	l744
   895  000A74                     u140:
   896  000A74  9A89               	bcf	3977,5,c	;volatile
   897  000A76                     l744:
   898                           
   899                           ;DotMatrix_8x8.c: 97: LATE0 = (data>>5) & 0x01;
   900  000A76  C003  F001         	movff	PAE_WR@data,??_PAE_WR
   901  000A7A  0E05               	movlw	5
   902  000A7C  6E02               	movwf	(??_PAE_WR+1)& (0+255),c
   903  000A7E                     u165:
   904  000A7E  90D8               	bcf	status,0,c
   905  000A80  3201               	rrcf	??_PAE_WR,f,c
   906  000A82  2E02               	decfsz	(??_PAE_WR+1)& (0+255),f,c
   907  000A84  D7FC               	goto	u165
   908  000A86  3001               	rrcf	??_PAE_WR,w,c
   909  000A88  A0D8               	btfss	status,0,c
   910  000A8A  D002               	goto	u170
   911  000A8C  808D               	bsf	3981,0,c	;volatile
   912  000A8E  D001               	goto	l746
   913  000A90                     u170:
   914  000A90  908D               	bcf	3981,0,c	;volatile
   915  000A92                     l746:
   916                           
   917                           ;DotMatrix_8x8.c: 98: LATE1 = (data>>6) & 0x01;
   918  000A92  C003  F001         	movff	PAE_WR@data,??_PAE_WR
   919  000A96  0E06               	movlw	6
   920  000A98  6E02               	movwf	(??_PAE_WR+1)& (0+255),c
   921  000A9A                     u195:
   922  000A9A  90D8               	bcf	status,0,c
   923  000A9C  3201               	rrcf	??_PAE_WR,f,c
   924  000A9E  2E02               	decfsz	(??_PAE_WR+1)& (0+255),f,c
   925  000AA0  D7FC               	goto	u195
   926  000AA2  3001               	rrcf	??_PAE_WR,w,c
   927  000AA4  A0D8               	btfss	status,0,c
   928  000AA6  D002               	goto	u200
   929  000AA8  828D               	bsf	3981,1,c	;volatile
   930  000AAA  D001               	goto	l748
   931  000AAC                     u200:
   932  000AAC  928D               	bcf	3981,1,c	;volatile
   933  000AAE                     l748:
   934                           
   935                           ;DotMatrix_8x8.c: 99: LATE2 = (data>>7) & 0x01;
   936  000AAE  6A01               	clrf	??_PAE_WR& (0+255),c
   937  000AB0  AE03               	btfss	PAE_WR@data,7,c
   938  000AB2  D001               	bra	u225
   939  000AB4  2A01               	incf	??_PAE_WR& (0+255),f,c
   940  000AB6                     u225:
   941  000AB6  3001               	rrcf	??_PAE_WR,w,c
   942  000AB8  A0D8               	btfss	status,0,c
   943  000ABA  D002               	goto	u230
   944  000ABC  848D               	bsf	3981,2,c	;volatile
   945  000ABE  D001               	goto	l750
   946  000AC0                     u230:
   947  000AC0  948D               	bcf	3981,2,c	;volatile
   948  000AC2                     l750:
   949                           
   950                           ;DotMatrix_8x8.c: 101: TRISA0 = 0; TRISA1 = 0; TRISA2 = 0; TRISA3 = 0;
   951  000AC2  9092               	bcf	3986,0,c	;volatile
   952  000AC4  9292               	bcf	3986,1,c	;volatile
   953  000AC6  9492               	bcf	3986,2,c	;volatile
   954  000AC8  9692               	bcf	3986,3,c	;volatile
   955                           
   956                           ;DotMatrix_8x8.c: 102: TRISA5 = 0; TRISE0 = 0; TRISE1 = 0; TRISE2 = 0;
   957  000ACA  9A92               	bcf	3986,5,c	;volatile
   958  000ACC  9096               	bcf	3990,0,c	;volatile
   959  000ACE  9296               	bcf	3990,1,c	;volatile
   960  000AD0  9496               	bcf	3990,2,c	;volatile
   961  000AD2  0012               	return		;funcret
   962  000AD4                     __end_of_PAE_WR:
   963                           	opt stack 0
   964                           tblptru	equ	0xFF8
   965                           tblptrh	equ	0xFF7
   966                           tblptrl	equ	0xFF6
   967                           tablat	equ	0xFF5
   968                           prodh	equ	0xFF4
   969                           prodl	equ	0xFF3
   970                           wreg	equ	0xFE8
   971                           status	equ	0xFD8
   972                           tblptru	equ	0xFF8
   973                           tblptrh	equ	0xFF7
   974                           tblptrl	equ	0xFF6
   975                           tablat	equ	0xFF5
   976                           prodh	equ	0xFF4
   977                           prodl	equ	0xFF3
   978                           wreg	equ	0xFE8
   979                           status	equ	0xFD8
   980                           
   981                           	psect	rparam
   982  0000                     tblptru	equ	0xFF8
   983                           tblptrh	equ	0xFF7
   984                           tblptrl	equ	0xFF6
   985                           tablat	equ	0xFF5
   986                           prodh	equ	0xFF4
   987                           prodl	equ	0xFF3
   988                           wreg	equ	0xFE8
   989                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    96
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     12      12
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_delay_ms
    _main->_reverse_DATA

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 7     7      0     895
                                              5 COMRAM     7     7      0
                             _PAE_WR
                           _delay_ms
                       _reverse_DATA
 ---------------------------------------------------------------------------------
 (1) _reverse_DATA                                         5     5      0     105
                                              0 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 (1) _delay_ms                                             5     3      2     132
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _PAE_WR                                               3     3      0     120
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _PAE_WR
   _delay_ms
   _reverse_DATA

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5F      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5F      C       C       1       12.6%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
ABS                  0      0       0      20        0.0%
BIGRAM             7FF      0       0      21        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%


Microchip Technology PIC18 Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Wed Sep 23 15:17:54 2015

                     l90 08BC                       l76 0B30                       l92 08C8  
                     l93 08D2                       u24 0AF6                       u25 0AF2  
                     u60 0A16                       u80 0A2A              __CFG_BORV$1 000000  
                    l100 0932                      l101 0940                      l102 094C  
                    l103 0958                      l710 0ADE                      l720 0B0A  
                    l714 0AE6                      l740 0A44                      l724 0B0E  
                    l750 0AC2                      l742 0A60                      l718 0B04  
                    l902 0962                      l744 0A76                      l736 0A18  
                    l912 09D0                      l904 09AE                      l746 0A92  
                    l738 0A2C                      l748 0AAE                      l924 09FE  
                    l860 0892                      l870 08DE                      l848 0B1C  
                    l890 0924                      l882 0906                      l874 08EC  
                    l886 0914                      l878 08F8                      _RA0 007C00  
                    _RA1 007C01                      _RA2 007C02                      _RA3 007C03  
                    _RA5 007C05                      _RE0 007C20                      _RE1 007C21  
                    u100 0A42                      _RE2 007C22                      u200 0AAC  
                    u120 0A5E                      u140 0A74                      u230 0AC0  
                    u225 0AB6                      u170 0A90                      u165 0A7E  
                    u195 0A9A                      u507 0B22                      wreg 000FE8  
           __CFG_FOSC$HS 000000             __CFG_LVP$OFF 000000             __CFG_WDT$OFF 000000  
                   _LATB 000F8A                     _LATD 000F8C                     _main 0862  
                   prodh 000FF4                     prodl 000FF3                     start 0000  
          __CFG_MCLRE$ON 000000             ___param_bank 000010                    ?_main 0001  
                  _CMCON 000FB4                    _LATA0 007C48                    _LATA1 007C49  
                  _LATA2 007C4A                    _LATA3 007C4B                    _LATA5 007C4D  
                  _LATE0 007C68                    _LATE1 007C69                    _LATE2 007C6A  
                  _TABLE 0801                    _TRISB 000F93                    _TRISD 000F95  
                  tablat 000FF5                    status 000FD8          __initialization 0B46  
           __end_of_main 0A0C                   ??_main 0006            __activetblptr 000002  
                 _ADCON1 000FC1                   _PAE_WR 0A0C                   _TRISA0 007C90  
                 _TRISA1 007C91                   _TRISA2 007C92                   _TRISA3 007C93  
                 _TRISA5 007C95                   _TRISE0 007CB0                   _TRISE1 007CB1  
                 _TRISE2 007CB2         __end_of_delay_ms 0B46           __CFG_XINST$OFF 000000  
           __mediumconst 0000                   tblptrh 000FF7                   tblptrl 000FF6  
                 tblptru 000FF8         main@COLOR_SELECT 0009               __accesstop 0060  
__end_of__initialization 0B46          __CFG_PBADEN$OFF 000000            ___rparam_used 000001  
          __end_of_TABLE 0859           __pcstackCOMRAM 0001                  ?_PAE_WR 0001  
     __end_of_SCAN_TABLE 0861                ?_delay_ms 0001          __size_of_PAE_WR 00C8  
                __Hparam 0000                  __Lparam 0000             __psmallconst 0800  
                __pcinit 0B46                  __ramtop 0800                  __ptext0 0862  
                __ptext1 0AD4                  __ptext2 0B12                  __ptext3 0A0C  
          ?_reverse_DATA 0001               ??_delay_ms 0003     end_of_initialization 0B46  
          __Lmediumconst 0000           ??_reverse_DATA 0001           __end_of_PAE_WR 0AD4  
        main@DELAY_COUNT 0008      start_initialization 0B46               PAE_WR@data 0003  
               ??_PAE_WR 0001       __CFG_BOR$ON_ACTIVE 000000        __size_of_delay_ms 0034  
   __end_of_reverse_DATA 0B12              __smallconst 0800                delay_ms@a 0001  
              delay_ms@i 0004                main@INDEX 000A                 __Hrparam 0000  
               __Lrparam 0000            reverse_DATA@a 0003            reverse_DATA@b 0005  
          reverse_DATA@i 0004                 _delay_ms 0B12    __size_of_reverse_DATA 003E  
          __size_of_main 01AA           main@SCAN_COUNT 000B             _reverse_DATA 0AD4  
             _SCAN_TABLE 0859             main@ROW_DATA 000C  
