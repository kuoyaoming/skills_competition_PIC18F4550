

Microchip Technology PIC18 LITE Macro Assembler V1.35 build -356382666 
                                                                                               Fri Oct 16 09:35:34 2015

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    15                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    16                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    17                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    18                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    19  0000                     
    20                           	psect	idataCOMRAM
    21  000B7E                     __pidataCOMRAM:
    22                           	opt stack 0
    23                           
    24                           ;initializer for _ScanLine
    25  000B7E  01                 	db	1
    26  000B7F  02                 	db	2
    27  000B80  04                 	db	4
    28  000B81  08                 	db	8
    29                           
    30                           	psect	smallconst
    31  000800                     __psmallconst:
    32                           	opt stack 0
    33  000800  00                 	db	0
    34  000801                     _LED:
    35                           	opt stack 0
    36  000801  3F                 	db	63
    37  000802  06                 	db	6
    38  000803  5B                 	db	91
    39  000804  4F                 	db	79
    40  000805  66                 	db	102
    41  000806  6D                 	db	109
    42  000807  7D                 	db	125
    43  000808  07                 	db	7
    44  000809  7F                 	db	127
    45  00080A  6F                 	db	111
    46  00080B  BF                 	db	191
    47  00080C  86                 	db	134
    48  00080D  DB                 	db	219
    49  00080E  CF                 	db	207
    50  00080F  E6                 	db	230
    51  000810  ED                 	db	237
    52  000811  FD                 	db	253
    53  000812  87                 	db	135
    54  000813  FF                 	db	255
    55  000814  EF                 	db	239
    56  000815                     __end_of_LED:
    57                           	opt stack 0
    58  0000                     _INTCONbits	set	4082
    59  0000                     _LATBbits	set	3978
    60  0000                     _LATD	set	3980
    61  0000                     _PORTB	set	3969
    62  0000                     _PORTD	set	3971
    63  0000                     _T0CONbits	set	4053
    64  0000                     _TMR0H	set	4055
    65  0000                     _TMR0L	set	4054
    66  0000                     _TRISBbits	set	3987
    67  0000                     _TRISD	set	3989
    68  0000                     _TMR0IE	set	32661
    69  0000                     _TMR0IF	set	32658
    70                           
    71                           ; #config settings
    72  000815  00                 	db	0	; dummy byte at the end
    73  0000                     
    74                           	psect	cinit
    75  000B40                     __pcinit:
    76                           	opt stack 0
    77  000B40                     start_initialization:
    78                           	opt stack 0
    79  000B40                     __initialization:
    80                           	opt stack 0
    81                           
    82                           ; Clear objects allocated to COMRAM (9 bytes)
    83  000B40  EE00  F027         	lfsr	0,__pbssCOMRAM
    84  000B44  0E09               	movlw	9
    85  000B46                     clear_0:
    86  000B46  6AEE               	clrf	postinc0,c
    87  000B48  06E8               	decf	wreg,f,c
    88  000B4A  E1FD               	bnz	clear_0
    89                           
    90                           ; Initialize objects allocated to COMRAM (4 bytes)
    91                           ; load TBLPTR registers with __pidataCOMRAM
    92  000B4C  0E7E               	movlw	low __pidataCOMRAM
    93  000B4E  6EF6               	movwf	tblptrl,c
    94  000B50  0E0B               	movlw	high __pidataCOMRAM
    95  000B52  6EF7               	movwf	tblptrh,c
    96  000B54  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
    97  000B56  6EF8               	movwf	tblptru,c
    98  000B58  EE00  F030         	lfsr	0,__pdataCOMRAM
    99  000B5C  EE10 F004          	lfsr	1,4
   100  000B60                     copy_data0:
   101  000B60  0009               	tblrd		*+
   102  000B62  CFF5 FFEE          	movff	tablat,postinc0
   103  000B66  50E5               	movf	postdec1,w,c
   104  000B68  50E1               	movf	fsr1l,w,c
   105  000B6A  E1FA               	bnz	copy_data0
   106  000B6C                     end_of_initialization:
   107                           	opt stack 0
   108  000B6C                     __end_of__initialization:
   109                           	opt stack 0
   110  000B6C  9034               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   111  000B6E  9234               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   112  000B70  0E00               	movlw	low (__Lsmallconst shr (0+16))
   113  000B72  6EF8               	movwf	tblptru,c
   114  000B74  0E08               	movlw	high __Lsmallconst
   115  000B76  6EF7               	movwf	tblptrh,c
   116  000B78  0100               	movlb	0
   117  000B7A  EF0B  F004         	goto	_main	;jump to C main() function
   118                           tblptru	equ	0xFF8
   119                           tblptrh	equ	0xFF7
   120                           tblptrl	equ	0xFF6
   121                           tablat	equ	0xFF5
   122                           postinc0	equ	0xFEE
   123                           wreg	equ	0xFE8
   124                           postdec1	equ	0xFE5
   125                           fsr1l	equ	0xFE1
   126                           
   127                           	psect	bssCOMRAM
   128  000027                     __pbssCOMRAM:
   129                           	opt stack 0
   130  000027                     _disp:
   131                           	opt stack 0
   132  000027                     	ds	4
   133  00002B                     _OutPortB:
   134                           	opt stack 0
   135  00002B                     	ds	1
   136  00002C                     _T0Flag:
   137                           	opt stack 0
   138  00002C                     	ds	1
   139  00002D                     _Timer1000m:
   140                           	opt stack 0
   141  00002D                     	ds	1
   142  00002E                     _Timer500m:
   143                           	opt stack 0
   144  00002E                     	ds	1
   145  00002F                     _pwmbuf:
   146                           	opt stack 0
   147  00002F                     	ds	1
   148                           tblptru	equ	0xFF8
   149                           tblptrh	equ	0xFF7
   150                           tblptrl	equ	0xFF6
   151                           tablat	equ	0xFF5
   152                           postinc0	equ	0xFEE
   153                           wreg	equ	0xFE8
   154                           postdec1	equ	0xFE5
   155                           fsr1l	equ	0xFE1
   156                           
   157                           	psect	dataCOMRAM
   158  000030                     __pdataCOMRAM:
   159                           	opt stack 0
   160  000030                     _ScanLine:
   161                           	opt stack 0
   162  000030                     	ds	4
   163                           tblptru	equ	0xFF8
   164                           tblptrh	equ	0xFF7
   165                           tblptrl	equ	0xFF6
   166                           tablat	equ	0xFF5
   167                           postinc0	equ	0xFEE
   168                           wreg	equ	0xFE8
   169                           postdec1	equ	0xFE5
   170                           fsr1l	equ	0xFE1
   171                           
   172                           	psect	cstackCOMRAM
   173  000001                     __pcstackCOMRAM:
   174                           	opt stack 0
   175  000001                     ??_HighISR:
   176                           
   177                           ; 0 bytes @ 0x0
   178  000001                     	ds	14
   179  00000F                     ?___lwdiv:
   180                           	opt stack 0
   181  00000F                     ___lwdiv@dividend:
   182                           	opt stack 0
   183                           
   184                           ; 2 bytes @ 0xE
   185  00000F                     	ds	2
   186  000011                     ___lwdiv@divisor:
   187                           	opt stack 0
   188                           
   189                           ; 2 bytes @ 0x10
   190  000011                     	ds	2
   191  000013                     ___lwdiv@quotient:
   192                           	opt stack 0
   193                           
   194                           ; 2 bytes @ 0x12
   195  000013                     	ds	2
   196  000015                     ___lwdiv@counter:
   197                           	opt stack 0
   198                           
   199                           ; 1 bytes @ 0x14
   200  000015                     	ds	1
   201  000016                     ?___lwmod:
   202                           	opt stack 0
   203  000016                     ___lwmod@dividend:
   204                           	opt stack 0
   205                           
   206                           ; 2 bytes @ 0x15
   207  000016                     	ds	2
   208  000018                     ___lwmod@divisor:
   209                           	opt stack 0
   210                           
   211                           ; 2 bytes @ 0x17
   212  000018                     	ds	2
   213  00001A                     ___lwmod@counter:
   214                           	opt stack 0
   215                           
   216                           ; 1 bytes @ 0x19
   217  00001A                     	ds	1
   218  00001B                     ??_main:
   219                           
   220                           ; 0 bytes @ 0x1A
   221  00001B                     	ds	2
   222  00001D                     main@t:
   223                           	opt stack 0
   224                           
   225                           ; 2 bytes @ 0x1C
   226  00001D                     	ds	2
   227  00001F                     main@tt:
   228                           	opt stack 0
   229                           
   230                           ; 2 bytes @ 0x1E
   231  00001F                     	ds	2
   232  000021                     main@i:
   233                           	opt stack 0
   234                           
   235                           ; 2 bytes @ 0x20
   236  000021                     	ds	2
   237  000023                     main@sec:
   238                           	opt stack 0
   239                           
   240                           ; 2 bytes @ 0x22
   241  000023                     	ds	2
   242  000025                     main@min:
   243                           	opt stack 0
   244                           
   245                           ; 2 bytes @ 0x24
   246  000025                     	ds	2
   247                           tblptru	equ	0xFF8
   248                           tblptrh	equ	0xFF7
   249                           tblptrl	equ	0xFF6
   250                           tablat	equ	0xFF5
   251                           postinc0	equ	0xFEE
   252                           wreg	equ	0xFE8
   253                           postdec1	equ	0xFE5
   254                           fsr1l	equ	0xFE1
   255                           
   256 ;;
   257 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   258 ;;
   259 ;; *************** function _main *****************
   260 ;; Defined at:
   261 ;;		line 39 in file "4-7seg.c"
   262 ;; Parameters:    Size  Location     Type
   263 ;;		None
   264 ;; Auto vars:     Size  Location     Type
   265 ;;  min             2   36[COMRAM] unsigned int 
   266 ;;  sec             2   34[COMRAM] unsigned int 
   267 ;;  i               2   32[COMRAM] unsigned int 
   268 ;;  tt              2   30[COMRAM] unsigned int 
   269 ;;  t               2   28[COMRAM] unsigned int 
   270 ;; Return value:  Size  Location     Type
   271 ;;		None               void
   272 ;; Registers used:
   273 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   274 ;; Tracked objects:
   275 ;;		On entry : 0/0
   276 ;;		On exit  : 0/0
   277 ;;		Unchanged: 0/0
   278 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   279 ;;      Params:         0       0       0       0       0       0       0       0       0
   280 ;;      Locals:        10       0       0       0       0       0       0       0       0
   281 ;;      Temps:          2       0       0       0       0       0       0       0       0
   282 ;;      Totals:        12       0       0       0       0       0       0       0       0
   283 ;;Total ram usage:       12 bytes
   284 ;; Hardware stack levels required when called:    2
   285 ;; This function calls:
   286 ;;		___lwdiv
   287 ;;		___lwmod
   288 ;; This function is called by:
   289 ;;		Startup code after reset
   290 ;; This function uses a non-reentrant model
   291 ;;
   292                           
   293                           	psect	text0
   294  000816                     __ptext0:
   295                           	opt stack 0
   296  000816                     _main:
   297                           	opt stack 29
   298                           
   299                           ;4-7seg.c: 42: T0CONbits.T08BIT = 0;
   300                           
   301                           ;incstack = 0
   302  000816  9CD5               	bcf	4053,6,c	;volatile
   303                           
   304                           ;4-7seg.c: 43: T0CONbits.T0CS = 0;
   305  000818  9AD5               	bcf	4053,5,c	;volatile
   306                           
   307                           ;4-7seg.c: 44: T0CONbits.T0SE = 0;
   308  00081A  98D5               	bcf	4053,4,c	;volatile
   309                           
   310                           ;4-7seg.c: 45: T0CONbits.PSA = 0;
   311  00081C  96D5               	bcf	4053,3,c	;volatile
   312                           
   313                           ;4-7seg.c: 46: T0CONbits.T0PS = 0x07;
   314  00081E  80D5               	bsf	4053,0,c	;volatile
   315  000820  82D5               	bsf	4053,1,c	;volatile
   316  000822  84D5               	bsf	4053,2,c	;volatile
   317                           
   318                           ;4-7seg.c: 47: ((void)(TMR0H=((65536-788)>>8),TMR0L=((65536-788)&0xFF)));
   319  000824  0EFC               	movlw	252
   320  000826  6ED7               	movwf	4055,c	;volatile
   321  000828  0EEC               	movlw	236
   322  00082A  6ED6               	movwf	4054,c	;volatile
   323                           
   324                           ;4-7seg.c: 48: T0CONbits.TMR0ON = 1;
   325  00082C  8ED5               	bsf	4053,7,c	;volatile
   326                           
   327                           ;4-7seg.c: 49: INTCONbits.TMR0IF = 0;
   328  00082E  94F2               	bcf	intcon,2,c	;volatile
   329                           
   330                           ;4-7seg.c: 50: INTCONbits.TMR0IE = 1;
   331  000830  8AF2               	bsf	intcon,5,c	;volatile
   332                           
   333                           ;4-7seg.c: 51: INTCONbits.PEIE = 1;
   334  000832  8CF2               	bsf	intcon,6,c	;volatile
   335                           
   336                           ;4-7seg.c: 52: INTCONbits.GIE = 1;
   337  000834  8EF2               	bsf	intcon,7,c	;volatile
   338                           
   339                           ;4-7seg.c: 56: LATBbits.LATB0 = 1;
   340  000836  808A               	bsf	3978,0,c	;volatile
   341                           
   342                           ;4-7seg.c: 57: TRISBbits.TRISB0= 0;
   343  000838  9093               	bcf	3987,0,c	;volatile
   344                           
   345                           ;4-7seg.c: 58: LATBbits.LATB1 = 0;
   346  00083A  928A               	bcf	3978,1,c	;volatile
   347                           
   348                           ;4-7seg.c: 59: TRISBbits.TRISB1= 0;
   349  00083C  9293               	bcf	3987,1,c	;volatile
   350                           
   351                           ;4-7seg.c: 60: LATBbits.LATB2 = 1;
   352  00083E  848A               	bsf	3978,2,c	;volatile
   353                           
   354                           ;4-7seg.c: 61: TRISBbits.TRISB2= 0;
   355  000840  9493               	bcf	3987,2,c	;volatile
   356                           
   357                           ;4-7seg.c: 62: LATBbits.LATB3 = 0;
   358  000842  968A               	bcf	3978,3,c	;volatile
   359                           
   360                           ;4-7seg.c: 63: TRISBbits.TRISB3= 0;
   361  000844  9693               	bcf	3987,3,c	;volatile
   362                           
   363                           ;4-7seg.c: 64: LATD = 0;
   364  000846  0E00               	movlw	0
   365  000848  6E8C               	movwf	3980,c	;volatile
   366                           
   367                           ;4-7seg.c: 65: TRISD = 0;
   368  00084A  0E00               	movlw	0
   369  00084C  6E95               	movwf	3989,c	;volatile
   370                           
   371                           ;4-7seg.c: 71: unsigned int t = 0;
   372  00084E  0E00               	movlw	0
   373  000850  6E1E               	movwf	main@t+1,c
   374  000852  0E00               	movlw	0
   375  000854  6E1D               	movwf	main@t,c
   376                           
   377                           ;4-7seg.c: 72: unsigned int tt = 0;
   378  000856  0E00               	movlw	0
   379  000858  6E20               	movwf	main@tt+1,c
   380  00085A  0E00               	movlw	0
   381  00085C  6E1F               	movwf	main@tt,c
   382                           
   383                           ;4-7seg.c: 73: unsigned int i = 0;
   384  00085E  0E00               	movlw	0
   385  000860  6E22               	movwf	main@i+1,c
   386  000862  0E00               	movlw	0
   387  000864  6E21               	movwf	main@i,c
   388                           
   389                           ;4-7seg.c: 74: unsigned int sec = 0;
   390  000866  0E00               	movlw	0
   391  000868  6E24               	movwf	main@sec+1,c
   392  00086A  0E00               	movlw	0
   393  00086C  6E23               	movwf	main@sec,c
   394  00086E  D0D8               	goto	l894
   395  000870                     l848:
   396                           
   397                           ;4-7seg.c: 80: {
   398                           ;4-7seg.c: 82: disp[0]=LED[sec%10];
   399  000870  C023  F016         	movff	main@sec,___lwmod@dividend
   400  000874  C024  F017         	movff	main@sec+1,___lwmod@dividend+1
   401  000878  0E00               	movlw	0
   402  00087A  6E19               	movwf	___lwmod@divisor+1,c
   403  00087C  0E0A               	movlw	10
   404  00087E  6E18               	movwf	___lwmod@divisor,c
   405  000880  EC7F  F005         	call	___lwmod	;wreg free
   406  000884  0E01               	movlw	low _LED
   407  000886  2416               	addwf	?___lwmod,w,c
   408  000888  6EF6               	movwf	tblptrl,c
   409  00088A  0E08               	movlw	high _LED
   410  00088C  2017               	addwfc	?___lwmod+1,w,c
   411  00088E  6EF7               	movwf	tblptrh,c
   412  000890                     	if	0	;There are less than 3 active tblptr bytes
   413  000890                     	endif
   414  000890  0008               	tblrd		*
   415  000892  CFF5 F027          	movff	tablat,_disp
   416                           
   417                           ;4-7seg.c: 83: disp[1]=LED[sec/10%10];
   418  000896  0E00               	movlw	0
   419  000898  6E12               	movwf	___lwdiv@divisor+1,c
   420  00089A  0E0A               	movlw	10
   421  00089C  6E11               	movwf	___lwdiv@divisor,c
   422  00089E  C023  F00F         	movff	main@sec,___lwdiv@dividend
   423  0008A2  C024  F010         	movff	main@sec+1,___lwdiv@dividend+1
   424  0008A6  EC56  F005         	call	___lwdiv	;wreg free
   425  0008AA  C00F  F016         	movff	?___lwdiv,___lwmod@dividend
   426  0008AE  C010  F017         	movff	?___lwdiv+1,___lwmod@dividend+1
   427  0008B2  0E00               	movlw	0
   428  0008B4  6E19               	movwf	___lwmod@divisor+1,c
   429  0008B6  0E0A               	movlw	10
   430  0008B8  6E18               	movwf	___lwmod@divisor,c
   431  0008BA  EC7F  F005         	call	___lwmod	;wreg free
   432  0008BE  0E01               	movlw	low _LED
   433  0008C0  2416               	addwf	?___lwmod,w,c
   434  0008C2  6EF6               	movwf	tblptrl,c
   435  0008C4  0E08               	movlw	high _LED
   436  0008C6  2017               	addwfc	?___lwmod+1,w,c
   437  0008C8  6EF7               	movwf	tblptrh,c
   438  0008CA                     	if	0	;There are less than 3 active tblptr bytes
   439  0008CA                     	endif
   440  0008CA  0008               	tblrd		*
   441  0008CC  CFF5 F028          	movff	tablat,_disp+1
   442                           
   443                           ;4-7seg.c: 85: disp[3]=LED[min/10%10];
   444  0008D0  0E00               	movlw	0
   445  0008D2  6E12               	movwf	___lwdiv@divisor+1,c
   446  0008D4  0E0A               	movlw	10
   447  0008D6  6E11               	movwf	___lwdiv@divisor,c
   448  0008D8  C025  F00F         	movff	main@min,___lwdiv@dividend
   449  0008DC  C026  F010         	movff	main@min+1,___lwdiv@dividend+1
   450  0008E0  EC56  F005         	call	___lwdiv	;wreg free
   451  0008E4  C00F  F016         	movff	?___lwdiv,___lwmod@dividend
   452  0008E8  C010  F017         	movff	?___lwdiv+1,___lwmod@dividend+1
   453  0008EC  0E00               	movlw	0
   454  0008EE  6E19               	movwf	___lwmod@divisor+1,c
   455  0008F0  0E0A               	movlw	10
   456  0008F2  6E18               	movwf	___lwmod@divisor,c
   457  0008F4  EC7F  F005         	call	___lwmod	;wreg free
   458  0008F8  0E01               	movlw	low _LED
   459  0008FA  2416               	addwf	?___lwmod,w,c
   460  0008FC  6EF6               	movwf	tblptrl,c
   461  0008FE  0E08               	movlw	high _LED
   462  000900  2017               	addwfc	?___lwmod+1,w,c
   463  000902  6EF7               	movwf	tblptrh,c
   464  000904                     	if	0	;There are less than 3 active tblptr bytes
   465  000904                     	endif
   466  000904  0008               	tblrd		*
   467  000906  CFF5 F02A          	movff	tablat,_disp+3
   468                           
   469                           ;4-7seg.c: 87: if(Timer500m)
   470  00090A  502E               	movf	_Timer500m,w,c
   471  00090C  B4D8               	btfsc	status,2,c
   472  00090E  D00F               	goto	l858
   473                           
   474                           ;4-7seg.c: 88: {
   475                           ;4-7seg.c: 89: disp[2]=LED[(min%10)+10];
   476  000910  C025  F016         	movff	main@min,___lwmod@dividend
   477  000914  C026  F017         	movff	main@min+1,___lwmod@dividend+1
   478  000918  0E00               	movlw	0
   479  00091A  6E19               	movwf	___lwmod@divisor+1,c
   480  00091C  0E0A               	movlw	10
   481  00091E  6E18               	movwf	___lwmod@divisor,c
   482  000920  EC7F  F005         	call	___lwmod	;wreg free
   483  000924  0E0A               	movlw	10
   484  000926  2616               	addwf	?___lwmod,f,c
   485  000928  0E00               	movlw	0
   486  00092A  2217               	addwfc	?___lwmod+1,f,c
   487  00092C  D00A               	goto	L1
   488  00092E                     l858:
   489                           
   490                           ;4-7seg.c: 91: else
   491                           ;4-7seg.c: 92: {
   492                           ;4-7seg.c: 93: disp[2]=LED[min%10];
   493  00092E  C025  F016         	movff	main@min,___lwmod@dividend
   494  000932  C026  F017         	movff	main@min+1,___lwmod@dividend+1
   495  000936  0E00               	movlw	0
   496  000938  6E19               	movwf	___lwmod@divisor+1,c
   497  00093A  0E0A               	movlw	10
   498  00093C  6E18               	movwf	___lwmod@divisor,c
   499  00093E  EC7F  F005         	call	___lwmod	;wreg free
   500  000942                     L1:
   501  000942  0E01               	movlw	low _LED
   502  000944  2416               	addwf	?___lwmod,w,c
   503  000946  6EF6               	movwf	tblptrl,c
   504  000948  0E08               	movlw	high _LED
   505  00094A  2017               	addwfc	?___lwmod+1,w,c
   506  00094C  6EF7               	movwf	tblptrh,c
   507  00094E                     	if	0	;There are less than 3 active tblptr bytes
   508  00094E                     	endif
   509  00094E  0008               	tblrd		*
   510  000950  CFF5 F029          	movff	tablat,_disp+2
   511                           
   512                           ;4-7seg.c: 94: }
   513                           ;4-7seg.c: 96: OutPortB=PORTB & 0xf0;
   514  000954  5081               	movf	3969,w,c	;volatile
   515  000956  0BF0               	andlw	240
   516  000958  6E2B               	movwf	_OutPortB,c
   517                           
   518                           ;4-7seg.c: 98: PORTD=0xff;
   519  00095A  6883               	setf	3971,c	;volatile
   520                           
   521                           ;4-7seg.c: 99: PORTB=OutPortB | 0x0f;
   522  00095C  502B               	movf	_OutPortB,w,c
   523  00095E  090F               	iorlw	15
   524  000960  6E81               	movwf	3969,c	;volatile
   525                           
   526                           ;4-7seg.c: 101: if(++i>3)i=0;
   527  000962  4A21               	infsnz	main@i,f,c
   528  000964  2A22               	incf	main@i+1,f,c
   529  000966  5022               	movf	main@i+1,w,c
   530  000968  E104               	bnz	u230
   531  00096A  0E04               	movlw	4
   532  00096C  5C21               	subwf	main@i,w,c
   533  00096E  A0D8               	btfss	status,0,c
   534  000970  D004               	goto	l870
   535  000972                     u230:
   536  000972  0E00               	movlw	0
   537  000974  6E22               	movwf	main@i+1,c
   538  000976  0E00               	movlw	0
   539  000978  6E21               	movwf	main@i,c
   540  00097A                     l870:
   541                           
   542                           ;4-7seg.c: 102: OutPortB = OutPortB | (~ScanLine[i]);
   543  00097A  0E30               	movlw	low _ScanLine
   544  00097C  2421               	addwf	main@i,w,c
   545  00097E  6ED9               	movwf	fsr2l,c
   546  000980  0E00               	movlw	high _ScanLine
   547  000982  2022               	addwfc	main@i+1,w,c
   548  000984  6EDA               	movwf	fsr2h,c
   549  000986  50DF               	movf	indf2,w,c
   550  000988  0AFF               	xorlw	255
   551  00098A  102B               	iorwf	_OutPortB,w,c
   552  00098C  6E2B               	movwf	_OutPortB,c
   553                           
   554                           ;4-7seg.c: 103: PORTB = OutPortB;
   555  00098E  C02B  FF81         	movff	_OutPortB,3969	;volatile
   556                           
   557                           ;4-7seg.c: 104: PORTD=~disp[i];
   558  000992  0E27               	movlw	low _disp
   559  000994  2421               	addwf	main@i,w,c
   560  000996  6ED9               	movwf	fsr2l,c
   561  000998  0E00               	movlw	high _disp
   562  00099A  2022               	addwfc	main@i+1,w,c
   563  00099C  6EDA               	movwf	fsr2h,c
   564  00099E  50DF               	movf	indf2,w,c
   565  0009A0  0AFF               	xorlw	255
   566  0009A2  6E83               	movwf	3971,c	;volatile
   567                           
   568                           ;4-7seg.c: 106: if (T0Flag)
   569  0009A4  502C               	movf	_T0Flag,w,c
   570  0009A6  B4D8               	btfsc	status,2,c
   571  0009A8  D763               	goto	l848
   572                           
   573                           ;4-7seg.c: 107: {
   574                           ;4-7seg.c: 108: T0Flag = 0;
   575  0009AA  0E00               	movlw	0
   576  0009AC  6E2C               	movwf	_T0Flag,c
   577                           
   578                           ;4-7seg.c: 109: Timer1000m=1;
   579  0009AE  0E01               	movlw	1
   580  0009B0  6E2D               	movwf	_Timer1000m,c
   581                           
   582                           ;4-7seg.c: 110: if(++tt>14)
   583  0009B2  4A1F               	infsnz	main@tt,f,c
   584  0009B4  2A20               	incf	main@tt+1,f,c
   585  0009B6  5020               	movf	main@tt+1,w,c
   586  0009B8  E104               	bnz	u250
   587  0009BA  0E0F               	movlw	15
   588  0009BC  5C1F               	subwf	main@tt,w,c
   589  0009BE  A0D8               	btfss	status,0,c
   590  0009C0  D005               	goto	l884
   591  0009C2                     u250:
   592                           
   593                           ;4-7seg.c: 111: {
   594                           ;4-7seg.c: 112: tt=0;
   595  0009C2  0E00               	movlw	0
   596  0009C4  6E20               	movwf	main@tt+1,c
   597  0009C6  0E00               	movlw	0
   598  0009C8  6E1F               	movwf	main@tt,c
   599                           
   600                           ;4-7seg.c: 113: Timer500m=~Timer500m;
   601  0009CA  1E2E               	comf	_Timer500m,f,c
   602  0009CC                     l884:
   603                           
   604                           ;4-7seg.c: 114: }
   605                           ;4-7seg.c: 115: if(++t>29)
   606  0009CC  4A1D               	infsnz	main@t,f,c
   607  0009CE  2A1E               	incf	main@t+1,f,c
   608  0009D0  501E               	movf	main@t+1,w,c
   609  0009D2  E104               	bnz	u260
   610  0009D4  0E1E               	movlw	30
   611  0009D6  5C1D               	subwf	main@t,w,c
   612  0009D8  A0D8               	btfss	status,0,c
   613  0009DA  D74A               	goto	l848
   614  0009DC                     u260:
   615                           
   616                           ;4-7seg.c: 116: {
   617                           ;4-7seg.c: 117: t=0;
   618  0009DC  0E00               	movlw	0
   619  0009DE  6E1E               	movwf	main@t+1,c
   620  0009E0  0E00               	movlw	0
   621  0009E2  6E1D               	movwf	main@t,c
   622                           
   623                           ;4-7seg.c: 118: Timer1000m=1;
   624  0009E4  0E01               	movlw	1
   625  0009E6  6E2D               	movwf	_Timer1000m,c
   626                           
   627                           ;4-7seg.c: 119: if(sec++>58)
   628  0009E8  5023               	movf	main@sec,w,c
   629  0009EA  6E1B               	movwf	??_main& (0+255),c
   630  0009EC  5024               	movf	main@sec+1,w,c
   631  0009EE  6E1C               	movwf	(??_main+1)& (0+255),c
   632  0009F0  4A23               	infsnz	main@sec,f,c
   633  0009F2  2A24               	incf	main@sec+1,f,c
   634  0009F4  501C               	movf	??_main+1,w,c
   635  0009F6  E104               	bnz	u270
   636  0009F8  0E3B               	movlw	59
   637  0009FA  5C1B               	subwf	??_main,w,c
   638  0009FC  A0D8               	btfss	status,0,c
   639  0009FE  D738               	goto	l848
   640  000A00                     u270:
   641                           
   642                           ;4-7seg.c: 120: {
   643                           ;4-7seg.c: 121: sec=0;
   644  000A00  0E00               	movlw	0
   645  000A02  6E24               	movwf	main@sec+1,c
   646  000A04  0E00               	movlw	0
   647  000A06  6E23               	movwf	main@sec,c
   648                           
   649                           ;4-7seg.c: 123: if(min++>58)
   650  000A08  5025               	movf	main@min,w,c
   651  000A0A  6E1B               	movwf	??_main& (0+255),c
   652  000A0C  5026               	movf	main@min+1,w,c
   653  000A0E  6E1C               	movwf	(??_main+1)& (0+255),c
   654  000A10  4A25               	infsnz	main@min,f,c
   655  000A12  2A26               	incf	main@min+1,f,c
   656  000A14  501C               	movf	??_main+1,w,c
   657  000A16  E104               	bnz	u280
   658  000A18  0E3B               	movlw	59
   659  000A1A  5C1B               	subwf	??_main,w,c
   660  000A1C  A0D8               	btfss	status,0,c
   661  000A1E  D728               	goto	l848
   662  000A20                     u280:
   663  000A20                     l894:
   664                           
   665                           ;4-7seg.c: 124: {
   666                           ;4-7seg.c: 125: min=0;
   667  000A20  0E00               	movlw	0
   668  000A22  6E26               	movwf	main@min+1,c
   669  000A24  0E00               	movlw	0
   670  000A26  6E25               	movwf	main@min,c
   671  000A28  D723               	goto	l848
   672  000A2A                     __end_of_main:
   673                           	opt stack 0
   674                           tblptru	equ	0xFF8
   675                           tblptrh	equ	0xFF7
   676                           tblptrl	equ	0xFF6
   677                           tablat	equ	0xFF5
   678                           intcon	equ	0xFF2
   679                           postinc0	equ	0xFEE
   680                           wreg	equ	0xFE8
   681                           postdec1	equ	0xFE5
   682                           fsr1l	equ	0xFE1
   683                           indf2	equ	0xFDF
   684                           fsr2h	equ	0xFDA
   685                           fsr2l	equ	0xFD9
   686                           status	equ	0xFD8
   687                           
   688 ;; *************** function ___lwmod *****************
   689 ;; Defined at:
   690 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwmod.c"
   691 ;; Parameters:    Size  Location     Type
   692 ;;  dividend        2   21[COMRAM] unsigned int 
   693 ;;  divisor         2   23[COMRAM] unsigned int 
   694 ;; Auto vars:     Size  Location     Type
   695 ;;  counter         1   25[COMRAM] unsigned char 
   696 ;; Return value:  Size  Location     Type
   697 ;;                  2   21[COMRAM] unsigned int 
   698 ;; Registers used:
   699 ;;		wreg, status,2, status,0
   700 ;; Tracked objects:
   701 ;;		On entry : 0/0
   702 ;;		On exit  : 0/0
   703 ;;		Unchanged: 0/0
   704 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   705 ;;      Params:         4       0       0       0       0       0       0       0       0
   706 ;;      Locals:         1       0       0       0       0       0       0       0       0
   707 ;;      Temps:          0       0       0       0       0       0       0       0       0
   708 ;;      Totals:         5       0       0       0       0       0       0       0       0
   709 ;;Total ram usage:        5 bytes
   710 ;; Hardware stack levels used:    1
   711 ;; Hardware stack levels required when called:    1
   712 ;; This function calls:
   713 ;;		Nothing
   714 ;; This function is called by:
   715 ;;		_main
   716 ;; This function uses a non-reentrant model
   717 ;;
   718                           
   719                           	psect	text1
   720  000AFE                     __ptext1:
   721                           	opt stack 0
   722  000AFE                     ___lwmod:
   723                           	opt stack 29
   724                           
   725                           ;incstack = 0
   726  000AFE  5018               	movf	___lwmod@divisor,w,c
   727  000B00  1019               	iorwf	___lwmod@divisor+1,w,c
   728  000B02  B4D8               	btfsc	status,2,c
   729  000B04  D018               	goto	l471
   730  000B06  0E01               	movlw	1
   731  000B08  6E1A               	movwf	___lwmod@counter,c
   732  000B0A  D004               	goto	l808
   733  000B0C                     l806:
   734  000B0C  90D8               	bcf	status,0,c
   735  000B0E  3618               	rlcf	___lwmod@divisor,f,c
   736  000B10  3619               	rlcf	___lwmod@divisor+1,f,c
   737  000B12  2A1A               	incf	___lwmod@counter,f,c
   738  000B14                     l808:
   739  000B14  AE19               	btfss	___lwmod@divisor+1,7,c
   740  000B16  D7FA               	goto	l806
   741  000B18                     l810:
   742  000B18  5018               	movf	___lwmod@divisor,w,c
   743  000B1A  5C16               	subwf	___lwmod@dividend,w,c
   744  000B1C  5019               	movf	___lwmod@divisor+1,w,c
   745  000B1E  5817               	subwfb	___lwmod@dividend+1,w,c
   746  000B20  A0D8               	btfss	status,0,c
   747  000B22  D004               	goto	l814
   748  000B24  5018               	movf	___lwmod@divisor,w,c
   749  000B26  5E16               	subwf	___lwmod@dividend,f,c
   750  000B28  5019               	movf	___lwmod@divisor+1,w,c
   751  000B2A  5A17               	subwfb	___lwmod@dividend+1,f,c
   752  000B2C                     l814:
   753  000B2C  90D8               	bcf	status,0,c
   754  000B2E  3219               	rrcf	___lwmod@divisor+1,f,c
   755  000B30  3218               	rrcf	___lwmod@divisor,f,c
   756  000B32  2E1A               	decfsz	___lwmod@counter,f,c
   757  000B34  D7F1               	goto	l810
   758  000B36                     l471:
   759  000B36  C016  F016         	movff	___lwmod@dividend,?___lwmod
   760  000B3A  C017  F017         	movff	___lwmod@dividend+1,?___lwmod+1
   761  000B3E  0012               	return		;funcret
   762  000B40                     __end_of___lwmod:
   763                           	opt stack 0
   764                           tblptru	equ	0xFF8
   765                           tblptrh	equ	0xFF7
   766                           tblptrl	equ	0xFF6
   767                           tablat	equ	0xFF5
   768                           intcon	equ	0xFF2
   769                           postinc0	equ	0xFEE
   770                           wreg	equ	0xFE8
   771                           postdec1	equ	0xFE5
   772                           fsr1l	equ	0xFE1
   773                           indf2	equ	0xFDF
   774                           fsr2h	equ	0xFDA
   775                           fsr2l	equ	0xFD9
   776                           status	equ	0xFD8
   777                           
   778 ;; *************** function ___lwdiv *****************
   779 ;; Defined at:
   780 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwdiv.c"
   781 ;; Parameters:    Size  Location     Type
   782 ;;  dividend        2   14[COMRAM] unsigned int 
   783 ;;  divisor         2   16[COMRAM] unsigned int 
   784 ;; Auto vars:     Size  Location     Type
   785 ;;  quotient        2   18[COMRAM] unsigned int 
   786 ;;  counter         1   20[COMRAM] unsigned char 
   787 ;; Return value:  Size  Location     Type
   788 ;;                  2   14[COMRAM] unsigned int 
   789 ;; Registers used:
   790 ;;		wreg, status,2, status,0
   791 ;; Tracked objects:
   792 ;;		On entry : 0/0
   793 ;;		On exit  : 0/0
   794 ;;		Unchanged: 0/0
   795 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   796 ;;      Params:         4       0       0       0       0       0       0       0       0
   797 ;;      Locals:         3       0       0       0       0       0       0       0       0
   798 ;;      Temps:          0       0       0       0       0       0       0       0       0
   799 ;;      Totals:         7       0       0       0       0       0       0       0       0
   800 ;;Total ram usage:        7 bytes
   801 ;; Hardware stack levels used:    1
   802 ;; Hardware stack levels required when called:    1
   803 ;; This function calls:
   804 ;;		Nothing
   805 ;; This function is called by:
   806 ;;		_main
   807 ;; This function uses a non-reentrant model
   808 ;;
   809                           
   810                           	psect	text2
   811  000AAC                     __ptext2:
   812                           	opt stack 0
   813  000AAC                     ___lwdiv:
   814                           	opt stack 29
   815                           
   816                           ;incstack = 0
   817  000AAC  0E00               	movlw	0
   818  000AAE  6E14               	movwf	___lwdiv@quotient+1,c
   819  000AB0  0E00               	movlw	0
   820  000AB2  6E13               	movwf	___lwdiv@quotient,c
   821  000AB4  5011               	movf	___lwdiv@divisor,w,c
   822  000AB6  1012               	iorwf	___lwdiv@divisor+1,w,c
   823  000AB8  B4D8               	btfsc	status,2,c
   824  000ABA  D01C               	goto	l461
   825  000ABC  0E01               	movlw	1
   826  000ABE  6E15               	movwf	___lwdiv@counter,c
   827  000AC0  D004               	goto	l788
   828  000AC2                     l786:
   829  000AC2  90D8               	bcf	status,0,c
   830  000AC4  3611               	rlcf	___lwdiv@divisor,f,c
   831  000AC6  3612               	rlcf	___lwdiv@divisor+1,f,c
   832  000AC8  2A15               	incf	___lwdiv@counter,f,c
   833  000ACA                     l788:
   834  000ACA  AE12               	btfss	___lwdiv@divisor+1,7,c
   835  000ACC  D7FA               	goto	l786
   836  000ACE                     l790:
   837  000ACE  90D8               	bcf	status,0,c
   838  000AD0  3613               	rlcf	___lwdiv@quotient,f,c
   839  000AD2  3614               	rlcf	___lwdiv@quotient+1,f,c
   840  000AD4  5011               	movf	___lwdiv@divisor,w,c
   841  000AD6  5C0F               	subwf	___lwdiv@dividend,w,c
   842  000AD8  5012               	movf	___lwdiv@divisor+1,w,c
   843  000ADA  5810               	subwfb	___lwdiv@dividend+1,w,c
   844  000ADC  A0D8               	btfss	status,0,c
   845  000ADE  D005               	goto	l798
   846  000AE0  5011               	movf	___lwdiv@divisor,w,c
   847  000AE2  5E0F               	subwf	___lwdiv@dividend,f,c
   848  000AE4  5012               	movf	___lwdiv@divisor+1,w,c
   849  000AE6  5A10               	subwfb	___lwdiv@dividend+1,f,c
   850  000AE8  8013               	bsf	___lwdiv@quotient,0,c
   851  000AEA                     l798:
   852  000AEA  90D8               	bcf	status,0,c
   853  000AEC  3212               	rrcf	___lwdiv@divisor+1,f,c
   854  000AEE  3211               	rrcf	___lwdiv@divisor,f,c
   855  000AF0  2E15               	decfsz	___lwdiv@counter,f,c
   856  000AF2  D7ED               	goto	l790
   857  000AF4                     l461:
   858  000AF4  C013  F00F         	movff	___lwdiv@quotient,?___lwdiv
   859  000AF8  C014  F010         	movff	___lwdiv@quotient+1,?___lwdiv+1
   860  000AFC  0012               	return		;funcret
   861  000AFE                     __end_of___lwdiv:
   862                           	opt stack 0
   863                           tblptru	equ	0xFF8
   864                           tblptrh	equ	0xFF7
   865                           tblptrl	equ	0xFF6
   866                           tablat	equ	0xFF5
   867                           intcon	equ	0xFF2
   868                           postinc0	equ	0xFEE
   869                           wreg	equ	0xFE8
   870                           postdec1	equ	0xFE5
   871                           fsr1l	equ	0xFE1
   872                           indf2	equ	0xFDF
   873                           fsr2h	equ	0xFDA
   874                           fsr2l	equ	0xFD9
   875                           status	equ	0xFD8
   876                           
   877 ;; *************** function _HighISR *****************
   878 ;; Defined at:
   879 ;;		line 134 in file "4-7seg.c"
   880 ;; Parameters:    Size  Location     Type
   881 ;;		None
   882 ;; Auto vars:     Size  Location     Type
   883 ;;		None
   884 ;; Return value:  Size  Location     Type
   885 ;;		None               void
   886 ;; Registers used:
   887 ;;		wreg, status,2
   888 ;; Tracked objects:
   889 ;;		On entry : 0/0
   890 ;;		On exit  : 0/0
   891 ;;		Unchanged: 0/0
   892 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   893 ;;      Params:         0       0       0       0       0       0       0       0       0
   894 ;;      Locals:         0       0       0       0       0       0       0       0       0
   895 ;;      Temps:         14       0       0       0       0       0       0       0       0
   896 ;;      Totals:        14       0       0       0       0       0       0       0       0
   897 ;;Total ram usage:       14 bytes
   898 ;; Hardware stack levels used:    1
   899 ;; This function calls:
   900 ;;		Nothing
   901 ;; This function is called by:
   902 ;;		Interrupt level 2
   903 ;; This function uses a non-reentrant model
   904 ;;
   905                           
   906                           	psect	intcode
   907  000008                     __pintcode:
   908                           	opt stack 0
   909  000008                     _HighISR:
   910                           	opt stack 29
   911                           
   912                           ;incstack = 0
   913  000008  8234               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
   914  00000A  CFFA F001          	movff	pclath,??_HighISR
   915  00000E  CFFB F002          	movff	pclatu,??_HighISR+1
   916  000012  ED15  F005         	call	int_func,f	;refresh shadow registers
   917                           pclatu	equ	0xFFB
   918                           pclath	equ	0xFFA
   919                           tblptru	equ	0xFF8
   920                           tblptrh	equ	0xFF7
   921                           tblptrl	equ	0xFF6
   922                           tablat	equ	0xFF5
   923                           intcon	equ	0xFF2
   924                           postinc0	equ	0xFEE
   925                           wreg	equ	0xFE8
   926                           postdec1	equ	0xFE5
   927                           fsr1l	equ	0xFE1
   928                           indf2	equ	0xFDF
   929                           fsr2h	equ	0xFDA
   930                           fsr2l	equ	0xFD9
   931                           status	equ	0xFD8
   932                           
   933                           	psect	intcode_body
   934  000A2A                     __pintcode_body:
   935                           	opt stack 29
   936  000A2A                     int_func:
   937                           	opt stack 29
   938  000A2A  0006               	pop		; remove dummy address from shadow register refresh
   939  000A2C  CFE9 F003          	movff	fsr0l,??_HighISR+2
   940  000A30  CFEA F004          	movff	fsr0h,??_HighISR+3
   941  000A34  CFE1 F005          	movff	fsr1l,??_HighISR+4
   942  000A38  CFE2 F006          	movff	fsr1h,??_HighISR+5
   943  000A3C  CFD9 F007          	movff	fsr2l,??_HighISR+6
   944  000A40  CFDA F008          	movff	fsr2h,??_HighISR+7
   945  000A44  CFF3 F009          	movff	prodl,??_HighISR+8
   946  000A48  CFF4 F00A          	movff	prodh,??_HighISR+9
   947  000A4C  CFF6 F00B          	movff	tblptrl,??_HighISR+10
   948  000A50  CFF7 F00C          	movff	tblptrh,??_HighISR+11
   949  000A54  CFF8 F00D          	movff	tblptru,??_HighISR+12
   950  000A58  CFF5 F00E          	movff	tablat,??_HighISR+13
   951                           
   952                           ;4-7seg.c: 136: if (TMR0IE && TMR0IF)
   953  000A5C  BAF2               	btfsc	intcon,5,c	;volatile
   954  000A5E  A4F2               	btfss	intcon,2,c	;volatile
   955  000A60  D007               	goto	i2l58
   956                           
   957                           ;4-7seg.c: 137: {
   958                           ;4-7seg.c: 138: ((void)(TMR0H=((65536-521)>>8),TMR0L=((65536-521)&0xFF)));
   959  000A62  0EFD               	movlw	253
   960  000A64  6ED7               	movwf	4055,c	;volatile
   961  000A66  0EF7               	movlw	247
   962  000A68  6ED6               	movwf	4054,c	;volatile
   963                           
   964                           ;4-7seg.c: 139: TMR0IF=0;
   965  000A6A  94F2               	bcf	intcon,2,c	;volatile
   966                           
   967                           ;4-7seg.c: 140: T0Flag = 1;
   968  000A6C  0E01               	movlw	1
   969  000A6E  6E2C               	movwf	_T0Flag,c
   970  000A70                     i2l58:
   971  000A70  C00E  FFF5         	movff	??_HighISR+13,tablat
   972  000A74  C00D  FFF8         	movff	??_HighISR+12,tblptru
   973  000A78  C00C  FFF7         	movff	??_HighISR+11,tblptrh
   974  000A7C  C00B  FFF6         	movff	??_HighISR+10,tblptrl
   975  000A80  C00A  FFF4         	movff	??_HighISR+9,prodh
   976  000A84  C009  FFF3         	movff	??_HighISR+8,prodl
   977  000A88  C008  FFDA         	movff	??_HighISR+7,fsr2h
   978  000A8C  C007  FFD9         	movff	??_HighISR+6,fsr2l
   979  000A90  C006  FFE2         	movff	??_HighISR+5,fsr1h
   980  000A94  C005  FFE1         	movff	??_HighISR+4,fsr1l
   981  000A98  C004  FFEA         	movff	??_HighISR+3,fsr0h
   982  000A9C  C003  FFE9         	movff	??_HighISR+2,fsr0l
   983  000AA0  C002  FFFB         	movff	??_HighISR+1,pclatu
   984  000AA4  C001  FFFA         	movff	??_HighISR,pclath
   985  000AA8  9234               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
   986  000AAA  0011               	retfie		f
   987  000AAC                     __end_of_HighISR:
   988                           	opt stack 0
   989                           pclatu	equ	0xFFB
   990                           pclath	equ	0xFFA
   991                           tblptru	equ	0xFF8
   992                           tblptrh	equ	0xFF7
   993                           tblptrl	equ	0xFF6
   994                           tablat	equ	0xFF5
   995                           prodh	equ	0xFF4
   996                           prodl	equ	0xFF3
   997                           intcon	equ	0xFF2
   998                           postinc0	equ	0xFEE
   999                           fsr0h	equ	0xFEA
  1000                           fsr0l	equ	0xFE9
  1001                           wreg	equ	0xFE8
  1002                           postdec1	equ	0xFE5
  1003                           fsr1h	equ	0xFE2
  1004                           fsr1l	equ	0xFE1
  1005                           indf2	equ	0xFDF
  1006                           fsr2h	equ	0xFDA
  1007                           fsr2l	equ	0xFD9
  1008                           status	equ	0xFD8
  1009                           pclatu	equ	0xFFB
  1010                           pclath	equ	0xFFA
  1011                           tblptru	equ	0xFF8
  1012                           tblptrh	equ	0xFF7
  1013                           tblptrl	equ	0xFF6
  1014                           tablat	equ	0xFF5
  1015                           prodh	equ	0xFF4
  1016                           prodl	equ	0xFF3
  1017                           intcon	equ	0xFF2
  1018                           postinc0	equ	0xFEE
  1019                           fsr0h	equ	0xFEA
  1020                           fsr0l	equ	0xFE9
  1021                           wreg	equ	0xFE8
  1022                           postdec1	equ	0xFE5
  1023                           fsr1h	equ	0xFE2
  1024                           fsr1l	equ	0xFE1
  1025                           indf2	equ	0xFDF
  1026                           fsr2h	equ	0xFDA
  1027                           fsr2l	equ	0xFD9
  1028                           status	equ	0xFD8
  1029                           
  1030                           	psect	rparam
  1031  0000                     pclatu	equ	0xFFB
  1032                           pclath	equ	0xFFA
  1033                           tblptru	equ	0xFF8
  1034                           tblptrh	equ	0xFF7
  1035                           tblptrl	equ	0xFF6
  1036                           tablat	equ	0xFF5
  1037                           prodh	equ	0xFF4
  1038                           prodl	equ	0xFF3
  1039                           intcon	equ	0xFF2
  1040                           postinc0	equ	0xFEE
  1041                           fsr0h	equ	0xFEA
  1042                           fsr0l	equ	0xFE9
  1043                           wreg	equ	0xFE8
  1044                           postdec1	equ	0xFE5
  1045                           fsr1h	equ	0xFE2
  1046                           fsr1l	equ	0xFE1
  1047                           indf2	equ	0xFDF
  1048                           fsr2h	equ	0xFDA
  1049                           fsr2l	equ	0xFD9
  1050                           status	equ	0xFD8
  1051                           
  1052                           	psect	temp
  1053  000034                     btemp:
  1054                           	opt stack 0
  1055  000034                     	ds	1
  1056  0000                     int$flags	set	btemp
  1057                           pclatu	equ	0xFFB
  1058                           pclath	equ	0xFFA
  1059                           tblptru	equ	0xFF8
  1060                           tblptrh	equ	0xFF7
  1061                           tblptrl	equ	0xFF6
  1062                           tablat	equ	0xFF5
  1063                           prodh	equ	0xFF4
  1064                           prodl	equ	0xFF3
  1065                           intcon	equ	0xFF2
  1066                           postinc0	equ	0xFEE
  1067                           fsr0h	equ	0xFEA
  1068                           fsr0l	equ	0xFE9
  1069                           wreg	equ	0xFE8
  1070                           postdec1	equ	0xFE5
  1071                           fsr1h	equ	0xFE2
  1072                           fsr1l	equ	0xFE1
  1073                           indf2	equ	0xFDF
  1074                           fsr2h	equ	0xFDA
  1075                           fsr2l	equ	0xFD9
  1076                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    20
    Data        4
    BSS         9
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     38      51
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->___lwmod
    ___lwmod->___lwdiv

Critical Paths under _HighISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                12    12      0    1197
                                             26 COMRAM    12    12      0
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (1) ___lwmod                                              5     1      4     589
                                             21 COMRAM     5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (1) ___lwdiv                                              7     3      4     334
                                             14 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _HighISR                                             14    14      0       0
                                              0 COMRAM    14    14      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___lwdiv
   ___lwmod
     ___lwdiv (ARG)

 _HighISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     26      33       1       54.3%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      33      20        0.0%
DATA                 0      0      33       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Fri Oct 16 09:35:34 2015

            __CFG_BORV$1 000000                      l461 0AF4                      l471 0B36  
                    l810 0B18                      l814 0B2C                      l806 0B0C  
                    l808 0B14                      l790 0ACE                      l870 097A  
                    l848 0870                      l786 0AC2                      l858 092E  
                    l788 0ACA                      l884 09CC                      l798 0AEA  
                    l894 0A20                      _LED 0801                      u230 0972  
                    u250 09C2                      u260 09DC                      u270 0A00  
                    u280 0A20                      wreg 000FE8             __CFG_FOSC$HS 000000  
           __CFG_LVP$OFF 000000             __CFG_WDT$OFF 000000                     _LATD 000F8C  
                   i2l58 0A70                     _disp 0027                     _main 0816  
                   fsr0h 000FEA                     fsr1h 000FE2                     fsr0l 000FE9  
                   fsr2h 000FDA                     fsr1l 000FE1                     indf2 000FDF  
                   fsr2l 000FD9                     btemp 0034                     pclat 000FFA  
                   prodh 000FF4                     prodl 000FF3                     start 0016  
        __end_of_HighISR 0AAC            __CFG_MCLRE$ON 000000             ___param_bank 000010  
                  ?_main 0001          __end_of___lwdiv 0AFE          __end_of___lwmod 0B40  
                  _TMR0H 000FD7                    _TMR0L 000FD6                    _PORTB 000F81  
                  _PORTD 000F83                    _TRISD 000F95                    main@i 0021  
                  main@t 001D                    tablat 000FF5                    status 000FD8  
        __initialization 0B40             __end_of_main 0A2A                   ??_main 001B  
          __activetblptr 000001                   _T0Flag 002C                ??_HighISR 0001  
                 _TMR0IE 007F95                   _TMR0IF 007F92               _Timer1000m 002D  
         __CFG_XINST$OFF 000000                ??___lwdiv 0013                ??___lwmod 001A  
                 clear_0 0B46                   _pwmbuf 002F                   main@tt 001F  
           __pdataCOMRAM 0030             __mediumconst 0000                   tblptrh 000FF7  
                 tblptrl 000FF6                   tblptru 000FF8               __accesstop 0060  
__end_of__initialization 0B6C          __CFG_PBADEN$OFF 000000            ___rparam_used 000001  
         __pcstackCOMRAM 0001                  _HighISR 0008                  __Hparam 0000  
                __Lparam 0000                  ___lwdiv 0AAC                  ___lwmod 0AFE  
           __psmallconst 0800                  __pcinit 0B40                  __ramtop 0800  
                __ptext0 0816                  __ptext1 0AFE                  __ptext2 0AAC  
              _T0CONbits 000FD5                  main@min 0025                  main@sec 0023  
         __pintcode_body 0A2A     end_of_initialization 0B6C                  int_func 0A2A  
                postdec1 000FE5                  postinc0 000FEE                _TRISBbits 000F93  
          __pidataCOMRAM 0B7E      start_initialization 0B40              __end_of_LED 0815  
              _Timer500m 002E       __CFG_BOR$ON_ACTIVE 000000              __pbssCOMRAM 0027  
               ?_HighISR 0001         ___lwdiv@dividend 000F                __pintcode 0008  
               ?___lwdiv 000F                 ?___lwmod 0016              __smallconst 0800  
       ___lwdiv@quotient 0013                 _LATBbits 000F8A                copy_data0 0B60  
               _ScanLine 0030         __size_of_HighISR 0AA4                 __Hrparam 0000  
               __Lrparam 0000             __Lsmallconst 0800                 _OutPortB 002B  
       __size_of___lwdiv 0052         __size_of___lwmod 0042          ___lwdiv@divisor 0011  
        ___lwdiv@counter 0015            __size_of_main 0214                 int$flags 0034  
             _INTCONbits 000FF2                 intlevel2 0000         ___lwmod@dividend 0016  
        ___lwmod@divisor 0018          ___lwmod@counter 001A  
