

Microchip Technology PIC18 LITE Macro Assembler V1.35 build -356382666 
                                                                                               Tue Sep 08 16:25:25 2015

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    27                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    28                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    29                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    30                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    31  0000                     
    32                           	psect	idataCOMRAM
    33  000F0A                     __pidataCOMRAM:
    34                           	opt stack 0
    35                           
    36                           ;initializer for _debounceDelay
    37  000F0A  0032               	dw	50
    38  000F0C  0000               	dw	0
    39                           
    40                           ;initializer for _ledState
    41  000F0E  0001               	dw	1
    42                           
    43                           ;initializer for _Disable_Zero
    44  000F10  01                 	db	1
    45                           
    46                           	psect	smallconst
    47  000800                     __psmallconst:
    48                           	opt stack 0
    49  000800  00                 	db	0
    50  000801                     _MyName:
    51                           	opt stack 0
    52  000801  4D                 	db	77
    53  000802  79                 	db	121
    54  000803  20                 	db	32
    55  000804  43                 	db	67
    56  000805  6C                 	db	108
    57  000806  6F                 	db	111
    58  000807  63                 	db	99
    59  000808  6B                 	db	107
    60  000809  00                 	db	0
    61  00080A                     __end_of_MyName:
    62                           	opt stack 0
    63  00080A                     _String1:
    64                           	opt stack 0
    65  00080A  3A                 	db	58
    66  00080B  00                 	db	0
    67  00080C                     __end_of_String1:
    68                           	opt stack 0
    69  0000                     _ADCON1bits	set	4033
    70  0000                     _INTCONbits	set	4082
    71  0000                     _LATCbits	set	3979
    72  0000                     _LATD	set	3980
    73  0000                     _T0CONbits	set	4053
    74  0000                     _TMR0H	set	4055
    75  0000                     _TMR0L	set	4054
    76  0000                     _TRISBbits	set	3987
    77  0000                     _TRISCbits	set	3988
    78  0000                     _TRISD	set	3989
    79  0000                     _TRISDbits	set	3989
    80  0000                     _RB3	set	31755
    81  0000                     _RB4	set	31756
    82  0000                     _RB5	set	31757
    83  0000                     _RC0	set	31760
    84  0000                     _RD4	set	31772
    85  0000                     _RD5	set	31773
    86  0000                     _RD6	set	31774
    87  0000                     _RD7	set	31775
    88  0000                     _TMR0IE	set	32661
    89  0000                     _TMR0IF	set	32658
    90                           
    91                           ; #config settings
    92  00080C  00                 	db	0	; dummy byte at the end
    93  0000                     
    94                           	psect	cinit
    95  000D58                     __pcinit:
    96                           	opt stack 0
    97  000D58                     start_initialization:
    98                           	opt stack 0
    99  000D58                     __initialization:
   100                           	opt stack 0
   101                           
   102                           ; Clear objects allocated to BANK0 (32 bytes)
   103  000D58  EE00  F060         	lfsr	0,__pbssBANK0
   104  000D5C  0E20               	movlw	32
   105  000D5E                     clear_0:
   106  000D5E  6AEE               	clrf	postinc0,c
   107  000D60  06E8               	decf	wreg,f,c
   108  000D62  E1FD               	bnz	clear_0
   109                           
   110                           ; Clear objects allocated to COMRAM (17 bytes)
   111  000D64  EE00  F028         	lfsr	0,__pbssCOMRAM
   112  000D68  0E11               	movlw	17
   113  000D6A                     clear_1:
   114  000D6A  6AEE               	clrf	postinc0,c
   115  000D6C  06E8               	decf	wreg,f,c
   116  000D6E  E1FD               	bnz	clear_1
   117                           
   118                           ; Initialize objects allocated to COMRAM (7 bytes)
   119                           ; load TBLPTR registers with __pidataCOMRAM
   120  000D70  0E0A               	movlw	low __pidataCOMRAM
   121  000D72  6EF6               	movwf	tblptrl,c
   122  000D74  0E0F               	movlw	high __pidataCOMRAM
   123  000D76  6EF7               	movwf	tblptrh,c
   124  000D78  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   125  000D7A  6EF8               	movwf	tblptru,c
   126  000D7C  EE00  F039         	lfsr	0,__pdataCOMRAM
   127  000D80  EE10 F007          	lfsr	1,7
   128  000D84                     copy_data0:
   129  000D84  0009               	tblrd		*+
   130  000D86  CFF5 FFEE          	movff	tablat,postinc0
   131  000D8A  50E5               	movf	postdec1,w,c
   132  000D8C  50E1               	movf	fsr1l,w,c
   133  000D8E  E1FA               	bnz	copy_data0
   134  000D90                     end_of_initialization:
   135                           	opt stack 0
   136  000D90                     __end_of__initialization:
   137                           	opt stack 0
   138  000D90  9040               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   139  000D92  9240               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   140  000D94  0E00               	movlw	low (__Lmediumconst shr (0+16))
   141  000D96  6EF8               	movwf	tblptru,c
   142  000D98  0100               	movlb	0
   143  000D9A  EF07  F004         	goto	_main	;jump to C main() function
   144                           tblptru	equ	0xFF8
   145                           tblptrh	equ	0xFF7
   146                           tblptrl	equ	0xFF6
   147                           tablat	equ	0xFF5
   148                           postinc0	equ	0xFEE
   149                           wreg	equ	0xFE8
   150                           postdec1	equ	0xFE5
   151                           fsr1l	equ	0xFE1
   152                           
   153                           	psect	bssCOMRAM
   154  000028                     __pbssCOMRAM:
   155                           	opt stack 0
   156  000028                     _lastDebounceTime:
   157                           	opt stack 0
   158  000028                     	ds	4
   159  00002C                     _Duty:
   160                           	opt stack 0
   161  00002C                     	ds	2
   162  00002E                     _buttonState:
   163                           	opt stack 0
   164  00002E                     	ds	2
   165  000030                     _h:
   166                           	opt stack 0
   167  000030                     	ds	2
   168  000032                     _lastButtonState:
   169                           	opt stack 0
   170  000032                     	ds	2
   171  000034                     _m:
   172                           	opt stack 0
   173  000034                     	ds	2
   174  000036                     _s:
   175                           	opt stack 0
   176  000036                     	ds	2
   177  000038                     _Timer0Flag:
   178                           	opt stack 0
   179  000038                     	ds	1
   180                           tblptru	equ	0xFF8
   181                           tblptrh	equ	0xFF7
   182                           tblptrl	equ	0xFF6
   183                           tablat	equ	0xFF5
   184                           postinc0	equ	0xFEE
   185                           wreg	equ	0xFE8
   186                           postdec1	equ	0xFE5
   187                           fsr1l	equ	0xFE1
   188                           
   189                           	psect	dataCOMRAM
   190  000039                     __pdataCOMRAM:
   191                           	opt stack 0
   192  000039                     _debounceDelay:
   193                           	opt stack 0
   194  000039                     	ds	4
   195  00003D                     _ledState:
   196                           	opt stack 0
   197  00003D                     	ds	2
   198  00003F                     _Disable_Zero:
   199                           	opt stack 0
   200  00003F                     	ds	1
   201                           tblptru	equ	0xFF8
   202                           tblptrh	equ	0xFF7
   203                           tblptrl	equ	0xFF6
   204                           tablat	equ	0xFF5
   205                           postinc0	equ	0xFEE
   206                           wreg	equ	0xFE8
   207                           postdec1	equ	0xFE5
   208                           fsr1l	equ	0xFE1
   209                           
   210                           	psect	bssBANK0
   211  000060                     __pbssBANK0:
   212                           	opt stack 0
   213  000060                     _StringBuffer:
   214                           	opt stack 0
   215  000060                     	ds	32
   216                           tblptru	equ	0xFF8
   217                           tblptrh	equ	0xFF7
   218                           tblptrl	equ	0xFF6
   219                           tablat	equ	0xFF5
   220                           postinc0	equ	0xFEE
   221                           wreg	equ	0xFE8
   222                           postdec1	equ	0xFE5
   223                           fsr1l	equ	0xFE1
   224                           
   225                           	psect	cstackCOMRAM
   226  000001                     __pcstackCOMRAM:
   227                           	opt stack 0
   228  000001                     ??_HighISR:
   229  000001                     
   230                           ; 1 bytes @ 0x0
   231  000001                     	ds	14
   232  00000F                     ?___lwmod:
   233                           	opt stack 0
   234  00000F                     LCM_BCD_Regulate@BCD:
   235                           	opt stack 0
   236  00000F                     LCM_IsBusy@i:
   237                           	opt stack 0
   238  00000F                     ___lwmod@dividend:
   239                           	opt stack 0
   240  00000F                     LCM_Delay@Count:
   241                           	opt stack 0
   242                           
   243                           ; 4 bytes @ 0xE
   244  00000F                     	ds	2
   245  000011                     ___lwmod@divisor:
   246                           	opt stack 0
   247                           
   248                           ; 2 bytes @ 0x10
   249  000011                     	ds	2
   250  000013                     ___lwmod@counter:
   251                           	opt stack 0
   252  000013                     LCM_Delay@i:
   253                           	opt stack 0
   254                           
   255                           ; 2 bytes @ 0x12
   256  000013                     	ds	1
   257  000014                     ?___lwdiv:
   258                           	opt stack 0
   259  000014                     ___lwdiv@dividend:
   260                           	opt stack 0
   261                           
   262                           ; 2 bytes @ 0x13
   263  000014                     	ds	1
   264  000015                     IntLCM_Communication@NibbleByte:
   265                           	opt stack 0
   266                           
   267                           ; 1 bytes @ 0x14
   268  000015                     	ds	1
   269  000016                     IntLCM_Communication@Temporary:
   270                           	opt stack 0
   271  000016                     ___lwdiv@divisor:
   272                           	opt stack 0
   273                           
   274                           ; 2 bytes @ 0x15
   275  000016                     	ds	1
   276  000017                     IntLCM_WriteData@Data:
   277                           	opt stack 0
   278  000017                     IntLCM_WriteInstruction@Instruction:
   279                           	opt stack 0
   280                           
   281                           ; 1 bytes @ 0x16
   282  000017                     	ds	1
   283  000018                     LCM_SetCursor@Y:
   284                           	opt stack 0
   285  000018                     LCM_PutROMString@String:
   286                           	opt stack 0
   287  000018                     ___lwdiv@quotient:
   288                           	opt stack 0
   289                           
   290                           ; 2 bytes @ 0x17
   291  000018                     	ds	1
   292  000019                     LCM_SetCursor@X:
   293                           	opt stack 0
   294                           
   295                           ; 1 bytes @ 0x18
   296  000019                     	ds	1
   297  00001A                     ___lwdiv@counter:
   298                           	opt stack 0
   299                           
   300                           ; 1 bytes @ 0x19
   301  00001A                     	ds	1
   302  00001B                     LCM_PutNumber@Number:
   303                           	opt stack 0
   304                           
   305                           ; 2 bytes @ 0x1A
   306  00001B                     	ds	2
   307  00001D                     LCM_PutNumber@Digit:
   308                           	opt stack 0
   309                           
   310                           ; 1 bytes @ 0x1C
   311  00001D                     	ds	1
   312  00001E                     LCM_PutNumber@Temporary:
   313                           	opt stack 0
   314                           
   315                           ; 1 bytes @ 0x1D
   316  00001E                     	ds	1
   317  00001F                     ??_main:
   318                           
   319                           ; 0 bytes @ 0x1E
   320  00001F                     	ds	9
   321                           tblptru	equ	0xFF8
   322                           tblptrh	equ	0xFF7
   323                           tblptrl	equ	0xFF6
   324                           tablat	equ	0xFF5
   325                           postinc0	equ	0xFEE
   326                           wreg	equ	0xFE8
   327                           postdec1	equ	0xFE5
   328                           fsr1l	equ	0xFE1
   329                           
   330 ;;
   331 ;;Main: autosize = 0, tempsize = 9, incstack = 0, save=0
   332 ;;
   333 ;; *************** function _main *****************
   334 ;; Defined at:
   335 ;;		line 41 in file "Lab9 PWM Output By VR Value.c"
   336 ;; Parameters:    Size  Location     Type
   337 ;;		None
   338 ;; Auto vars:     Size  Location     Type
   339 ;;		None
   340 ;; Return value:  Size  Location     Type
   341 ;;		None               void
   342 ;; Registers used:
   343 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   344 ;; Tracked objects:
   345 ;;		On entry : 0/0
   346 ;;		On exit  : 0/0
   347 ;;		Unchanged: 0/0
   348 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   349 ;;      Params:         0       0       0       0       0       0       0       0       0
   350 ;;      Locals:         0       0       0       0       0       0       0       0       0
   351 ;;      Temps:          9       0       0       0       0       0       0       0       0
   352 ;;      Totals:         9       0       0       0       0       0       0       0       0
   353 ;;Total ram usage:        9 bytes
   354 ;; Hardware stack levels required when called:    5
   355 ;; This function calls:
   356 ;;		_LCM_Init
   357 ;;		_LCM_PutNumber
   358 ;;		_LCM_PutROMString
   359 ;;		_LCM_SetCursor
   360 ;; This function is called by:
   361 ;;		Startup code after reset
   362 ;; This function uses a non-reentrant model
   363 ;;
   364                           
   365                           	psect	text0
   366  00080E                     __ptext0:
   367                           	opt stack 0
   368  00080E                     _main:
   369                           	opt stack 26
   370                           
   371                           ;Lab9 PWM Output By VR Value.c: 43: LATCbits.LATC2 = 0;
   372                           
   373                           ;incstack = 0
   374  00080E  948B               	bcf	3979,2,c	;volatile
   375                           
   376                           ;Lab9 PWM Output By VR Value.c: 44: TRISCbits.TRISC2 = 0;
   377  000810  9494               	bcf	3988,2,c	;volatile
   378                           
   379                           ;Lab9 PWM Output By VR Value.c: 45: LATD = 0;
   380  000812  0E00               	movlw	0
   381  000814  6E8C               	movwf	3980,c	;volatile
   382                           
   383                           ;Lab9 PWM Output By VR Value.c: 46: TRISD = 0;
   384  000816  0E00               	movlw	0
   385  000818  6E95               	movwf	3989,c	;volatile
   386                           
   387                           ;Lab9 PWM Output By VR Value.c: 48: T0CONbits.T08BIT = 0;
   388  00081A  9CD5               	bcf	4053,6,c	;volatile
   389                           
   390                           ;Lab9 PWM Output By VR Value.c: 49: T0CONbits.T0CS = 0;
   391  00081C  9AD5               	bcf	4053,5,c	;volatile
   392                           
   393                           ;Lab9 PWM Output By VR Value.c: 50: T0CONbits.T0SE = 0;
   394  00081E  98D5               	bcf	4053,4,c	;volatile
   395                           
   396                           ;Lab9 PWM Output By VR Value.c: 51: T0CONbits.PSA = 0;
   397  000820  96D5               	bcf	4053,3,c	;volatile
   398                           
   399                           ;Lab9 PWM Output By VR Value.c: 52: T0CONbits.T0PS = 0x07;
   400  000822  80D5               	bsf	4053,0,c	;volatile
   401  000824  82D5               	bsf	4053,1,c	;volatile
   402  000826  84D5               	bsf	4053,2,c	;volatile
   403                           
   404                           ;Lab9 PWM Output By VR Value.c: 53: TMR0H = ( ( ( 65536 - ( 4000000 / 4 / 256 / 100 )) >
      +                          > 8 ) & 0xff );
   405  000828  68D7               	setf	4055,c	;volatile
   406                           
   407                           ;Lab9 PWM Output By VR Value.c: 54: TMR0L = ( ( 65536 - ( 4000000 / 4 / 256 / 100 )) & 0
      +                          xff );
   408  00082A  0ED9               	movlw	217
   409  00082C  6ED6               	movwf	4054,c	;volatile
   410                           
   411                           ;Lab9 PWM Output By VR Value.c: 55: INTCONbits.TMR0IF = 0;
   412  00082E  94F2               	bcf	intcon,2,c	;volatile
   413                           
   414                           ;Lab9 PWM Output By VR Value.c: 56: INTCONbits.TMR0IE = 1;
   415  000830  8AF2               	bsf	intcon,5,c	;volatile
   416                           
   417                           ;Lab9 PWM Output By VR Value.c: 57: INTCONbits.PEIE = 1;
   418  000832  8CF2               	bsf	intcon,6,c	;volatile
   419                           
   420                           ;Lab9 PWM Output By VR Value.c: 58: INTCONbits.GIE = 1;
   421  000834  8EF2               	bsf	intcon,7,c	;volatile
   422                           
   423                           ;Lab9 PWM Output By VR Value.c: 60: T0CONbits.TMR0ON = 1;
   424  000836  8ED5               	bsf	4053,7,c	;volatile
   425                           
   426                           ;Lab9 PWM Output By VR Value.c: 64: LCM_Init();
   427  000838  EC0C  F005         	call	_LCM_Init	;wreg free
   428                           
   429                           ;Lab9 PWM Output By VR Value.c: 66: LCM_SetCursor(0, 0);
   430  00083C  0E00               	movlw	0
   431  00083E  6E18               	movwf	LCM_SetCursor@Y,c
   432  000840  0E00               	movlw	0
   433  000842  EC7C  F007         	call	_LCM_SetCursor
   434                           
   435                           ;Lab9 PWM Output By VR Value.c: 67: LCM_PutROMString(MyName);
   436  000846  0E01               	movlw	low _MyName
   437  000848  6E18               	movwf	LCM_PutROMString@String,c
   438  00084A  0E08               	movlw	high _MyName
   439  00084C  6E19               	movwf	LCM_PutROMString@String+1,c
   440  00084E  EC10  F007         	call	_LCM_PutROMString	;wreg free
   441                           
   442                           ;Lab9 PWM Output By VR Value.c: 68: LCM_SetCursor(3, 1);
   443  000852  0E01               	movlw	1
   444  000854  6E18               	movwf	LCM_SetCursor@Y,c
   445  000856  0E03               	movlw	3
   446  000858  EC7C  F007         	call	_LCM_SetCursor
   447                           
   448                           ;Lab9 PWM Output By VR Value.c: 69: LCM_PutROMString(String1);
   449  00085C  0E0A               	movlw	low _String1
   450  00085E  6E18               	movwf	LCM_PutROMString@String,c
   451  000860  0E08               	movlw	high _String1
   452  000862  6E19               	movwf	LCM_PutROMString@String+1,c
   453  000864  EC10  F007         	call	_LCM_PutROMString	;wreg free
   454                           
   455                           ;Lab9 PWM Output By VR Value.c: 70: LCM_SetCursor(6, 1);
   456  000868  0E01               	movlw	1
   457  00086A  6E18               	movwf	LCM_SetCursor@Y,c
   458  00086C  0E06               	movlw	6
   459  00086E  EC7C  F007         	call	_LCM_SetCursor
   460                           
   461                           ;Lab9 PWM Output By VR Value.c: 71: LCM_PutROMString(String1);
   462  000872  0E0A               	movlw	low _String1
   463  000874  6E18               	movwf	LCM_PutROMString@String,c
   464  000876  0E08               	movlw	high _String1
   465  000878  6E19               	movwf	LCM_PutROMString@String+1,c
   466  00087A  EC10  F007         	call	_LCM_PutROMString	;wreg free
   467  00087E                     l1376:
   468                           
   469                           ;Lab9 PWM Output By VR Value.c: 74: {
   470                           ;Lab9 PWM Output By VR Value.c: 75: if (RC0 != lastButtonState) {
   471  00087E  A082               	btfss	3970,0,c	;volatile
   472  000880  D002               	goto	u590
   473  000882  0E01               	movlw	1
   474  000884  D001               	goto	u600
   475  000886                     u590:
   476  000886  0E00               	movlw	0
   477  000888                     u600:
   478  000888  6E1F               	movwf	??_main& (0+255),c
   479  00088A  6A20               	clrf	(??_main+1)& (0+255),c
   480  00088C  5032               	movf	_lastButtonState,w,c
   481  00088E  181F               	xorwf	??_main,w,c
   482  000890  E104               	bnz	u610
   483  000892  5033               	movf	_lastButtonState+1,w,c
   484  000894  1820               	xorwf	??_main+1,w,c
   485  000896  B4D8               	btfsc	status,2,c
   486  000898  D006               	goto	l1380
   487  00089A                     u610:
   488                           
   489                           ;Lab9 PWM Output By VR Value.c: 76: lastDebounceTime = Duty;
   490  00089A  C02C  F028         	movff	_Duty,_lastDebounceTime
   491  00089E  C02D  F029         	movff	_Duty+1,_lastDebounceTime+1
   492  0008A2  6A2A               	clrf	_lastDebounceTime+2,c
   493  0008A4  6A2B               	clrf	_lastDebounceTime+3,c
   494  0008A6                     l1380:
   495                           
   496                           ;Lab9 PWM Output By VR Value.c: 77: }
   497                           ;Lab9 PWM Output By VR Value.c: 78: if ((Duty - lastDebounceTime) > debounceDelay)
   498  0008A6  C028  F01F         	movff	_lastDebounceTime,??_main
   499  0008AA  C029  F020         	movff	_lastDebounceTime+1,??_main+1
   500  0008AE  C02A  F021         	movff	_lastDebounceTime+2,??_main+2
   501  0008B2  C02B  F022         	movff	_lastDebounceTime+3,??_main+3
   502  0008B6  1E1F               	comf	??_main,f,c
   503  0008B8  1E20               	comf	??_main+1,f,c
   504  0008BA  1E21               	comf	??_main+2,f,c
   505  0008BC  1E22               	comf	??_main+3,f,c
   506  0008BE  2A1F               	incf	??_main,f,c
   507  0008C0  0E00               	movlw	0
   508  0008C2  2220               	addwfc	??_main+1,f,c
   509  0008C4  2221               	addwfc	??_main+2,f,c
   510  0008C6  2222               	addwfc	??_main+3,f,c
   511  0008C8  502C               	movf	_Duty,w,c
   512  0008CA  241F               	addwf	??_main,w,c
   513  0008CC  6E23               	movwf	(??_main+4)& (0+255),c
   514  0008CE  502D               	movf	_Duty+1,w,c
   515  0008D0  2020               	addwfc	??_main+1,w,c
   516  0008D2  6E24               	movwf	(??_main+5)& (0+255),c
   517  0008D4  0E00               	movlw	0
   518  0008D6  2021               	addwfc	??_main+2,w,c
   519  0008D8  6E25               	movwf	(??_main+6)& (0+255),c
   520  0008DA  0E00               	movlw	0
   521  0008DC  2022               	addwfc	??_main+3,w,c
   522  0008DE  6E26               	movwf	(??_main+7)& (0+255),c
   523  0008E0  5023               	movf	??_main+4,w,c
   524  0008E2  5C39               	subwf	_debounceDelay,w,c
   525  0008E4  5024               	movf	??_main+5,w,c
   526  0008E6  583A               	subwfb	_debounceDelay+1,w,c
   527  0008E8  5025               	movf	??_main+6,w,c
   528  0008EA  583B               	subwfb	_debounceDelay+2,w,c
   529  0008EC  503C               	movf	_debounceDelay+3,w,c
   530  0008EE  0A80               	xorlw	128
   531  0008F0  6E27               	movwf	(??_main+8)& (0+255),c
   532  0008F2  5026               	movf	??_main+7,w,c
   533  0008F4  0A80               	xorlw	128
   534  0008F6  5827               	subwfb	(??_main+8)& (0+255),w,c
   535  0008F8  B0D8               	btfsc	status,0,c
   536  0008FA  D021               	goto	l61
   537                           
   538                           ;Lab9 PWM Output By VR Value.c: 79: {
   539                           ;Lab9 PWM Output By VR Value.c: 80: if (RC0 != buttonState)
   540  0008FC  A082               	btfss	3970,0,c	;volatile
   541  0008FE  D002               	goto	u630
   542  000900  0E01               	movlw	1
   543  000902  D001               	goto	u640
   544  000904                     u630:
   545  000904  0E00               	movlw	0
   546  000906                     u640:
   547  000906  6E1F               	movwf	??_main& (0+255),c
   548  000908  6A20               	clrf	(??_main+1)& (0+255),c
   549  00090A  502E               	movf	_buttonState,w,c
   550  00090C  181F               	xorwf	??_main,w,c
   551  00090E  E104               	bnz	u650
   552  000910  502F               	movf	_buttonState+1,w,c
   553  000912  1820               	xorwf	??_main+1,w,c
   554  000914  B4D8               	btfsc	status,2,c
   555  000916  D013               	goto	l61
   556  000918                     u650:
   557                           
   558                           ;Lab9 PWM Output By VR Value.c: 81: {
   559                           ;Lab9 PWM Output By VR Value.c: 82: buttonState = RC0;
   560  000918  A082               	btfss	3970,0,c	;volatile
   561  00091A  D002               	goto	u660
   562  00091C  0E01               	movlw	1
   563  00091E  D001               	goto	u670
   564  000920                     u660:
   565  000920  0E00               	movlw	0
   566  000922                     u670:
   567  000922  6E2E               	movwf	_buttonState,c
   568  000924  6A2F               	clrf	_buttonState+1,c
   569                           
   570                           ;Lab9 PWM Output By VR Value.c: 83: if (buttonState == 1)
   571  000926  042E               	decf	_buttonState,w,c
   572  000928  102F               	iorwf	_buttonState+1,w,c
   573  00092A  A4D8               	btfss	status,2,c
   574  00092C  D004               	goto	l1390
   575                           
   576                           ;Lab9 PWM Output By VR Value.c: 84: {
   577                           ;Lab9 PWM Output By VR Value.c: 85: ledState = 1;
   578  00092E  0E00               	movlw	0
   579  000930  6E3E               	movwf	_ledState+1,c
   580  000932  0E01               	movlw	1
   581  000934  D003               	goto	L1
   582  000936                     l1390:
   583                           
   584                           ;Lab9 PWM Output By VR Value.c: 87: else
   585                           ;Lab9 PWM Output By VR Value.c: 88: {
   586                           ;Lab9 PWM Output By VR Value.c: 89: ledState = 0;
   587  000936  0E00               	movlw	0
   588  000938  6E3E               	movwf	_ledState+1,c
   589  00093A  0E00               	movlw	0
   590  00093C                     L1:
   591  00093C  6E3D               	movwf	_ledState,c
   592  00093E                     l61:
   593                           
   594                           ;Lab9 PWM Output By VR Value.c: 90: }
   595                           ;Lab9 PWM Output By VR Value.c: 91: }
   596                           ;Lab9 PWM Output By VR Value.c: 92: }
   597                           ;Lab9 PWM Output By VR Value.c: 93: lastButtonState = RC0;
   598  00093E  A082               	btfss	3970,0,c	;volatile
   599  000940  D002               	goto	u690
   600  000942  0E01               	movlw	1
   601  000944  D001               	goto	u700
   602  000946                     u690:
   603  000946  0E00               	movlw	0
   604  000948                     u700:
   605  000948  6E32               	movwf	_lastButtonState,c
   606  00094A  6A33               	clrf	_lastButtonState+1,c
   607                           
   608                           ;Lab9 PWM Output By VR Value.c: 95: if (Timer0Flag )
   609  00094C  5038               	movf	_Timer0Flag,w,c	;volatile
   610  00094E  B4D8               	btfsc	status,2,c
   611  000950  D004               	goto	l1396
   612                           
   613                           ;Lab9 PWM Output By VR Value.c: 96: {
   614                           ;Lab9 PWM Output By VR Value.c: 97: Timer0Flag = 0;
   615  000952  0E00               	movlw	0
   616  000954  6E38               	movwf	_Timer0Flag,c	;volatile
   617                           
   618                           ;Lab9 PWM Output By VR Value.c: 98: Duty++;
   619  000956  4A2C               	infsnz	_Duty,f,c
   620  000958  2A2D               	incf	_Duty+1,f,c
   621  00095A                     l1396:
   622                           
   623                           ;Lab9 PWM Output By VR Value.c: 99: }
   624                           ;Lab9 PWM Output By VR Value.c: 100: if(Duty>10 )
   625  00095A  502D               	movf	_Duty+1,w,c
   626  00095C  E104               	bnz	u720
   627  00095E  0E0B               	movlw	11
   628  000960  5C2C               	subwf	_Duty,w,c
   629  000962  A0D8               	btfss	status,0,c
   630  000964  D006               	goto	l1402
   631  000966                     u720:
   632                           
   633                           ;Lab9 PWM Output By VR Value.c: 101: {
   634                           ;Lab9 PWM Output By VR Value.c: 102: Duty=0;
   635  000966  0E00               	movlw	0
   636  000968  6E2D               	movwf	_Duty+1,c
   637  00096A  0E00               	movlw	0
   638  00096C  6E2C               	movwf	_Duty,c
   639                           
   640                           ;Lab9 PWM Output By VR Value.c: 103: s++;
   641  00096E  4A36               	infsnz	_s,f,c
   642  000970  2A37               	incf	_s+1,f,c
   643  000972                     l1402:
   644                           
   645                           ;Lab9 PWM Output By VR Value.c: 104: }
   646                           ;Lab9 PWM Output By VR Value.c: 105: if(s>59 )
   647  000972  5037               	movf	_s+1,w,c
   648  000974  E104               	bnz	u730
   649  000976  0E3C               	movlw	60
   650  000978  5C36               	subwf	_s,w,c
   651  00097A  A0D8               	btfss	status,0,c
   652  00097C  D006               	goto	l1408
   653  00097E                     u730:
   654                           
   655                           ;Lab9 PWM Output By VR Value.c: 106: {
   656                           ;Lab9 PWM Output By VR Value.c: 107: s=0;
   657  00097E  0E00               	movlw	0
   658  000980  6E37               	movwf	_s+1,c
   659  000982  0E00               	movlw	0
   660  000984  6E36               	movwf	_s,c
   661                           
   662                           ;Lab9 PWM Output By VR Value.c: 108: m++;
   663  000986  4A34               	infsnz	_m,f,c
   664  000988  2A35               	incf	_m+1,f,c
   665  00098A                     l1408:
   666                           
   667                           ;Lab9 PWM Output By VR Value.c: 109: }
   668                           ;Lab9 PWM Output By VR Value.c: 110: if(m<59 && !RC0)
   669  00098A  5035               	movf	_m+1,w,c
   670  00098C  E107               	bnz	l1414
   671  00098E  0E3B               	movlw	59
   672  000990  5C34               	subwf	_m,w,c
   673  000992  A0D8               	btfss	status,0,c
   674  000994  B082               	btfsc	3970,0,c	;volatile
   675  000996  D002               	goto	l1414
   676                           
   677                           ;Lab9 PWM Output By VR Value.c: 111: {
   678                           ;Lab9 PWM Output By VR Value.c: 112: m++;
   679  000998  4A34               	infsnz	_m,f,c
   680  00099A  2A35               	incf	_m+1,f,c
   681  00099C                     l1414:
   682                           
   683                           ;Lab9 PWM Output By VR Value.c: 113: }
   684                           ;Lab9 PWM Output By VR Value.c: 116: if(m>59)
   685  00099C  5035               	movf	_m+1,w,c
   686  00099E  E104               	bnz	u760
   687  0009A0  0E3C               	movlw	60
   688  0009A2  5C34               	subwf	_m,w,c
   689  0009A4  A0D8               	btfss	status,0,c
   690  0009A6  D006               	goto	l1420
   691  0009A8                     u760:
   692                           
   693                           ;Lab9 PWM Output By VR Value.c: 117: {
   694                           ;Lab9 PWM Output By VR Value.c: 118: m=0;
   695  0009A8  0E00               	movlw	0
   696  0009AA  6E35               	movwf	_m+1,c
   697  0009AC  0E00               	movlw	0
   698  0009AE  6E34               	movwf	_m,c
   699                           
   700                           ;Lab9 PWM Output By VR Value.c: 119: h++;
   701  0009B0  4A30               	infsnz	_h,f,c
   702  0009B2  2A31               	incf	_h+1,f,c
   703  0009B4                     l1420:
   704                           
   705                           ;Lab9 PWM Output By VR Value.c: 120: }
   706                           ;Lab9 PWM Output By VR Value.c: 121: if(h>23)
   707  0009B4  5031               	movf	_h+1,w,c
   708  0009B6  E104               	bnz	u770
   709  0009B8  0E18               	movlw	24
   710  0009BA  5C30               	subwf	_h,w,c
   711  0009BC  A0D8               	btfss	status,0,c
   712  0009BE  D004               	goto	l1424
   713  0009C0                     u770:
   714                           
   715                           ;Lab9 PWM Output By VR Value.c: 122: {
   716                           ;Lab9 PWM Output By VR Value.c: 123: h=0;
   717  0009C0  0E00               	movlw	0
   718  0009C2  6E31               	movwf	_h+1,c
   719  0009C4  0E00               	movlw	0
   720  0009C6  6E30               	movwf	_h,c
   721  0009C8                     l1424:
   722                           
   723                           ;Lab9 PWM Output By VR Value.c: 124: }
   724                           ;Lab9 PWM Output By VR Value.c: 128: LCM_SetCursor(1, 1);
   725  0009C8  0E01               	movlw	1
   726  0009CA  6E18               	movwf	LCM_SetCursor@Y,c
   727  0009CC  0E01               	movlw	1
   728  0009CE  EC7C  F007         	call	_LCM_SetCursor
   729                           
   730                           ;Lab9 PWM Output By VR Value.c: 129: LCM_PutNumber(h, 2);
   731  0009D2  C030  F01B         	movff	_h,LCM_PutNumber@Number
   732  0009D6  C031  F01C         	movff	_h+1,LCM_PutNumber@Number+1
   733  0009DA  0E02               	movlw	2
   734  0009DC  6E1D               	movwf	LCM_PutNumber@Digit,c
   735  0009DE  EC95  F005         	call	_LCM_PutNumber	;wreg free
   736                           
   737                           ;Lab9 PWM Output By VR Value.c: 130: LCM_SetCursor(4, 1);
   738  0009E2  0E01               	movlw	1
   739  0009E4  6E18               	movwf	LCM_SetCursor@Y,c
   740  0009E6  0E04               	movlw	4
   741  0009E8  EC7C  F007         	call	_LCM_SetCursor
   742                           
   743                           ;Lab9 PWM Output By VR Value.c: 131: LCM_PutNumber(m, 2);
   744  0009EC  C034  F01B         	movff	_m,LCM_PutNumber@Number
   745  0009F0  C035  F01C         	movff	_m+1,LCM_PutNumber@Number+1
   746  0009F4  0E02               	movlw	2
   747  0009F6  6E1D               	movwf	LCM_PutNumber@Digit,c
   748  0009F8  EC95  F005         	call	_LCM_PutNumber	;wreg free
   749                           
   750                           ;Lab9 PWM Output By VR Value.c: 132: LCM_SetCursor(7, 1);
   751  0009FC  0E01               	movlw	1
   752  0009FE  6E18               	movwf	LCM_SetCursor@Y,c
   753  000A00  0E07               	movlw	7
   754  000A02  EC7C  F007         	call	_LCM_SetCursor
   755                           
   756                           ;Lab9 PWM Output By VR Value.c: 133: LCM_PutNumber(s, 2);
   757  000A06  C036  F01B         	movff	_s,LCM_PutNumber@Number
   758  000A0A  C037  F01C         	movff	_s+1,LCM_PutNumber@Number+1
   759  000A0E  0E02               	movlw	2
   760  000A10  6E1D               	movwf	LCM_PutNumber@Digit,c
   761  000A12  EC95  F005         	call	_LCM_PutNumber	;wreg free
   762  000A16  D733               	goto	l1376
   763  000A18                     __end_of_main:
   764                           	opt stack 0
   765                           tblptru	equ	0xFF8
   766                           tblptrh	equ	0xFF7
   767                           tblptrl	equ	0xFF6
   768                           tablat	equ	0xFF5
   769                           intcon	equ	0xFF2
   770                           postinc0	equ	0xFEE
   771                           wreg	equ	0xFE8
   772                           postdec1	equ	0xFE5
   773                           fsr1l	equ	0xFE1
   774                           status	equ	0xFD8
   775                           
   776 ;; *************** function _LCM_SetCursor *****************
   777 ;; Defined at:
   778 ;;		line 190 in file "APP001_LCM.c"
   779 ;; Parameters:    Size  Location     Type
   780 ;;  X               1    wreg     unsigned char 
   781 ;;  Y               1   23[COMRAM] unsigned char 
   782 ;; Auto vars:     Size  Location     Type
   783 ;;  X               1   24[COMRAM] unsigned char 
   784 ;; Return value:  Size  Location     Type
   785 ;;		None               void
   786 ;; Registers used:
   787 ;;		wreg, status,2, status,0, prodl, prodh, cstack
   788 ;; Tracked objects:
   789 ;;		On entry : 0/0
   790 ;;		On exit  : 0/0
   791 ;;		Unchanged: 0/0
   792 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   793 ;;      Params:         1       0       0       0       0       0       0       0       0
   794 ;;      Locals:         1       0       0       0       0       0       0       0       0
   795 ;;      Temps:          0       0       0       0       0       0       0       0       0
   796 ;;      Totals:         2       0       0       0       0       0       0       0       0
   797 ;;Total ram usage:        2 bytes
   798 ;; Hardware stack levels used:    1
   799 ;; Hardware stack levels required when called:    4
   800 ;; This function calls:
   801 ;;		_IntLCM_WriteInstruction
   802 ;; This function is called by:
   803 ;;		_main
   804 ;; This function uses a non-reentrant model
   805 ;;
   806                           
   807                           	psect	text1
   808  000EF8                     __ptext1:
   809                           	opt stack 0
   810  000EF8                     _LCM_SetCursor:
   811                           	opt stack 26
   812                           
   813                           ;incstack = 0
   814                           ;LCM_SetCursor@X stored from wreg
   815  000EF8  6E19               	movwf	LCM_SetCursor@X,c
   816                           
   817                           ;APP001_LCM.c: 192: IntLCM_WriteInstruction((0x80 + (Y * 0x40) + X));
   818  000EFA  5018               	movf	LCM_SetCursor@Y,w,c
   819  000EFC  0D40               	mullw	64
   820  000EFE  50F3               	movf	prodl,w,c
   821  000F00  2419               	addwf	LCM_SetCursor@X,w,c
   822  000F02  0F80               	addlw	128
   823  000F04  EC38  F007         	call	_IntLCM_WriteInstruction
   824  000F08  0012               	return		;funcret
   825  000F0A                     __end_of_LCM_SetCursor:
   826                           	opt stack 0
   827                           tblptru	equ	0xFF8
   828                           tblptrh	equ	0xFF7
   829                           tblptrl	equ	0xFF6
   830                           tablat	equ	0xFF5
   831                           prodl	equ	0xFF3
   832                           intcon	equ	0xFF2
   833                           postinc0	equ	0xFEE
   834                           wreg	equ	0xFE8
   835                           postdec1	equ	0xFE5
   836                           fsr1l	equ	0xFE1
   837                           status	equ	0xFD8
   838                           
   839 ;; *************** function _IntLCM_WriteInstruction *****************
   840 ;; Defined at:
   841 ;;		line 140 in file "APP001_LCM.c"
   842 ;; Parameters:    Size  Location     Type
   843 ;;  Instruction     1    wreg     unsigned char 
   844 ;; Auto vars:     Size  Location     Type
   845 ;;  Instruction     1   22[COMRAM] unsigned char 
   846 ;; Return value:  Size  Location     Type
   847 ;;		None               void
   848 ;; Registers used:
   849 ;;		wreg, status,2, status,0, cstack
   850 ;; Tracked objects:
   851 ;;		On entry : 0/0
   852 ;;		On exit  : 0/0
   853 ;;		Unchanged: 0/0
   854 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   855 ;;      Params:         0       0       0       0       0       0       0       0       0
   856 ;;      Locals:         1       0       0       0       0       0       0       0       0
   857 ;;      Temps:          0       0       0       0       0       0       0       0       0
   858 ;;      Totals:         1       0       0       0       0       0       0       0       0
   859 ;;Total ram usage:        1 bytes
   860 ;; Hardware stack levels used:    1
   861 ;; Hardware stack levels required when called:    3
   862 ;; This function calls:
   863 ;;		_IntLCM_Communication
   864 ;;		_LCM_IsBusy
   865 ;; This function is called by:
   866 ;;		_LCM_SetCursor
   867 ;; This function uses a non-reentrant model
   868 ;;
   869                           
   870                           	psect	text2
   871  000E70                     __ptext2:
   872                           	opt stack 0
   873  000E70                     _IntLCM_WriteInstruction:
   874                           	opt stack 26
   875                           
   876                           ;incstack = 0
   877                           ;IntLCM_WriteInstruction@Instruction stored from wreg
   878  000E70  6E17               	movwf	IntLCM_WriteInstruction@Instruction,c
   879  000E72                     l1220:
   880  000E72  EC6D  F007         	call	_LCM_IsBusy	;wreg free
   881  000E76  0900               	iorlw	0
   882  000E78  A4D8               	btfss	status,2,c
   883  000E7A  D7FB               	goto	l1220
   884                           
   885                           ;APP001_LCM.c: 143: RB5 = 0;
   886  000E7C  9A81               	bcf	3969,5,c	;volatile
   887                           
   888                           ;APP001_LCM.c: 144: RB4 = 0;
   889  000E7E  9881               	bcf	3969,4,c	;volatile
   890                           
   891                           ;APP001_LCM.c: 146: IntLCM_Communication((Instruction >> 4) & 0x0f);
   892  000E80  3817               	swapf	IntLCM_WriteInstruction@Instruction,w,c
   893  000E82  0B0F               	andlw	15
   894  000E84  0B0F               	andlw	15
   895  000E86  EC49  F006         	call	_IntLCM_Communication
   896                           
   897                           ;APP001_LCM.c: 147: IntLCM_Communication(Instruction & 0x0f);
   898  000E8A  5017               	movf	IntLCM_WriteInstruction@Instruction,w,c
   899  000E8C  0B0F               	andlw	15
   900  000E8E  EC49  F006         	call	_IntLCM_Communication
   901  000E92  0012               	return		;funcret
   902  000E94                     __end_of_IntLCM_WriteInstruction:
   903                           	opt stack 0
   904                           tblptru	equ	0xFF8
   905                           tblptrh	equ	0xFF7
   906                           tblptrl	equ	0xFF6
   907                           tablat	equ	0xFF5
   908                           prodl	equ	0xFF3
   909                           intcon	equ	0xFF2
   910                           postinc0	equ	0xFEE
   911                           wreg	equ	0xFE8
   912                           postdec1	equ	0xFE5
   913                           fsr1l	equ	0xFE1
   914                           status	equ	0xFD8
   915                           
   916 ;; *************** function _LCM_PutROMString *****************
   917 ;; Defined at:
   918 ;;		line 220 in file "APP001_LCM.c"
   919 ;; Parameters:    Size  Location     Type
   920 ;;  String          2   23[COMRAM] PTR const unsigned char 
   921 ;;		 -> String1(2), MyName(9), 
   922 ;; Auto vars:     Size  Location     Type
   923 ;;		None
   924 ;; Return value:  Size  Location     Type
   925 ;;		None               void
   926 ;; Registers used:
   927 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   928 ;; Tracked objects:
   929 ;;		On entry : 0/0
   930 ;;		On exit  : 0/0
   931 ;;		Unchanged: 0/0
   932 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   933 ;;      Params:         2       0       0       0       0       0       0       0       0
   934 ;;      Locals:         0       0       0       0       0       0       0       0       0
   935 ;;      Temps:          0       0       0       0       0       0       0       0       0
   936 ;;      Totals:         2       0       0       0       0       0       0       0       0
   937 ;;Total ram usage:        2 bytes
   938 ;; Hardware stack levels used:    1
   939 ;; Hardware stack levels required when called:    4
   940 ;; This function calls:
   941 ;;		_IntLCM_WriteData
   942 ;; This function is called by:
   943 ;;		_main
   944 ;; This function uses a non-reentrant model
   945 ;;
   946                           
   947                           	psect	text3
   948  000E20                     __ptext3:
   949                           	opt stack 0
   950  000E20                     _LCM_PutROMString:
   951                           	opt stack 26
   952                           
   953                           ;APP001_LCM.c: 222: while (*String != 0x00)
   954                           
   955                           ;incstack = 0
   956  000E20  D00A               	goto	l1322
   957  000E22                     l1318:
   958                           
   959                           ;APP001_LCM.c: 223: IntLCM_WriteData(*String++);
   960  000E22  C018  FFF6         	movff	LCM_PutROMString@String,tblptrl
   961  000E26  C019  FFF7         	movff	LCM_PutROMString@String+1,tblptrh
   962  000E2A                     	if	0	;tblptru may be non-zero
   963  000E2A                     	endif
   964  000E2A                     	if	0	;tblptru may be non-zero
   965  000E2A                     	endif
   966  000E2A  0008               	tblrd		*
   967  000E2C  50F5               	movf	tablat,w,c
   968  000E2E  EC4A  F007         	call	_IntLCM_WriteData
   969  000E32  4A18               	infsnz	LCM_PutROMString@String,f,c
   970  000E34  2A19               	incf	LCM_PutROMString@String+1,f,c
   971  000E36                     l1322:
   972  000E36  C018  FFF6         	movff	LCM_PutROMString@String,tblptrl
   973  000E3A  C019  FFF7         	movff	LCM_PutROMString@String+1,tblptrh
   974  000E3E                     	if	0	;tblptru may be non-zero
   975  000E3E                     	endif
   976  000E3E                     	if	0	;tblptru may be non-zero
   977  000E3E                     	endif
   978  000E3E  0008               	tblrd		*
   979  000E40  50F5               	movf	tablat,w,c
   980  000E42  0900               	iorlw	0
   981  000E44  B4D8               	btfsc	status,2,c
   982  000E46  0012               	return	
   983  000E48  D7EC               	goto	l1318
   984  000E4A                     __end_of_LCM_PutROMString:
   985                           	opt stack 0
   986                           tblptru	equ	0xFF8
   987                           tblptrh	equ	0xFF7
   988                           tblptrl	equ	0xFF6
   989                           tablat	equ	0xFF5
   990                           prodl	equ	0xFF3
   991                           intcon	equ	0xFF2
   992                           postinc0	equ	0xFEE
   993                           wreg	equ	0xFE8
   994                           postdec1	equ	0xFE5
   995                           fsr1l	equ	0xFE1
   996                           status	equ	0xFD8
   997                           
   998 ;; *************** function _LCM_PutNumber *****************
   999 ;; Defined at:
  1000 ;;		line 251 in file "APP001_LCM.c"
  1001 ;; Parameters:    Size  Location     Type
  1002 ;;  Number          2   26[COMRAM] unsigned int 
  1003 ;;  Digit           1   28[COMRAM] unsigned char 
  1004 ;; Auto vars:     Size  Location     Type
  1005 ;;  Temporary       1   29[COMRAM] unsigned char 
  1006 ;; Return value:  Size  Location     Type
  1007 ;;		None               void
  1008 ;; Registers used:
  1009 ;;		wreg, status,2, status,0, cstack
  1010 ;; Tracked objects:
  1011 ;;		On entry : 0/0
  1012 ;;		On exit  : 0/0
  1013 ;;		Unchanged: 0/0
  1014 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1015 ;;      Params:         3       0       0       0       0       0       0       0       0
  1016 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1017 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1018 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1019 ;;Total ram usage:        4 bytes
  1020 ;; Hardware stack levels used:    1
  1021 ;; Hardware stack levels required when called:    4
  1022 ;; This function calls:
  1023 ;;		_IntLCM_WriteData
  1024 ;;		_LCM_BCD_Regulate
  1025 ;;		___lwdiv
  1026 ;;		___lwmod
  1027 ;; This function is called by:
  1028 ;;		_main
  1029 ;; This function uses a non-reentrant model
  1030 ;;
  1031                           
  1032                           	psect	text4
  1033  000B2A                     __ptext4:
  1034                           	opt stack 0
  1035  000B2A                     _LCM_PutNumber:
  1036                           	opt stack 26
  1037                           
  1038                           ;APP001_LCM.c: 253: unsigned char Temporary;
  1039                           ;APP001_LCM.c: 254: Disable_Zero = 1;
  1040                           
  1041                           ;incstack = 0
  1042  000B2A  0E01               	movlw	1
  1043  000B2C  6E3F               	movwf	_Disable_Zero,c
  1044                           
  1045                           ;APP001_LCM.c: 256: switch (Digit)
  1046  000B2E  D065               	goto	l1334
  1047  000B30                     l1326:
  1048                           
  1049                           ;APP001_LCM.c: 260: Temporary = LCM_BCD_Regulate((Number % 10000) / 1000);
  1050  000B30  0E27               	movlw	39
  1051  000B32  6E12               	movwf	___lwmod@divisor+1,c
  1052  000B34  0E10               	movlw	16
  1053  000B36  6E11               	movwf	___lwmod@divisor,c
  1054  000B38  C01B  F00F         	movff	LCM_PutNumber@Number,___lwmod@dividend
  1055  000B3C  C01C  F010         	movff	LCM_PutNumber@Number+1,___lwmod@dividend+1
  1056  000B40  ECCF  F006         	call	___lwmod	;wreg free
  1057  000B44  C00F  F014         	movff	?___lwmod,___lwdiv@dividend
  1058  000B48  C010  F015         	movff	?___lwmod+1,___lwdiv@dividend+1
  1059  000B4C  0E03               	movlw	3
  1060  000B4E  6E17               	movwf	___lwdiv@divisor+1,c
  1061  000B50  0EE8               	movlw	232
  1062  000B52  6E16               	movwf	___lwdiv@divisor,c
  1063  000B54  EC83  F006         	call	___lwdiv	;wreg free
  1064  000B58  5014               	movf	?___lwdiv,w,c
  1065  000B5A  EC5C  F007         	call	_LCM_BCD_Regulate
  1066  000B5E  6E1E               	movwf	LCM_PutNumber@Temporary,c
  1067                           
  1068                           ;APP001_LCM.c: 261: IntLCM_WriteData(Temporary);
  1069  000B60  501E               	movf	LCM_PutNumber@Temporary,w,c
  1070  000B62  EC4A  F007         	call	_IntLCM_WriteData
  1071  000B66                     l176:
  1072                           
  1073                           ;APP001_LCM.c: 264: Temporary = LCM_BCD_Regulate((Number % 1000) / 100);
  1074  000B66  0E03               	movlw	3
  1075  000B68  6E12               	movwf	___lwmod@divisor+1,c
  1076  000B6A  0EE8               	movlw	232
  1077  000B6C  6E11               	movwf	___lwmod@divisor,c
  1078  000B6E  C01B  F00F         	movff	LCM_PutNumber@Number,___lwmod@dividend
  1079  000B72  C01C  F010         	movff	LCM_PutNumber@Number+1,___lwmod@dividend+1
  1080  000B76  ECCF  F006         	call	___lwmod	;wreg free
  1081  000B7A  C00F  F014         	movff	?___lwmod,___lwdiv@dividend
  1082  000B7E  C010  F015         	movff	?___lwmod+1,___lwdiv@dividend+1
  1083  000B82  0E00               	movlw	0
  1084  000B84  6E17               	movwf	___lwdiv@divisor+1,c
  1085  000B86  0E64               	movlw	100
  1086  000B88  6E16               	movwf	___lwdiv@divisor,c
  1087  000B8A  EC83  F006         	call	___lwdiv	;wreg free
  1088  000B8E  5014               	movf	?___lwdiv,w,c
  1089  000B90  EC5C  F007         	call	_LCM_BCD_Regulate
  1090  000B94  6E1E               	movwf	LCM_PutNumber@Temporary,c
  1091                           
  1092                           ;APP001_LCM.c: 265: IntLCM_WriteData(Temporary);
  1093  000B96  501E               	movf	LCM_PutNumber@Temporary,w,c
  1094  000B98  EC4A  F007         	call	_IntLCM_WriteData
  1095  000B9C                     l177:
  1096                           
  1097                           ;APP001_LCM.c: 268: Temporary = LCM_BCD_Regulate((Number % 100) / 10);
  1098  000B9C  0E00               	movlw	0
  1099  000B9E  6E12               	movwf	___lwmod@divisor+1,c
  1100  000BA0  0E64               	movlw	100
  1101  000BA2  6E11               	movwf	___lwmod@divisor,c
  1102  000BA4  C01B  F00F         	movff	LCM_PutNumber@Number,___lwmod@dividend
  1103  000BA8  C01C  F010         	movff	LCM_PutNumber@Number+1,___lwmod@dividend+1
  1104  000BAC  ECCF  F006         	call	___lwmod	;wreg free
  1105  000BB0  C00F  F014         	movff	?___lwmod,___lwdiv@dividend
  1106  000BB4  C010  F015         	movff	?___lwmod+1,___lwdiv@dividend+1
  1107  000BB8  0E00               	movlw	0
  1108  000BBA  6E17               	movwf	___lwdiv@divisor+1,c
  1109  000BBC  0E0A               	movlw	10
  1110  000BBE  6E16               	movwf	___lwdiv@divisor,c
  1111  000BC0  EC83  F006         	call	___lwdiv	;wreg free
  1112  000BC4  5014               	movf	?___lwdiv,w,c
  1113  000BC6  EC5C  F007         	call	_LCM_BCD_Regulate
  1114  000BCA  6E1E               	movwf	LCM_PutNumber@Temporary,c
  1115                           
  1116                           ;APP001_LCM.c: 269: IntLCM_WriteData(Temporary);
  1117  000BCC  501E               	movf	LCM_PutNumber@Temporary,w,c
  1118  000BCE  EC4A  F007         	call	_IntLCM_WriteData
  1119  000BD2                     l1328:
  1120                           
  1121                           ;APP001_LCM.c: 272: Disable_Zero = 0;
  1122  000BD2  0E00               	movlw	0
  1123  000BD4  6E3F               	movwf	_Disable_Zero,c
  1124                           
  1125                           ;APP001_LCM.c: 273: Temporary = LCM_BCD_Regulate(Number % 10);
  1126  000BD6  C01B  F00F         	movff	LCM_PutNumber@Number,___lwmod@dividend
  1127  000BDA  C01C  F010         	movff	LCM_PutNumber@Number+1,___lwmod@dividend+1
  1128  000BDE  0E00               	movlw	0
  1129  000BE0  6E12               	movwf	___lwmod@divisor+1,c
  1130  000BE2  0E0A               	movlw	10
  1131  000BE4  6E11               	movwf	___lwmod@divisor,c
  1132  000BE6  ECCF  F006         	call	___lwmod	;wreg free
  1133  000BEA  500F               	movf	?___lwmod,w,c
  1134  000BEC  EC5C  F007         	call	_LCM_BCD_Regulate
  1135  000BF0  6E1E               	movwf	LCM_PutNumber@Temporary,c
  1136                           
  1137                           ;APP001_LCM.c: 274: IntLCM_WriteData(Temporary);
  1138  000BF2  501E               	movf	LCM_PutNumber@Temporary,w,c
  1139  000BF4  EC4A  F007         	call	_IntLCM_WriteData
  1140                           
  1141                           ;APP001_LCM.c: 275: }
  1142  000BF8  0012               	return	
  1143  000BFA                     l1334:
  1144  000BFA  501D               	movf	LCM_PutNumber@Digit,w,c
  1145                           
  1146                           ; Switch size 1, requested type "space"
  1147                           ; Number of cases is 4, Range of values is 1 to 4
  1148                           ; switch strategies available:
  1149                           ; Name         Instructions Cycles
  1150                           ; simple_byte           13     7 (average)
  1151                           ;	Chosen strategy is simple_byte
  1152  000BFC  0A01               	xorlw	1	; case 1
  1153  000BFE  B4D8               	btfsc	status,2,c
  1154  000C00  D7E8               	goto	l1328
  1155  000C02  0A03               	xorlw	3	; case 2
  1156  000C04  B4D8               	btfsc	status,2,c
  1157  000C06  D7CA               	goto	l177
  1158  000C08  0A01               	xorlw	1	; case 3
  1159  000C0A  B4D8               	btfsc	status,2,c
  1160  000C0C  D7AC               	goto	l176
  1161  000C0E  0A07               	xorlw	7	; case 4
  1162  000C10  D78F               	goto	l1326
  1163  000C12                     __end_of_LCM_PutNumber:
  1164                           	opt stack 0
  1165                           tblptru	equ	0xFF8
  1166                           tblptrh	equ	0xFF7
  1167                           tblptrl	equ	0xFF6
  1168                           tablat	equ	0xFF5
  1169                           prodl	equ	0xFF3
  1170                           intcon	equ	0xFF2
  1171                           postinc0	equ	0xFEE
  1172                           wreg	equ	0xFE8
  1173                           postdec1	equ	0xFE5
  1174                           fsr1l	equ	0xFE1
  1175                           status	equ	0xFD8
  1176                           
  1177 ;; *************** function ___lwmod *****************
  1178 ;; Defined at:
  1179 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwmod.c"
  1180 ;; Parameters:    Size  Location     Type
  1181 ;;  dividend        2   14[COMRAM] unsigned int 
  1182 ;;  divisor         2   16[COMRAM] unsigned int 
  1183 ;; Auto vars:     Size  Location     Type
  1184 ;;  counter         1   18[COMRAM] unsigned char 
  1185 ;; Return value:  Size  Location     Type
  1186 ;;                  2   14[COMRAM] unsigned int 
  1187 ;; Registers used:
  1188 ;;		wreg, status,2, status,0
  1189 ;; Tracked objects:
  1190 ;;		On entry : 0/0
  1191 ;;		On exit  : 0/0
  1192 ;;		Unchanged: 0/0
  1193 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1194 ;;      Params:         4       0       0       0       0       0       0       0       0
  1195 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1196 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1197 ;;      Totals:         5       0       0       0       0       0       0       0       0
  1198 ;;Total ram usage:        5 bytes
  1199 ;; Hardware stack levels used:    1
  1200 ;; Hardware stack levels required when called:    1
  1201 ;; This function calls:
  1202 ;;		Nothing
  1203 ;; This function is called by:
  1204 ;;		_LCM_PutNumber
  1205 ;; This function uses a non-reentrant model
  1206 ;;
  1207                           
  1208                           	psect	text5
  1209  000D9E                     __ptext5:
  1210                           	opt stack 0
  1211  000D9E                     ___lwmod:
  1212                           	opt stack 28
  1213                           
  1214                           ;incstack = 0
  1215  000D9E  5011               	movf	___lwmod@divisor,w,c
  1216  000DA0  1012               	iorwf	___lwmod@divisor+1,w,c
  1217  000DA2  B4D8               	btfsc	status,2,c
  1218  000DA4  D018               	goto	l593
  1219  000DA6  0E01               	movlw	1
  1220  000DA8  6E13               	movwf	___lwmod@counter,c
  1221  000DAA  D004               	goto	l1252
  1222  000DAC                     l1250:
  1223  000DAC  90D8               	bcf	status,0,c
  1224  000DAE  3611               	rlcf	___lwmod@divisor,f,c
  1225  000DB0  3612               	rlcf	___lwmod@divisor+1,f,c
  1226  000DB2  2A13               	incf	___lwmod@counter,f,c
  1227  000DB4                     l1252:
  1228  000DB4  AE12               	btfss	___lwmod@divisor+1,7,c
  1229  000DB6  D7FA               	goto	l1250
  1230  000DB8                     l1254:
  1231  000DB8  5011               	movf	___lwmod@divisor,w,c
  1232  000DBA  5C0F               	subwf	___lwmod@dividend,w,c
  1233  000DBC  5012               	movf	___lwmod@divisor+1,w,c
  1234  000DBE  5810               	subwfb	___lwmod@dividend+1,w,c
  1235  000DC0  A0D8               	btfss	status,0,c
  1236  000DC2  D004               	goto	l1258
  1237  000DC4  5011               	movf	___lwmod@divisor,w,c
  1238  000DC6  5E0F               	subwf	___lwmod@dividend,f,c
  1239  000DC8  5012               	movf	___lwmod@divisor+1,w,c
  1240  000DCA  5A10               	subwfb	___lwmod@dividend+1,f,c
  1241  000DCC                     l1258:
  1242  000DCC  90D8               	bcf	status,0,c
  1243  000DCE  3212               	rrcf	___lwmod@divisor+1,f,c
  1244  000DD0  3211               	rrcf	___lwmod@divisor,f,c
  1245  000DD2  2E13               	decfsz	___lwmod@counter,f,c
  1246  000DD4  D7F1               	goto	l1254
  1247  000DD6                     l593:
  1248  000DD6  C00F  F00F         	movff	___lwmod@dividend,?___lwmod
  1249  000DDA  C010  F010         	movff	___lwmod@dividend+1,?___lwmod+1
  1250  000DDE  0012               	return		;funcret
  1251  000DE0                     __end_of___lwmod:
  1252                           	opt stack 0
  1253                           tblptru	equ	0xFF8
  1254                           tblptrh	equ	0xFF7
  1255                           tblptrl	equ	0xFF6
  1256                           tablat	equ	0xFF5
  1257                           prodl	equ	0xFF3
  1258                           intcon	equ	0xFF2
  1259                           postinc0	equ	0xFEE
  1260                           wreg	equ	0xFE8
  1261                           postdec1	equ	0xFE5
  1262                           fsr1l	equ	0xFE1
  1263                           status	equ	0xFD8
  1264                           
  1265 ;; *************** function ___lwdiv *****************
  1266 ;; Defined at:
  1267 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwdiv.c"
  1268 ;; Parameters:    Size  Location     Type
  1269 ;;  dividend        2   19[COMRAM] unsigned int 
  1270 ;;  divisor         2   21[COMRAM] unsigned int 
  1271 ;; Auto vars:     Size  Location     Type
  1272 ;;  quotient        2   23[COMRAM] unsigned int 
  1273 ;;  counter         1   25[COMRAM] unsigned char 
  1274 ;; Return value:  Size  Location     Type
  1275 ;;                  2   19[COMRAM] unsigned int 
  1276 ;; Registers used:
  1277 ;;		wreg, status,2, status,0
  1278 ;; Tracked objects:
  1279 ;;		On entry : 0/0
  1280 ;;		On exit  : 0/0
  1281 ;;		Unchanged: 0/0
  1282 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1283 ;;      Params:         4       0       0       0       0       0       0       0       0
  1284 ;;      Locals:         3       0       0       0       0       0       0       0       0
  1285 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1286 ;;      Totals:         7       0       0       0       0       0       0       0       0
  1287 ;;Total ram usage:        7 bytes
  1288 ;; Hardware stack levels used:    1
  1289 ;; Hardware stack levels required when called:    1
  1290 ;; This function calls:
  1291 ;;		Nothing
  1292 ;; This function is called by:
  1293 ;;		_LCM_PutNumber
  1294 ;; This function uses a non-reentrant model
  1295 ;;
  1296                           
  1297                           	psect	text6
  1298  000D06                     __ptext6:
  1299                           	opt stack 0
  1300  000D06                     ___lwdiv:
  1301                           	opt stack 28
  1302                           
  1303                           ;incstack = 0
  1304  000D06  0E00               	movlw	0
  1305  000D08  6E19               	movwf	___lwdiv@quotient+1,c
  1306  000D0A  0E00               	movlw	0
  1307  000D0C  6E18               	movwf	___lwdiv@quotient,c
  1308  000D0E  5016               	movf	___lwdiv@divisor,w,c
  1309  000D10  1017               	iorwf	___lwdiv@divisor+1,w,c
  1310  000D12  B4D8               	btfsc	status,2,c
  1311  000D14  D01C               	goto	l583
  1312  000D16  0E01               	movlw	1
  1313  000D18  6E1A               	movwf	___lwdiv@counter,c
  1314  000D1A  D004               	goto	l1232
  1315  000D1C                     l1230:
  1316  000D1C  90D8               	bcf	status,0,c
  1317  000D1E  3616               	rlcf	___lwdiv@divisor,f,c
  1318  000D20  3617               	rlcf	___lwdiv@divisor+1,f,c
  1319  000D22  2A1A               	incf	___lwdiv@counter,f,c
  1320  000D24                     l1232:
  1321  000D24  AE17               	btfss	___lwdiv@divisor+1,7,c
  1322  000D26  D7FA               	goto	l1230
  1323  000D28                     l1234:
  1324  000D28  90D8               	bcf	status,0,c
  1325  000D2A  3618               	rlcf	___lwdiv@quotient,f,c
  1326  000D2C  3619               	rlcf	___lwdiv@quotient+1,f,c
  1327  000D2E  5016               	movf	___lwdiv@divisor,w,c
  1328  000D30  5C14               	subwf	___lwdiv@dividend,w,c
  1329  000D32  5017               	movf	___lwdiv@divisor+1,w,c
  1330  000D34  5815               	subwfb	___lwdiv@dividend+1,w,c
  1331  000D36  A0D8               	btfss	status,0,c
  1332  000D38  D005               	goto	l1242
  1333  000D3A  5016               	movf	___lwdiv@divisor,w,c
  1334  000D3C  5E14               	subwf	___lwdiv@dividend,f,c
  1335  000D3E  5017               	movf	___lwdiv@divisor+1,w,c
  1336  000D40  5A15               	subwfb	___lwdiv@dividend+1,f,c
  1337  000D42  8018               	bsf	___lwdiv@quotient,0,c
  1338  000D44                     l1242:
  1339  000D44  90D8               	bcf	status,0,c
  1340  000D46  3217               	rrcf	___lwdiv@divisor+1,f,c
  1341  000D48  3216               	rrcf	___lwdiv@divisor,f,c
  1342  000D4A  2E1A               	decfsz	___lwdiv@counter,f,c
  1343  000D4C  D7ED               	goto	l1234
  1344  000D4E                     l583:
  1345  000D4E  C018  F014         	movff	___lwdiv@quotient,?___lwdiv
  1346  000D52  C019  F015         	movff	___lwdiv@quotient+1,?___lwdiv+1
  1347  000D56  0012               	return		;funcret
  1348  000D58                     __end_of___lwdiv:
  1349                           	opt stack 0
  1350                           tblptru	equ	0xFF8
  1351                           tblptrh	equ	0xFF7
  1352                           tblptrl	equ	0xFF6
  1353                           tablat	equ	0xFF5
  1354                           prodl	equ	0xFF3
  1355                           intcon	equ	0xFF2
  1356                           postinc0	equ	0xFEE
  1357                           wreg	equ	0xFE8
  1358                           postdec1	equ	0xFE5
  1359                           fsr1l	equ	0xFE1
  1360                           status	equ	0xFD8
  1361                           
  1362 ;; *************** function _LCM_BCD_Regulate *****************
  1363 ;; Defined at:
  1364 ;;		line 234 in file "APP001_LCM.c"
  1365 ;; Parameters:    Size  Location     Type
  1366 ;;  BCD             1    wreg     unsigned char 
  1367 ;; Auto vars:     Size  Location     Type
  1368 ;;  BCD             1   14[COMRAM] unsigned char 
  1369 ;; Return value:  Size  Location     Type
  1370 ;;                  1    wreg      unsigned char 
  1371 ;; Registers used:
  1372 ;;		wreg, status,2, status,0
  1373 ;; Tracked objects:
  1374 ;;		On entry : 0/0
  1375 ;;		On exit  : 0/0
  1376 ;;		Unchanged: 0/0
  1377 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1378 ;;      Params:         0       0       0       0       0       0       0       0       0
  1379 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1380 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1381 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1382 ;;Total ram usage:        1 bytes
  1383 ;; Hardware stack levels used:    1
  1384 ;; Hardware stack levels required when called:    1
  1385 ;; This function calls:
  1386 ;;		Nothing
  1387 ;; This function is called by:
  1388 ;;		_LCM_PutNumber
  1389 ;; This function uses a non-reentrant model
  1390 ;;
  1391                           
  1392                           	psect	text7
  1393  000EB8                     __ptext7:
  1394                           	opt stack 0
  1395  000EB8                     _LCM_BCD_Regulate:
  1396                           	opt stack 28
  1397                           
  1398                           ;incstack = 0
  1399                           ;LCM_BCD_Regulate@BCD stored from wreg
  1400  000EB8  6E0F               	movwf	LCM_BCD_Regulate@BCD,c
  1401                           
  1402                           ;APP001_LCM.c: 236: if (BCD == 0)
  1403  000EBA  500F               	movf	LCM_BCD_Regulate@BCD,w,c
  1404  000EBC  A4D8               	btfss	status,2,c
  1405  000EBE  D007               	goto	l910
  1406                           
  1407                           ;APP001_LCM.c: 237: {
  1408                           ;APP001_LCM.c: 238: if (Disable_Zero == 1)
  1409  000EC0  043F               	decf	_Disable_Zero,w,c
  1410  000EC2  A4D8               	btfss	status,2,c
  1411  000EC4  D002               	goto	l906
  1412                           
  1413                           ;APP001_LCM.c: 239: return ' ';
  1414  000EC6  0E20               	movlw	32
  1415  000EC8  0012               	return	
  1416  000ECA                     l906:
  1417                           
  1418                           ;APP001_LCM.c: 240: else
  1419                           ;APP001_LCM.c: 241: return '0';
  1420  000ECA  0E30               	movlw	48
  1421                           
  1422                           ;APP001_LCM.c: 242: }
  1423  000ECC  0012               	return	
  1424  000ECE                     l910:
  1425                           
  1426                           ;APP001_LCM.c: 244: else
  1427                           ;APP001_LCM.c: 245: {
  1428                           ;APP001_LCM.c: 246: Disable_Zero = 0;
  1429  000ECE  0E00               	movlw	0
  1430  000ED0  6E3F               	movwf	_Disable_Zero,c
  1431                           
  1432                           ;APP001_LCM.c: 247: return ( BCD += '0');
  1433  000ED2  0E30               	movlw	48
  1434  000ED4  260F               	addwf	LCM_BCD_Regulate@BCD,f,c
  1435  000ED6  500F               	movf	LCM_BCD_Regulate@BCD,w,c
  1436  000ED8  0012               	return	
  1437  000EDA                     __end_of_LCM_BCD_Regulate:
  1438                           	opt stack 0
  1439                           tblptru	equ	0xFF8
  1440                           tblptrh	equ	0xFF7
  1441                           tblptrl	equ	0xFF6
  1442                           tablat	equ	0xFF5
  1443                           prodl	equ	0xFF3
  1444                           intcon	equ	0xFF2
  1445                           postinc0	equ	0xFEE
  1446                           wreg	equ	0xFE8
  1447                           postdec1	equ	0xFE5
  1448                           fsr1l	equ	0xFE1
  1449                           status	equ	0xFD8
  1450                           
  1451 ;; *************** function _IntLCM_WriteData *****************
  1452 ;; Defined at:
  1453 ;;		line 130 in file "APP001_LCM.c"
  1454 ;; Parameters:    Size  Location     Type
  1455 ;;  Data            1    wreg     unsigned char 
  1456 ;; Auto vars:     Size  Location     Type
  1457 ;;  Data            1   22[COMRAM] unsigned char 
  1458 ;; Return value:  Size  Location     Type
  1459 ;;		None               void
  1460 ;; Registers used:
  1461 ;;		wreg, status,2, status,0, cstack
  1462 ;; Tracked objects:
  1463 ;;		On entry : 0/0
  1464 ;;		On exit  : 0/0
  1465 ;;		Unchanged: 0/0
  1466 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1467 ;;      Params:         0       0       0       0       0       0       0       0       0
  1468 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1469 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1470 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1471 ;;Total ram usage:        1 bytes
  1472 ;; Hardware stack levels used:    1
  1473 ;; Hardware stack levels required when called:    3
  1474 ;; This function calls:
  1475 ;;		_IntLCM_Communication
  1476 ;;		_LCM_IsBusy
  1477 ;; This function is called by:
  1478 ;;		_LCM_PutROMString
  1479 ;;		_LCM_PutNumber
  1480 ;;		_LCM_PutASCII
  1481 ;;		_LCM_PutHex
  1482 ;;		_LCM_PutRAMString
  1483 ;; This function uses a non-reentrant model
  1484 ;;
  1485                           
  1486                           	psect	text8
  1487  000E94                     __ptext8:
  1488                           	opt stack 0
  1489  000E94                     _IntLCM_WriteData:
  1490                           	opt stack 26
  1491                           
  1492                           ;incstack = 0
  1493                           ;IntLCM_WriteData@Data stored from wreg
  1494  000E94  6E17               	movwf	IntLCM_WriteData@Data,c
  1495  000E96                     l1214:
  1496  000E96  EC6D  F007         	call	_LCM_IsBusy	;wreg free
  1497  000E9A  0900               	iorlw	0
  1498  000E9C  A4D8               	btfss	status,2,c
  1499  000E9E  D7FB               	goto	l1214
  1500                           
  1501                           ;APP001_LCM.c: 133: RB5 = 1;
  1502  000EA0  8A81               	bsf	3969,5,c	;volatile
  1503                           
  1504                           ;APP001_LCM.c: 134: RB4 = 0;
  1505  000EA2  9881               	bcf	3969,4,c	;volatile
  1506                           
  1507                           ;APP001_LCM.c: 136: IntLCM_Communication((Data >> 4) & 0x0f);
  1508  000EA4  3817               	swapf	IntLCM_WriteData@Data,w,c
  1509  000EA6  0B0F               	andlw	15
  1510  000EA8  0B0F               	andlw	15
  1511  000EAA  EC49  F006         	call	_IntLCM_Communication
  1512                           
  1513                           ;APP001_LCM.c: 137: IntLCM_Communication(Data & 0x0f);
  1514  000EAE  5017               	movf	IntLCM_WriteData@Data,w,c
  1515  000EB0  0B0F               	andlw	15
  1516  000EB2  EC49  F006         	call	_IntLCM_Communication
  1517  000EB6  0012               	return		;funcret
  1518  000EB8                     __end_of_IntLCM_WriteData:
  1519                           	opt stack 0
  1520                           tblptru	equ	0xFF8
  1521                           tblptrh	equ	0xFF7
  1522                           tblptrl	equ	0xFF6
  1523                           tablat	equ	0xFF5
  1524                           prodl	equ	0xFF3
  1525                           intcon	equ	0xFF2
  1526                           postinc0	equ	0xFEE
  1527                           wreg	equ	0xFE8
  1528                           postdec1	equ	0xFE5
  1529                           fsr1l	equ	0xFE1
  1530                           status	equ	0xFD8
  1531                           
  1532 ;; *************** function _LCM_IsBusy *****************
  1533 ;; Defined at:
  1534 ;;		line 107 in file "APP001_LCM.c"
  1535 ;; Parameters:    Size  Location     Type
  1536 ;;		None
  1537 ;; Auto vars:     Size  Location     Type
  1538 ;;  i               2   14[COMRAM] unsigned int 
  1539 ;; Return value:  Size  Location     Type
  1540 ;;                  1    wreg      unsigned char 
  1541 ;; Registers used:
  1542 ;;		wreg, status,2, status,0
  1543 ;; Tracked objects:
  1544 ;;		On entry : 0/0
  1545 ;;		On exit  : 0/0
  1546 ;;		Unchanged: 0/0
  1547 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1548 ;;      Params:         0       0       0       0       0       0       0       0       0
  1549 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1550 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1551 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1552 ;;Total ram usage:        2 bytes
  1553 ;; Hardware stack levels used:    1
  1554 ;; Hardware stack levels required when called:    1
  1555 ;; This function calls:
  1556 ;;		Nothing
  1557 ;; This function is called by:
  1558 ;;		_IntLCM_WriteData
  1559 ;;		_IntLCM_WriteInstruction
  1560 ;; This function uses a non-reentrant model
  1561 ;;
  1562                           
  1563                           	psect	text9
  1564  000EDA                     __ptext9:
  1565                           	opt stack 0
  1566  000EDA                     _LCM_IsBusy:
  1567                           	opt stack 27
  1568                           
  1569                           ;APP001_LCM.c: 124: unsigned int i;
  1570                           ;APP001_LCM.c: 126: for (i = 0; i < 1000; i++);
  1571                           
  1572                           ;incstack = 0
  1573  000EDA  0E00               	movlw	0
  1574  000EDC  6E10               	movwf	LCM_IsBusy@i+1,c
  1575  000EDE  0E00               	movlw	0
  1576  000EE0  6E0F               	movwf	LCM_IsBusy@i,c
  1577  000EE2                     l842:
  1578  000EE2  0EE8               	movlw	232
  1579  000EE4  5C0F               	subwf	LCM_IsBusy@i,w,c
  1580  000EE6  0E03               	movlw	3
  1581  000EE8  5810               	subwfb	LCM_IsBusy@i+1,w,c
  1582  000EEA  B0D8               	btfsc	status,0,c
  1583  000EEC  D003               	goto	l850
  1584  000EEE  4A0F               	infsnz	LCM_IsBusy@i,f,c
  1585  000EF0  2A10               	incf	LCM_IsBusy@i+1,f,c
  1586  000EF2  D7F7               	goto	l842
  1587  000EF4                     l850:
  1588                           
  1589                           ;APP001_LCM.c: 127: return 0;
  1590  000EF4  0E00               	movlw	0
  1591  000EF6  0012               	return	
  1592  000EF8                     __end_of_LCM_IsBusy:
  1593                           	opt stack 0
  1594                           tblptru	equ	0xFF8
  1595                           tblptrh	equ	0xFF7
  1596                           tblptrl	equ	0xFF6
  1597                           tablat	equ	0xFF5
  1598                           prodl	equ	0xFF3
  1599                           intcon	equ	0xFF2
  1600                           postinc0	equ	0xFEE
  1601                           wreg	equ	0xFE8
  1602                           postdec1	equ	0xFE5
  1603                           fsr1l	equ	0xFE1
  1604                           status	equ	0xFD8
  1605                           
  1606 ;; *************** function _LCM_Init *****************
  1607 ;; Defined at:
  1608 ;;		line 150 in file "APP001_LCM.c"
  1609 ;; Parameters:    Size  Location     Type
  1610 ;;		None
  1611 ;; Auto vars:     Size  Location     Type
  1612 ;;		None
  1613 ;; Return value:  Size  Location     Type
  1614 ;;		None               void
  1615 ;; Registers used:
  1616 ;;		wreg, status,2, status,0, cstack
  1617 ;; Tracked objects:
  1618 ;;		On entry : 0/0
  1619 ;;		On exit  : 0/0
  1620 ;;		Unchanged: 0/0
  1621 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1622 ;;      Params:         0       0       0       0       0       0       0       0       0
  1623 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1624 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1625 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1626 ;;Total ram usage:        0 bytes
  1627 ;; Hardware stack levels used:    1
  1628 ;; Hardware stack levels required when called:    3
  1629 ;; This function calls:
  1630 ;;		_IntLCM_Communication
  1631 ;;		_LCM_Delay
  1632 ;;		_LCM_IOSetup
  1633 ;; This function is called by:
  1634 ;;		_main
  1635 ;; This function uses a non-reentrant model
  1636 ;;
  1637                           
  1638                           	psect	text10
  1639  000A18                     __ptext10:
  1640                           	opt stack 0
  1641  000A18                     _LCM_Init:
  1642                           	opt stack 27
  1643                           
  1644                           ;APP001_LCM.c: 152: LCM_IOSetup();
  1645                           
  1646                           ;incstack = 0
  1647  000A18  EC25  F007         	call	_LCM_IOSetup	;wreg free
  1648                           
  1649                           ;APP001_LCM.c: 154: RB5 = 0;
  1650  000A1C  9A81               	bcf	3969,5,c	;volatile
  1651                           
  1652                           ;APP001_LCM.c: 155: RB4 = 0;
  1653  000A1E  9881               	bcf	3969,4,c	;volatile
  1654                           
  1655                           ;APP001_LCM.c: 157: IntLCM_Communication(0x03);
  1656  000A20  0E03               	movlw	3
  1657  000A22  EC49  F006         	call	_IntLCM_Communication
  1658                           
  1659                           ;APP001_LCM.c: 158: LCM_Delay(( 16000000L / 4 * 1 ) / 1000L / 10 * 4.1);
  1660  000A26  0E67               	movlw	103
  1661  000A28  6E0F               	movwf	LCM_Delay@Count,c
  1662  000A2A  0E06               	movlw	6
  1663  000A2C  6E10               	movwf	LCM_Delay@Count+1,c
  1664  000A2E  0E00               	movlw	0
  1665  000A30  6E11               	movwf	LCM_Delay@Count+2,c
  1666  000A32  0E00               	movlw	0
  1667  000A34  6E12               	movwf	LCM_Delay@Count+3,c
  1668  000A36  ECF0  F006         	call	_LCM_Delay	;wreg free
  1669                           
  1670                           ;APP001_LCM.c: 160: IntLCM_Communication(0x03);
  1671  000A3A  0E03               	movlw	3
  1672  000A3C  EC49  F006         	call	_IntLCM_Communication
  1673                           
  1674                           ;APP001_LCM.c: 161: LCM_Delay(( 16000000L / 4 * 100 ) / 1000000L / 10);
  1675  000A40  0E28               	movlw	40
  1676  000A42  6E0F               	movwf	LCM_Delay@Count,c
  1677  000A44  0E00               	movlw	0
  1678  000A46  6E10               	movwf	LCM_Delay@Count+1,c
  1679  000A48  0E00               	movlw	0
  1680  000A4A  6E11               	movwf	LCM_Delay@Count+2,c
  1681  000A4C  0E00               	movlw	0
  1682  000A4E  6E12               	movwf	LCM_Delay@Count+3,c
  1683  000A50  ECF0  F006         	call	_LCM_Delay	;wreg free
  1684                           
  1685                           ;APP001_LCM.c: 163: IntLCM_Communication(0x03);
  1686  000A54  0E03               	movlw	3
  1687  000A56  EC49  F006         	call	_IntLCM_Communication
  1688                           
  1689                           ;APP001_LCM.c: 164: LCM_Delay(( 16000000L / 4 * 100 ) / 1000000L / 10);
  1690  000A5A  0E28               	movlw	40
  1691  000A5C  6E0F               	movwf	LCM_Delay@Count,c
  1692  000A5E  0E00               	movlw	0
  1693  000A60  6E10               	movwf	LCM_Delay@Count+1,c
  1694  000A62  0E00               	movlw	0
  1695  000A64  6E11               	movwf	LCM_Delay@Count+2,c
  1696  000A66  0E00               	movlw	0
  1697  000A68  6E12               	movwf	LCM_Delay@Count+3,c
  1698  000A6A  ECF0  F006         	call	_LCM_Delay	;wreg free
  1699                           
  1700                           ;APP001_LCM.c: 166: IntLCM_Communication(0x02);
  1701  000A6E  0E02               	movlw	2
  1702  000A70  EC49  F006         	call	_IntLCM_Communication
  1703                           
  1704                           ;APP001_LCM.c: 167: LCM_Delay(( 16000000L / 4 * 100 ) / 1000000L / 10);
  1705  000A74  0E28               	movlw	40
  1706  000A76  6E0F               	movwf	LCM_Delay@Count,c
  1707  000A78  0E00               	movlw	0
  1708  000A7A  6E10               	movwf	LCM_Delay@Count+1,c
  1709  000A7C  0E00               	movlw	0
  1710  000A7E  6E11               	movwf	LCM_Delay@Count+2,c
  1711  000A80  0E00               	movlw	0
  1712  000A82  6E12               	movwf	LCM_Delay@Count+3,c
  1713  000A84  ECF0  F006         	call	_LCM_Delay	;wreg free
  1714                           
  1715                           ;APP001_LCM.c: 169: IntLCM_Communication((0x28 >> 4) & 0x0f);
  1716  000A88  0E02               	movlw	2
  1717  000A8A  EC49  F006         	call	_IntLCM_Communication
  1718                           
  1719                           ;APP001_LCM.c: 170: IntLCM_Communication(0x28 & 0xf);
  1720  000A8E  0E08               	movlw	8
  1721  000A90  EC49  F006         	call	_IntLCM_Communication
  1722                           
  1723                           ;APP001_LCM.c: 171: LCM_Delay(( 16000000L / 4 * 10 ) / 1000000L / 10 * 3.7);
  1724  000A94  0E0E               	movlw	14
  1725  000A96  6E0F               	movwf	LCM_Delay@Count,c
  1726  000A98  0E00               	movlw	0
  1727  000A9A  6E10               	movwf	LCM_Delay@Count+1,c
  1728  000A9C  0E00               	movlw	0
  1729  000A9E  6E11               	movwf	LCM_Delay@Count+2,c
  1730  000AA0  0E00               	movlw	0
  1731  000AA2  6E12               	movwf	LCM_Delay@Count+3,c
  1732  000AA4  ECF0  F006         	call	_LCM_Delay	;wreg free
  1733                           
  1734                           ;APP001_LCM.c: 173: IntLCM_Communication((0x08 >> 4) & 0x0f);
  1735  000AA8  0E00               	movlw	0
  1736  000AAA  EC49  F006         	call	_IntLCM_Communication
  1737                           
  1738                           ;APP001_LCM.c: 174: IntLCM_Communication(0x08 & 0xf);
  1739  000AAE  0E08               	movlw	8
  1740  000AB0  EC49  F006         	call	_IntLCM_Communication
  1741                           
  1742                           ;APP001_LCM.c: 175: LCM_Delay(( 16000000L / 4 * 10 ) / 1000000L / 10 * 3.7);
  1743  000AB4  0E0E               	movlw	14
  1744  000AB6  6E0F               	movwf	LCM_Delay@Count,c
  1745  000AB8  0E00               	movlw	0
  1746  000ABA  6E10               	movwf	LCM_Delay@Count+1,c
  1747  000ABC  0E00               	movlw	0
  1748  000ABE  6E11               	movwf	LCM_Delay@Count+2,c
  1749  000AC0  0E00               	movlw	0
  1750  000AC2  6E12               	movwf	LCM_Delay@Count+3,c
  1751  000AC4  ECF0  F006         	call	_LCM_Delay	;wreg free
  1752                           
  1753                           ;APP001_LCM.c: 177: IntLCM_Communication((0x01 >> 4) & 0x0f);
  1754  000AC8  0E00               	movlw	0
  1755  000ACA  EC49  F006         	call	_IntLCM_Communication
  1756                           
  1757                           ;APP001_LCM.c: 178: IntLCM_Communication(0x01 & 0xf);
  1758  000ACE  0E01               	movlw	1
  1759  000AD0  EC49  F006         	call	_IntLCM_Communication
  1760                           
  1761                           ;APP001_LCM.c: 179: LCM_Delay(( 16000000L / 4 * 1 ) / 1000L / 10 * 1.52);
  1762  000AD4  0E60               	movlw	96
  1763  000AD6  6E0F               	movwf	LCM_Delay@Count,c
  1764  000AD8  0E02               	movlw	2
  1765  000ADA  6E10               	movwf	LCM_Delay@Count+1,c
  1766  000ADC  0E00               	movlw	0
  1767  000ADE  6E11               	movwf	LCM_Delay@Count+2,c
  1768  000AE0  0E00               	movlw	0
  1769  000AE2  6E12               	movwf	LCM_Delay@Count+3,c
  1770  000AE4  ECF0  F006         	call	_LCM_Delay	;wreg free
  1771                           
  1772                           ;APP001_LCM.c: 181: IntLCM_Communication((0x06 >> 4) & 0x0f);
  1773  000AE8  0E00               	movlw	0
  1774  000AEA  EC49  F006         	call	_IntLCM_Communication
  1775                           
  1776                           ;APP001_LCM.c: 182: IntLCM_Communication(0x06 & 0xf);
  1777  000AEE  0E06               	movlw	6
  1778  000AF0  EC49  F006         	call	_IntLCM_Communication
  1779                           
  1780                           ;APP001_LCM.c: 183: LCM_Delay(( 16000000L / 4 * 10 ) / 1000000L / 10 * 3.7);
  1781  000AF4  0E0E               	movlw	14
  1782  000AF6  6E0F               	movwf	LCM_Delay@Count,c
  1783  000AF8  0E00               	movlw	0
  1784  000AFA  6E10               	movwf	LCM_Delay@Count+1,c
  1785  000AFC  0E00               	movlw	0
  1786  000AFE  6E11               	movwf	LCM_Delay@Count+2,c
  1787  000B00  0E00               	movlw	0
  1788  000B02  6E12               	movwf	LCM_Delay@Count+3,c
  1789  000B04  ECF0  F006         	call	_LCM_Delay	;wreg free
  1790                           
  1791                           ;APP001_LCM.c: 185: IntLCM_Communication((0x0c >> 4) & 0x0f);
  1792  000B08  0E00               	movlw	0
  1793  000B0A  EC49  F006         	call	_IntLCM_Communication
  1794                           
  1795                           ;APP001_LCM.c: 186: IntLCM_Communication(0x0c & 0xf);
  1796  000B0E  0E0C               	movlw	12
  1797  000B10  EC49  F006         	call	_IntLCM_Communication
  1798                           
  1799                           ;APP001_LCM.c: 187: LCM_Delay(( 16000000L / 4 * 10 ) / 1000000L / 10 * 3.7);
  1800  000B14  0E0E               	movlw	14
  1801  000B16  6E0F               	movwf	LCM_Delay@Count,c
  1802  000B18  0E00               	movlw	0
  1803  000B1A  6E10               	movwf	LCM_Delay@Count+1,c
  1804  000B1C  0E00               	movlw	0
  1805  000B1E  6E11               	movwf	LCM_Delay@Count+2,c
  1806  000B20  0E00               	movlw	0
  1807  000B22  6E12               	movwf	LCM_Delay@Count+3,c
  1808  000B24  ECF0  F006         	call	_LCM_Delay	;wreg free
  1809  000B28  0012               	return		;funcret
  1810  000B2A                     __end_of_LCM_Init:
  1811                           	opt stack 0
  1812                           tblptru	equ	0xFF8
  1813                           tblptrh	equ	0xFF7
  1814                           tblptrl	equ	0xFF6
  1815                           tablat	equ	0xFF5
  1816                           prodl	equ	0xFF3
  1817                           intcon	equ	0xFF2
  1818                           postinc0	equ	0xFEE
  1819                           wreg	equ	0xFE8
  1820                           postdec1	equ	0xFE5
  1821                           fsr1l	equ	0xFE1
  1822                           status	equ	0xFD8
  1823                           
  1824 ;; *************** function _LCM_IOSetup *****************
  1825 ;; Defined at:
  1826 ;;		line 38 in file "APP001_LCM.c"
  1827 ;; Parameters:    Size  Location     Type
  1828 ;;		None
  1829 ;; Auto vars:     Size  Location     Type
  1830 ;;		None
  1831 ;; Return value:  Size  Location     Type
  1832 ;;		None               void
  1833 ;; Registers used:
  1834 ;;		wreg, status,2
  1835 ;; Tracked objects:
  1836 ;;		On entry : 0/0
  1837 ;;		On exit  : 0/0
  1838 ;;		Unchanged: 0/0
  1839 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1840 ;;      Params:         0       0       0       0       0       0       0       0       0
  1841 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1842 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1843 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1844 ;;Total ram usage:        0 bytes
  1845 ;; Hardware stack levels used:    1
  1846 ;; Hardware stack levels required when called:    1
  1847 ;; This function calls:
  1848 ;;		Nothing
  1849 ;; This function is called by:
  1850 ;;		_LCM_Init
  1851 ;; This function uses a non-reentrant model
  1852 ;;
  1853                           
  1854                           	psect	text11
  1855  000E4A                     __ptext11:
  1856                           	opt stack 0
  1857  000E4A                     _LCM_IOSetup:
  1858                           	opt stack 28
  1859                           
  1860                           ;APP001_LCM.c: 40: ADCON1bits.PCFG = 0x0d;
  1861                           
  1862                           ;incstack = 0
  1863  000E4A  50C1               	movf	4033,w,c	;volatile
  1864  000E4C  0BF0               	andlw	-16
  1865  000E4E  090D               	iorlw	13
  1866  000E50  6EC1               	movwf	4033,c	;volatile
  1867                           
  1868                           ;APP001_LCM.c: 42: TRISBbits.TRISB5 = 0;
  1869  000E52  9A93               	bcf	3987,5,c	;volatile
  1870                           
  1871                           ;APP001_LCM.c: 43: TRISBbits.TRISB4 = 0;
  1872  000E54  9893               	bcf	3987,4,c	;volatile
  1873                           
  1874                           ;APP001_LCM.c: 44: TRISBbits.TRISB3 = 0;
  1875  000E56  9693               	bcf	3987,3,c	;volatile
  1876                           
  1877                           ;APP001_LCM.c: 46: TRISDbits.TRISD4 = 0;
  1878  000E58  9895               	bcf	3989,4,c	;volatile
  1879                           
  1880                           ;APP001_LCM.c: 47: TRISDbits.TRISD5 = 0;
  1881  000E5A  9A95               	bcf	3989,5,c	;volatile
  1882                           
  1883                           ;APP001_LCM.c: 48: TRISDbits.TRISD6 = 0;
  1884  000E5C  9C95               	bcf	3989,6,c	;volatile
  1885                           
  1886                           ;APP001_LCM.c: 49: TRISDbits.TRISD7 = 0;
  1887  000E5E  9E95               	bcf	3989,7,c	;volatile
  1888                           
  1889                           ;APP001_LCM.c: 51: RB5 = 0;
  1890  000E60  9A81               	bcf	3969,5,c	;volatile
  1891                           
  1892                           ;APP001_LCM.c: 52: RB4 = 0;
  1893  000E62  9881               	bcf	3969,4,c	;volatile
  1894                           
  1895                           ;APP001_LCM.c: 53: RB3 = 0;
  1896  000E64  9681               	bcf	3969,3,c	;volatile
  1897                           
  1898                           ;APP001_LCM.c: 55: RD7 = 0;
  1899  000E66  9E83               	bcf	3971,7,c	;volatile
  1900                           
  1901                           ;APP001_LCM.c: 56: RD6 = 0;
  1902  000E68  9C83               	bcf	3971,6,c	;volatile
  1903                           
  1904                           ;APP001_LCM.c: 57: RD5 = 0;
  1905  000E6A  9A83               	bcf	3971,5,c	;volatile
  1906                           
  1907                           ;APP001_LCM.c: 58: RD4 = 0;
  1908  000E6C  9883               	bcf	3971,4,c	;volatile
  1909  000E6E  0012               	return		;funcret
  1910  000E70                     __end_of_LCM_IOSetup:
  1911                           	opt stack 0
  1912                           tblptru	equ	0xFF8
  1913                           tblptrh	equ	0xFF7
  1914                           tblptrl	equ	0xFF6
  1915                           tablat	equ	0xFF5
  1916                           prodl	equ	0xFF3
  1917                           intcon	equ	0xFF2
  1918                           postinc0	equ	0xFEE
  1919                           wreg	equ	0xFE8
  1920                           postdec1	equ	0xFE5
  1921                           fsr1l	equ	0xFE1
  1922                           status	equ	0xFD8
  1923                           
  1924 ;; *************** function _IntLCM_Communication *****************
  1925 ;; Defined at:
  1926 ;;		line 72 in file "APP001_LCM.c"
  1927 ;; Parameters:    Size  Location     Type
  1928 ;;  NibbleByte      1    wreg     unsigned char 
  1929 ;; Auto vars:     Size  Location     Type
  1930 ;;  NibbleByte      1   20[COMRAM] unsigned char 
  1931 ;;  Temporary       1   21[COMRAM] unsigned char 
  1932 ;; Return value:  Size  Location     Type
  1933 ;;		None               void
  1934 ;; Registers used:
  1935 ;;		wreg, status,2, status,0, cstack
  1936 ;; Tracked objects:
  1937 ;;		On entry : 0/0
  1938 ;;		On exit  : 0/0
  1939 ;;		Unchanged: 0/0
  1940 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1941 ;;      Params:         0       0       0       0       0       0       0       0       0
  1942 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1943 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1944 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1945 ;;Total ram usage:        2 bytes
  1946 ;; Hardware stack levels used:    1
  1947 ;; Hardware stack levels required when called:    2
  1948 ;; This function calls:
  1949 ;;		_LCM_Delay
  1950 ;; This function is called by:
  1951 ;;		_IntLCM_WriteData
  1952 ;;		_IntLCM_WriteInstruction
  1953 ;;		_LCM_Init
  1954 ;; This function uses a non-reentrant model
  1955 ;;
  1956                           
  1957                           	psect	text12
  1958  000C92                     __ptext12:
  1959                           	opt stack 0
  1960  000C92                     _IntLCM_Communication:
  1961                           	opt stack 26
  1962                           
  1963                           ;incstack = 0
  1964                           ;IntLCM_Communication@NibbleByte stored from wreg
  1965  000C92  6E15               	movwf	IntLCM_Communication@NibbleByte,c
  1966                           
  1967                           ;APP001_LCM.c: 74: unsigned char Temporary;
  1968                           ;APP001_LCM.c: 77: LCM_Delay(( 16000000L / 4 * 10 ) / 1000000000L / 10 * 4);
  1969  000C94  0E00               	movlw	0
  1970  000C96  6E0F               	movwf	LCM_Delay@Count,c
  1971  000C98  0E00               	movlw	0
  1972  000C9A  6E10               	movwf	LCM_Delay@Count+1,c
  1973  000C9C  0E00               	movlw	0
  1974  000C9E  6E11               	movwf	LCM_Delay@Count+2,c
  1975  000CA0  0E00               	movlw	0
  1976  000CA2  6E12               	movwf	LCM_Delay@Count+3,c
  1977  000CA4  ECF0  F006         	call	_LCM_Delay	;wreg free
  1978                           
  1979                           ;APP001_LCM.c: 79: RD7 = 0;
  1980  000CA8  9E83               	bcf	3971,7,c	;volatile
  1981                           
  1982                           ;APP001_LCM.c: 80: RD6 = 0;
  1983  000CAA  9C83               	bcf	3971,6,c	;volatile
  1984                           
  1985                           ;APP001_LCM.c: 81: RD5 = 0;
  1986  000CAC  9A83               	bcf	3971,5,c	;volatile
  1987                           
  1988                           ;APP001_LCM.c: 82: RD4 = 0;
  1989  000CAE  9883               	bcf	3971,4,c	;volatile
  1990                           
  1991                           ;APP001_LCM.c: 84: Temporary = NibbleByte & 0x0f;
  1992  000CB0  5015               	movf	IntLCM_Communication@NibbleByte,w,c
  1993  000CB2  0B0F               	andlw	15
  1994  000CB4  6E16               	movwf	IntLCM_Communication@Temporary,c
  1995                           
  1996                           ;APP001_LCM.c: 85: if ((Temporary & 0x08) == 0x08)
  1997  000CB6  B616               	btfsc	IntLCM_Communication@Temporary,3,c
  1998                           
  1999                           ;APP001_LCM.c: 86: RD7 = 1;
  2000  000CB8  8E83               	bsf	3971,7,c	;volatile
  2001                           
  2002                           ;APP001_LCM.c: 88: Temporary = NibbleByte & 0x0f;
  2003  000CBA  5015               	movf	IntLCM_Communication@NibbleByte,w,c
  2004  000CBC  0B0F               	andlw	15
  2005  000CBE  6E16               	movwf	IntLCM_Communication@Temporary,c
  2006                           
  2007                           ;APP001_LCM.c: 89: if ((Temporary & 0x04) == 0x04)
  2008  000CC0  B416               	btfsc	IntLCM_Communication@Temporary,2,c
  2009                           
  2010                           ;APP001_LCM.c: 90: RD6 = 1;
  2011  000CC2  8C83               	bsf	3971,6,c	;volatile
  2012                           
  2013                           ;APP001_LCM.c: 92: Temporary = NibbleByte & 0x0f;
  2014  000CC4  5015               	movf	IntLCM_Communication@NibbleByte,w,c
  2015  000CC6  0B0F               	andlw	15
  2016  000CC8  6E16               	movwf	IntLCM_Communication@Temporary,c
  2017                           
  2018                           ;APP001_LCM.c: 93: if ((Temporary & 0x02) == 0x02)
  2019  000CCA  B216               	btfsc	IntLCM_Communication@Temporary,1,c
  2020                           
  2021                           ;APP001_LCM.c: 94: RD5 = 1;
  2022  000CCC  8A83               	bsf	3971,5,c	;volatile
  2023                           
  2024                           ;APP001_LCM.c: 96: Temporary = NibbleByte & 0x0f;
  2025  000CCE  5015               	movf	IntLCM_Communication@NibbleByte,w,c
  2026  000CD0  0B0F               	andlw	15
  2027  000CD2  6E16               	movwf	IntLCM_Communication@Temporary,c
  2028                           
  2029                           ;APP001_LCM.c: 97: if ((Temporary & 0x01) == 0x01)
  2030  000CD4  B016               	btfsc	IntLCM_Communication@Temporary,0,c
  2031                           
  2032                           ;APP001_LCM.c: 98: RD4 = 1;
  2033  000CD6  8883               	bsf	3971,4,c	;volatile
  2034                           
  2035                           ;APP001_LCM.c: 100: RB3 = 1;
  2036  000CD8  8681               	bsf	3969,3,c	;volatile
  2037                           
  2038                           ;APP001_LCM.c: 101: LCM_Delay(( 16000000L / 4 * 100 ) / 1000000000L / 10 * 2.3);
  2039  000CDA  0E00               	movlw	0
  2040  000CDC  6E0F               	movwf	LCM_Delay@Count,c
  2041  000CDE  0E00               	movlw	0
  2042  000CE0  6E10               	movwf	LCM_Delay@Count+1,c
  2043  000CE2  0E00               	movlw	0
  2044  000CE4  6E11               	movwf	LCM_Delay@Count+2,c
  2045  000CE6  0E00               	movlw	0
  2046  000CE8  6E12               	movwf	LCM_Delay@Count+3,c
  2047  000CEA  ECF0  F006         	call	_LCM_Delay	;wreg free
  2048                           
  2049                           ;APP001_LCM.c: 103: RB3 = 0;
  2050  000CEE  9681               	bcf	3969,3,c	;volatile
  2051                           
  2052                           ;APP001_LCM.c: 104: LCM_Delay(( 16000000L / 4 * 10 ) / 1000000000L / 10);
  2053  000CF0  0E00               	movlw	0
  2054  000CF2  6E0F               	movwf	LCM_Delay@Count,c
  2055  000CF4  0E00               	movlw	0
  2056  000CF6  6E10               	movwf	LCM_Delay@Count+1,c
  2057  000CF8  0E00               	movlw	0
  2058  000CFA  6E11               	movwf	LCM_Delay@Count+2,c
  2059  000CFC  0E00               	movlw	0
  2060  000CFE  6E12               	movwf	LCM_Delay@Count+3,c
  2061  000D00  ECF0  F006         	call	_LCM_Delay	;wreg free
  2062  000D04  0012               	return		;funcret
  2063  000D06                     __end_of_IntLCM_Communication:
  2064                           	opt stack 0
  2065                           tblptru	equ	0xFF8
  2066                           tblptrh	equ	0xFF7
  2067                           tblptrl	equ	0xFF6
  2068                           tablat	equ	0xFF5
  2069                           prodl	equ	0xFF3
  2070                           intcon	equ	0xFF2
  2071                           postinc0	equ	0xFEE
  2072                           wreg	equ	0xFE8
  2073                           postdec1	equ	0xFE5
  2074                           fsr1l	equ	0xFE1
  2075                           status	equ	0xFD8
  2076                           
  2077 ;; *************** function _LCM_Delay *****************
  2078 ;; Defined at:
  2079 ;;		line 61 in file "APP001_LCM.c"
  2080 ;; Parameters:    Size  Location     Type
  2081 ;;  Count           4   14[COMRAM] unsigned long 
  2082 ;; Auto vars:     Size  Location     Type
  2083 ;;  i               2   18[COMRAM] unsigned int 
  2084 ;; Return value:  Size  Location     Type
  2085 ;;		None               void
  2086 ;; Registers used:
  2087 ;;		wreg, status,2, status,0
  2088 ;; Tracked objects:
  2089 ;;		On entry : 0/0
  2090 ;;		On exit  : 0/0
  2091 ;;		Unchanged: 0/0
  2092 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2093 ;;      Params:         4       0       0       0       0       0       0       0       0
  2094 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2095 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2096 ;;      Totals:         6       0       0       0       0       0       0       0       0
  2097 ;;Total ram usage:        6 bytes
  2098 ;; Hardware stack levels used:    1
  2099 ;; Hardware stack levels required when called:    1
  2100 ;; This function calls:
  2101 ;;		Nothing
  2102 ;; This function is called by:
  2103 ;;		_IntLCM_Communication
  2104 ;;		_LCM_Init
  2105 ;; This function uses a non-reentrant model
  2106 ;;
  2107                           
  2108                           	psect	text13
  2109  000DE0                     __ptext13:
  2110                           	opt stack 0
  2111  000DE0                     _LCM_Delay:
  2112                           	opt stack 26
  2113                           
  2114                           ;APP001_LCM.c: 63: unsigned int i = 0;
  2115                           
  2116                           ;incstack = 0
  2117  000DE0  0E00               	movlw	0
  2118  000DE2  6E14               	movwf	LCM_Delay@i+1,c
  2119  000DE4  0E00               	movlw	0
  2120  000DE6  6E13               	movwf	LCM_Delay@i,c
  2121                           
  2122                           ;APP001_LCM.c: 65: while (Count--)
  2123  000DE8  D00C               	goto	l1172
  2124  000DEA                     l1168:
  2125                           
  2126                           ;APP001_LCM.c: 66: {
  2127                           ;APP001_LCM.c: 67: i = 100;
  2128  000DEA  0E00               	movlw	0
  2129  000DEC  6E14               	movwf	LCM_Delay@i+1,c
  2130  000DEE  0E64               	movlw	100
  2131  000DF0  6E13               	movwf	LCM_Delay@i,c
  2132  000DF2                     l1170:
  2133  000DF2  0613               	decf	LCM_Delay@i,f,c
  2134  000DF4  A0D8               	btfss	status,0,c
  2135  000DF6  0614               	decf	LCM_Delay@i+1,f,c
  2136  000DF8  2813               	incf	LCM_Delay@i,w,c
  2137  000DFA  E1FB               	bnz	l1170
  2138  000DFC  2814               	incf	LCM_Delay@i+1,w,c
  2139  000DFE  A4D8               	btfss	status,2,c
  2140  000E00  D7F8               	goto	l1170
  2141  000E02                     l1172:
  2142  000E02  060F               	decf	LCM_Delay@Count,f,c
  2143  000E04  0E00               	movlw	0
  2144  000E06  5A10               	subwfb	LCM_Delay@Count+1,f,c
  2145  000E08  5A11               	subwfb	LCM_Delay@Count+2,f,c
  2146  000E0A  5A12               	subwfb	LCM_Delay@Count+3,f,c
  2147  000E0C  280F               	incf	LCM_Delay@Count,w,c
  2148  000E0E  E1ED               	bnz	l1168
  2149  000E10  2810               	incf	LCM_Delay@Count+1,w,c
  2150  000E12  E1EB               	bnz	l1168
  2151  000E14  2811               	incf	LCM_Delay@Count+2,w,c
  2152  000E16  E1E9               	bnz	l1168
  2153  000E18  2812               	incf	LCM_Delay@Count+3,w,c
  2154  000E1A  B4D8               	btfsc	status,2,c
  2155  000E1C  0012               	return	
  2156  000E1E  D7E5               	goto	l1168
  2157  000E20                     __end_of_LCM_Delay:
  2158                           	opt stack 0
  2159                           tblptru	equ	0xFF8
  2160                           tblptrh	equ	0xFF7
  2161                           tblptrl	equ	0xFF6
  2162                           tablat	equ	0xFF5
  2163                           prodl	equ	0xFF3
  2164                           intcon	equ	0xFF2
  2165                           postinc0	equ	0xFEE
  2166                           wreg	equ	0xFE8
  2167                           postdec1	equ	0xFE5
  2168                           fsr1l	equ	0xFE1
  2169                           status	equ	0xFD8
  2170                           
  2171 ;; *************** function _HighISR *****************
  2172 ;; Defined at:
  2173 ;;		line 137 in file "Lab9 PWM Output By VR Value.c"
  2174 ;; Parameters:    Size  Location     Type
  2175 ;;		None
  2176 ;; Auto vars:     Size  Location     Type
  2177 ;;		None
  2178 ;; Return value:  Size  Location     Type
  2179 ;;		None               void
  2180 ;; Registers used:
  2181 ;;		wreg, status,2
  2182 ;; Tracked objects:
  2183 ;;		On entry : 0/0
  2184 ;;		On exit  : 0/0
  2185 ;;		Unchanged: 0/0
  2186 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2187 ;;      Params:         0       0       0       0       0       0       0       0       0
  2188 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2189 ;;      Temps:         14       0       0       0       0       0       0       0       0
  2190 ;;      Totals:        14       0       0       0       0       0       0       0       0
  2191 ;;Total ram usage:       14 bytes
  2192 ;; Hardware stack levels used:    1
  2193 ;; This function calls:
  2194 ;;		Nothing
  2195 ;; This function is called by:
  2196 ;;		Interrupt level 2
  2197 ;; This function uses a non-reentrant model
  2198 ;;
  2199                           
  2200                           	psect	intcode
  2201  000008                     __pintcode:
  2202                           	opt stack 0
  2203  000008                     _HighISR:
  2204                           	opt stack 26
  2205                           
  2206                           ;incstack = 0
  2207  000008  8240               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  2208  00000A  CFFA F001          	movff	pclath,??_HighISR
  2209  00000E  CFFB F002          	movff	pclatu,??_HighISR+1
  2210  000012  ED09  F006         	call	int_func,f	;refresh shadow registers
  2211                           pclatu	equ	0xFFB
  2212                           pclath	equ	0xFFA
  2213                           tblptru	equ	0xFF8
  2214                           tblptrh	equ	0xFF7
  2215                           tblptrl	equ	0xFF6
  2216                           tablat	equ	0xFF5
  2217                           prodl	equ	0xFF3
  2218                           intcon	equ	0xFF2
  2219                           postinc0	equ	0xFEE
  2220                           wreg	equ	0xFE8
  2221                           postdec1	equ	0xFE5
  2222                           fsr1l	equ	0xFE1
  2223                           status	equ	0xFD8
  2224                           
  2225                           	psect	intcode_body
  2226  000C12                     __pintcode_body:
  2227                           	opt stack 26
  2228  000C12                     int_func:
  2229                           	opt stack 26
  2230  000C12  0006               	pop		; remove dummy address from shadow register refresh
  2231  000C14  CFE9 F003          	movff	fsr0l,??_HighISR+2
  2232  000C18  CFEA F004          	movff	fsr0h,??_HighISR+3
  2233  000C1C  CFE1 F005          	movff	fsr1l,??_HighISR+4
  2234  000C20  CFE2 F006          	movff	fsr1h,??_HighISR+5
  2235  000C24  CFD9 F007          	movff	fsr2l,??_HighISR+6
  2236  000C28  CFDA F008          	movff	fsr2h,??_HighISR+7
  2237  000C2C  CFF3 F009          	movff	prodl,??_HighISR+8
  2238  000C30  CFF4 F00A          	movff	prodh,??_HighISR+9
  2239  000C34  CFF6 F00B          	movff	tblptrl,??_HighISR+10
  2240  000C38  CFF7 F00C          	movff	tblptrh,??_HighISR+11
  2241  000C3C  CFF8 F00D          	movff	tblptru,??_HighISR+12
  2242  000C40  CFF5 F00E          	movff	tablat,??_HighISR+13
  2243                           
  2244                           ;Lab9 PWM Output By VR Value.c: 139: if (TMR0IE && TMR0IF )
  2245  000C44  BAF2               	btfsc	intcon,5,c	;volatile
  2246  000C46  A4F2               	btfss	intcon,2,c	;volatile
  2247  000C48  D006               	goto	i2l77
  2248                           
  2249                           ;Lab9 PWM Output By VR Value.c: 140: {
  2250                           ;Lab9 PWM Output By VR Value.c: 142: TMR0H = ( ( ( 65536 - ( 4000000 / 4 / 256 / 100 )) 
      +                          >> 8 ) & 0xff );
  2251  000C4A  68D7               	setf	4055,c	;volatile
  2252                           
  2253                           ;Lab9 PWM Output By VR Value.c: 143: TMR0L = ( ( 65536 - ( 4000000 / 4 / 256 / 100 )) & 
      +                          0xff );
  2254  000C4C  0ED9               	movlw	217
  2255  000C4E  6ED6               	movwf	4054,c	;volatile
  2256                           
  2257                           ;Lab9 PWM Output By VR Value.c: 144: TMR0IF=0;
  2258  000C50  94F2               	bcf	intcon,2,c	;volatile
  2259                           
  2260                           ;Lab9 PWM Output By VR Value.c: 145: Timer0Flag = 1;
  2261  000C52  0E01               	movlw	1
  2262  000C54  6E38               	movwf	_Timer0Flag,c	;volatile
  2263  000C56                     i2l77:
  2264  000C56  C00E  FFF5         	movff	??_HighISR+13,tablat
  2265  000C5A  C00D  FFF8         	movff	??_HighISR+12,tblptru
  2266  000C5E  C00C  FFF7         	movff	??_HighISR+11,tblptrh
  2267  000C62  C00B  FFF6         	movff	??_HighISR+10,tblptrl
  2268  000C66  C00A  FFF4         	movff	??_HighISR+9,prodh
  2269  000C6A  C009  FFF3         	movff	??_HighISR+8,prodl
  2270  000C6E  C008  FFDA         	movff	??_HighISR+7,fsr2h
  2271  000C72  C007  FFD9         	movff	??_HighISR+6,fsr2l
  2272  000C76  C006  FFE2         	movff	??_HighISR+5,fsr1h
  2273  000C7A  C005  FFE1         	movff	??_HighISR+4,fsr1l
  2274  000C7E  C004  FFEA         	movff	??_HighISR+3,fsr0h
  2275  000C82  C003  FFE9         	movff	??_HighISR+2,fsr0l
  2276  000C86  C002  FFFB         	movff	??_HighISR+1,pclatu
  2277  000C8A  C001  FFFA         	movff	??_HighISR,pclath
  2278  000C8E  9240               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  2279  000C90  0011               	retfie		f
  2280  000C92                     __end_of_HighISR:
  2281                           	opt stack 0
  2282                           pclatu	equ	0xFFB
  2283                           pclath	equ	0xFFA
  2284                           tblptru	equ	0xFF8
  2285                           tblptrh	equ	0xFF7
  2286                           tblptrl	equ	0xFF6
  2287                           tablat	equ	0xFF5
  2288                           prodh	equ	0xFF4
  2289                           prodl	equ	0xFF3
  2290                           intcon	equ	0xFF2
  2291                           postinc0	equ	0xFEE
  2292                           fsr0h	equ	0xFEA
  2293                           fsr0l	equ	0xFE9
  2294                           wreg	equ	0xFE8
  2295                           postdec1	equ	0xFE5
  2296                           fsr1h	equ	0xFE2
  2297                           fsr1l	equ	0xFE1
  2298                           fsr2h	equ	0xFDA
  2299                           fsr2l	equ	0xFD9
  2300                           status	equ	0xFD8
  2301                           pclatu	equ	0xFFB
  2302                           pclath	equ	0xFFA
  2303                           tblptru	equ	0xFF8
  2304                           tblptrh	equ	0xFF7
  2305                           tblptrl	equ	0xFF6
  2306                           tablat	equ	0xFF5
  2307                           prodh	equ	0xFF4
  2308                           prodl	equ	0xFF3
  2309                           intcon	equ	0xFF2
  2310                           postinc0	equ	0xFEE
  2311                           fsr0h	equ	0xFEA
  2312                           fsr0l	equ	0xFE9
  2313                           wreg	equ	0xFE8
  2314                           postdec1	equ	0xFE5
  2315                           fsr1h	equ	0xFE2
  2316                           fsr1l	equ	0xFE1
  2317                           fsr2h	equ	0xFDA
  2318                           fsr2l	equ	0xFD9
  2319                           status	equ	0xFD8
  2320                           
  2321                           	psect	rparam
  2322  0000                     pclatu	equ	0xFFB
  2323                           pclath	equ	0xFFA
  2324                           tblptru	equ	0xFF8
  2325                           tblptrh	equ	0xFF7
  2326                           tblptrl	equ	0xFF6
  2327                           tablat	equ	0xFF5
  2328                           prodh	equ	0xFF4
  2329                           prodl	equ	0xFF3
  2330                           intcon	equ	0xFF2
  2331                           postinc0	equ	0xFEE
  2332                           fsr0h	equ	0xFEA
  2333                           fsr0l	equ	0xFE9
  2334                           wreg	equ	0xFE8
  2335                           postdec1	equ	0xFE5
  2336                           fsr1h	equ	0xFE2
  2337                           fsr1l	equ	0xFE1
  2338                           fsr2h	equ	0xFDA
  2339                           fsr2l	equ	0xFD9
  2340                           status	equ	0xFD8
  2341                           
  2342                           	psect	temp
  2343  000040                     btemp:
  2344                           	opt stack 0
  2345  000040                     	ds	1
  2346  0000                     int$flags	set	btemp
  2347                           pclatu	equ	0xFFB
  2348                           pclath	equ	0xFFA
  2349                           tblptru	equ	0xFF8
  2350                           tblptrh	equ	0xFF7
  2351                           tblptrl	equ	0xFF6
  2352                           tablat	equ	0xFF5
  2353                           prodh	equ	0xFF4
  2354                           prodl	equ	0xFF3
  2355                           intcon	equ	0xFF2
  2356                           postinc0	equ	0xFEE
  2357                           fsr0h	equ	0xFEA
  2358                           fsr0l	equ	0xFE9
  2359                           wreg	equ	0xFE8
  2360                           postdec1	equ	0xFE5
  2361                           fsr1h	equ	0xFE2
  2362                           fsr1l	equ	0xFE1
  2363                           fsr2h	equ	0xFDA
  2364                           fsr2l	equ	0xFD9
  2365                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    11
    Data        7
    BSS         49
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     39      63
    BANK0           160      0      32
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    LCM_PutROMString@String	PTR const unsigned char  size(2) Largest target is 9
		 -> String1(CODE[2]), MyName(CODE[9]), 


Critical Paths under _main in COMRAM

    _main->_LCM_PutNumber
    _LCM_SetCursor->_IntLCM_WriteInstruction
    _IntLCM_WriteInstruction->_IntLCM_Communication
    _LCM_PutROMString->_IntLCM_WriteData
    _LCM_PutNumber->___lwdiv
    ___lwdiv->___lwmod
    _IntLCM_WriteData->_IntLCM_Communication
    _LCM_Init->_IntLCM_Communication
    _IntLCM_Communication->_LCM_Delay

Critical Paths under _HighISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 9     9      0    7510
                                             30 COMRAM     9     9      0
                           _LCM_Init
                      _LCM_PutNumber
                   _LCM_PutROMString
                      _LCM_SetCursor
 ---------------------------------------------------------------------------------
 (1) _LCM_SetCursor                                        2     1      1    1496
                                             23 COMRAM     2     1      1
            _IntLCM_WriteInstruction
 ---------------------------------------------------------------------------------
 (2) _IntLCM_WriteInstruction                              1     1      0    1068
                                             22 COMRAM     1     1      0
               _IntLCM_Communication
                         _LCM_IsBusy
 ---------------------------------------------------------------------------------
 (1) _LCM_PutROMString                                     2     0      2    1305
                                             23 COMRAM     2     0      2
                   _IntLCM_WriteData
 ---------------------------------------------------------------------------------
 (1) _LCM_PutNumber                                        4     1      3    2901
                                             26 COMRAM     4     1      3
                   _IntLCM_WriteData
                   _LCM_BCD_Regulate
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     671
                                             14 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     546
                                             19 COMRAM     7     3      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (2) _LCM_BCD_Regulate                                     1     1      0      30
                                             14 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _IntLCM_WriteData                                     1     1      0    1068
                                             22 COMRAM     1     1      0
               _IntLCM_Communication
                         _LCM_IsBusy
 ---------------------------------------------------------------------------------
 (3) _LCM_IsBusy                                           2     2      0      30
                                             14 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _LCM_Init                                             0     0      0    1808
               _IntLCM_Communication
                          _LCM_Delay
                        _LCM_IOSetup
 ---------------------------------------------------------------------------------
 (2) _LCM_IOSetup                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _IntLCM_Communication                                 2     2      0     994
                                             20 COMRAM     2     2      0
                          _LCM_Delay
 ---------------------------------------------------------------------------------
 (4) _LCM_Delay                                            6     2      4     814
                                             14 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _HighISR                                             14    14      0       0
                                              0 COMRAM    14    14      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCM_Init
     _IntLCM_Communication
       _LCM_Delay
     _LCM_Delay
     _LCM_IOSetup
   _LCM_PutNumber
     _IntLCM_WriteData
       _IntLCM_Communication
         _LCM_Delay
       _LCM_IsBusy
     _LCM_BCD_Regulate
     ___lwdiv
       ___lwmod (ARG)
     ___lwmod
   _LCM_PutROMString
     _IntLCM_WriteData
       _IntLCM_Communication
         _LCM_Delay
       _LCM_IsBusy
   _LCM_SetCursor
     _IntLCM_WriteInstruction
       _IntLCM_Communication
         _LCM_Delay
       _LCM_IsBusy

 _HighISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      20       5       20.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     27      3F       1       67.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      5F      20        0.0%
DATA                 0      0      5F       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Tue Sep 08 16:25:25 2015

                                 _h 0030                                   _m 0034  
                                 _s 0036                                  l61 093E  
                       __CFG_BORV$1 000000                                 l176 0B66  
                               l177 0B9C                                 l910 0ECE  
                               l583 0D4E                                 l593 0DD6  
                               l850 0EF4                                 l842 0EE2  
                               l906 0ECA                                 _RC0 007C10  
                               _RB3 007C0B                                 _RB4 007C0C  
                               _RB5 007C0D                                 _RD4 007C1C  
                               _RD5 007C1D                                 _RD6 007C1E  
                               _RD7 007C1F                                 u600 0888  
                               u610 089A                                 u700 0948  
                               u630 0904                                 u720 0966  
                               u640 0906                                 u730 097E  
                               u650 0918                                 u660 0920  
                               u670 0922                                 u590 0886  
                               u760 09A8                                 u770 09C0  
                               u690 0946                         ?_LCM_IsBusy 0001  
                               wreg 000FE8                        __CFG_FOSC$HS 000000  
                      ?_LCM_IOSetup 0001                        __CFG_LVP$OFF 000000  
                      __CFG_WDT$OFF 000000                                l1220 0E72  
                              l1214 0E96                                l1230 0D1C  
                              l1232 0D24                                l1170 0DF2  
                              l1242 0D44                                l1234 0D28  
                              l1250 0DAC                                l1322 0E36  
                              l1402 0972                                l1172 0E02  
                              l1252 0DB4                                l1420 09B4  
                              l1254 0DB8                                l1326 0B30  
                              l1334 0BFA                                l1318 0E22  
                              l1414 099C                                l1168 0DEA  
                              l1328 0BD2                                l1424 09C8  
                              l1408 098A                                l1258 0DCC  
                              l1380 08A6                                l1390 0936  
                              l1376 087E                                l1396 095A  
                              _LATD 000F8C                                i2l77 0C56  
                              _Duty 002C                        _StringBuffer 0060  
                              _main 080E                                fsr0h 000FEA  
                              fsr1h 000FE2                                fsr0l 000FE9  
                              fsr2h 000FDA                                fsr1l 000FE1  
                              fsr2l 000FD9                                btemp 0040  
                              pclat 000FFA                                prodh 000FF4  
                              prodl 000FF3                                start 0016  
                __size_of_LCM_Delay 0040                     __end_of_HighISR 0C92  
                     __CFG_MCLRE$ON 000000            __end_of_LCM_BCD_Regulate 0EDA  
                      ___param_bank 000010              __size_of_LCM_SetCursor 0012  
                  __end_of_LCM_Init 0B2A                               ?_main 0001  
                   __end_of_String1 080C                     __end_of___lwdiv 0D58  
                   __end_of___lwmod 0DE0                               _TMR0H 000FD7  
                             _TMR0L 000FD6                               _TRISD 000F95  
            __size_of_LCM_PutNumber 00E8                               tablat 000FF5  
         __size_of_IntLCM_WriteData 0024                               status 000FD8  
               __size_of_LCM_IsBusy 001E                  LCM_PutNumber@Digit 001D  
                       LCM_IsBusy@i 000F                     __initialization 0D58  
                      __end_of_main 0A18                              ??_main 001F  
                     __activetblptr 000002      IntLCM_Communication@NibbleByte 0015  
                 __end_of_LCM_Delay 0E20              LCM_PutNumber@Temporary 001E  
                     _LCM_SetCursor 0EF8                           ??_HighISR 0001  
                            _TMR0IE 007F95                              _TMR0IF 007F92  
                     _LCM_PutNumber 0B2A                          _Timer0Flag 0038  
                            _MyName 0801                      __CFG_XINST$OFF 000000  
                         ??___lwdiv 0018                           ??___lwmod 0013  
                            clear_0 0D5E                              clear_1 0D6A  
                    LCM_SetCursor@X 0019                      LCM_SetCursor@Y 0018  
                      __pdataCOMRAM 0039                        __mediumconst 0000  
                            tblptrh 000FF7                              tblptrl 000FF6  
                            tblptru 000FF8                      ?_LCM_SetCursor 0018  
              __size_of_LCM_IOSetup 0026                          __accesstop 0060  
           __end_of__initialization 0D90                     __CFG_PBADEN$OFF 000000  
                         ?_LCM_Init 0001                       ___rparam_used 000001  
                    ?_LCM_PutNumber 001B           __size_of_LCM_PutROMString 002A  
                    __pcstackCOMRAM 0001                 LCM_PutNumber@Number 001B  
                      ??_LCM_IsBusy 000F            ?_IntLCM_WriteInstruction 0001  
     __size_of_IntLCM_Communication 0074                          __pbssBANK0 0060  
                  _IntLCM_WriteData 0E94                        _Disable_Zero 003F  
                        ??_LCM_Init 0017                  __end_of_LCM_IsBusy 0EF8  
                 ?_LCM_BCD_Regulate 0001                  ??_LCM_BCD_Regulate 000F  
                   ??_LCM_SetCursor 0019                             _HighISR 0008  
                   ??_LCM_PutNumber 001E                             __Hparam 0000  
                           __Lparam 0000                             _String1 080A  
                           ___lwdiv 0D06                             ___lwmod 0D9E  
                      __psmallconst 0800                             __pcinit 0D58  
                           __ramtop 0800                             __ptext0 080E  
                           __ptext1 0EF8                             __ptext2 0E70  
                           __ptext3 0E20                             __ptext4 0B2A  
                           __ptext5 0D9E                             __ptext6 0D06  
                           __ptext7 0EB8                             __ptext8 0E94  
                           __ptext9 0EDA     __end_of_IntLCM_WriteInstruction 0E94  
                         _T0CONbits 000FD5                      __pintcode_body 0C12  
              end_of_initialization 0D90                           _LCM_Delay 0DE0  
                     __Lmediumconst 0000                             int_func 0C12  
                  _LCM_PutROMString 0E20                             postdec1 000FE5  
                           postinc0 000FEE                           _TRISBbits 000F93  
                         _TRISCbits 000F94                           _TRISDbits 000F95  
                        ?_LCM_Delay 000F                   __size_of_LCM_Init 0112  
                    __end_of_MyName 080A                       __pidataCOMRAM 0F0A  
          __end_of_IntLCM_WriteData 0EB8                          LCM_Delay@i 0013  
               start_initialization 0D58                       ??_LCM_IOSetup 000F  
                     _debounceDelay 0039    __size_of_IntLCM_WriteInstruction 0024  
            LCM_PutROMString@String 0018        __end_of_IntLCM_Communication 0D06  
               LCM_BCD_Regulate@BCD 000F                  __CFG_BOR$ON_ACTIVE 000000  
                       __pbssCOMRAM 0028                     _lastButtonState 0032  
         __size_of_LCM_BCD_Regulate 0022                         ??_LCM_Delay 0013  
               __end_of_LCM_IOSetup 0E70                            ?_HighISR 0001  
                  ___lwdiv@dividend 0014                           __pintcode 0008  
                          ?___lwdiv 0014                            ?___lwmod 000F  
              IntLCM_WriteData@Data 0017                         __smallconst 0800  
          __end_of_LCM_PutROMString 0E4A               __end_of_LCM_SetCursor 0F0A  
                  ___lwdiv@quotient 0018                            _LATCbits 000F8B  
                          _LCM_Init 0A18               __end_of_LCM_PutNumber 0C12  
                        _ADCON1bits 000FC1                         _LCM_IOSetup 0E4A  
IntLCM_WriteInstruction@Instruction 0017                           copy_data0 0D84  
              _IntLCM_Communication 0C92             _IntLCM_WriteInstruction 0E70  
                  __size_of_HighISR 0C8A                            __Hrparam 0000  
                          __Lrparam 0000                    __size_of___lwdiv 0052  
                  __size_of___lwmod 0042                   ?_IntLCM_WriteData 0001  
     IntLCM_Communication@Temporary 0016                         _buttonState 002E  
                ??_IntLCM_WriteData 0017                    _LCM_BCD_Regulate 0EB8  
                   ___lwdiv@divisor 0016                     ___lwdiv@counter 001A  
                          __ptext10 0A18                            __ptext11 0E4A  
                          __ptext12 0C92                            __ptext13 0DE0  
                          _ledState 003D               ?_IntLCM_Communication 0001  
                     __size_of_main 020A                            int$flags 0040  
                        _LCM_IsBusy 0EDA                          _INTCONbits 000FF2  
                  _lastDebounceTime 0028           ??_IntLCM_WriteInstruction 0017  
                          intlevel2 0000                    ___lwmod@dividend 000F  
                   ___lwmod@divisor 0011                     ___lwmod@counter 0013  
                    LCM_Delay@Count 000F                   ?_LCM_PutROMString 0018  
            ??_IntLCM_Communication 0015                  ??_LCM_PutROMString 001A  
