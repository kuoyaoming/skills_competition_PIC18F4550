

Microchip Technology PIC18 LITE Macro Assembler V1.35 build -356382666 
                                                                                               Mon Oct 26 21:23:34 2015

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    18                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    19                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    20                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    21                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    22  0000                     
    23                           	psect	idataCOMRAM
    24  0012A4                     __pidataCOMRAM:
    25                           	opt stack 0
    26                           
    27                           ;initializer for _ScanLine
    28  0012A4  01                 	db	1
    29  0012A5  02                 	db	2
    30  0012A6  04                 	db	4
    31  0012A7  08                 	db	8
    32                           
    33                           	psect	smallconst
    34  000800                     __psmallconst:
    35                           	opt stack 0
    36  000800  00                 	db	0
    37  000801                     _MQ:
    38                           	opt stack 0
    39  000801  01                 	db	1
    40  000802  02                 	db	2
    41  000803  04                 	db	4
    42  000804  08                 	db	8
    43  000805  00                 	db	0
    44  000806  00                 	db	0
    45  000807  00                 	db	0
    46  000808  00                 	db	0
    47  000809  00                 	db	0
    48  00080A  00                 	db	0
    49  00080B  00                 	db	0
    50  00080C  00                 	db	0
    51  00080D  00                 	db	0
    52  00080E  00                 	db	0
    53  00080F  00                 	db	0
    54  000810  00                 	db	0
    55  000811  08                 	db	8
    56  000812  00                 	db	0
    57  000813  00                 	db	0
    58  000814  00                 	db	0
    59  000815  00                 	db	0
    60  000816  00                 	db	0
    61  000817  00                 	db	0
    62  000818  01                 	db	1
    63  000819  00                 	db	0
    64  00081A  00                 	db	0
    65  00081B  00                 	db	0
    66  00081C  00                 	db	0
    67  00081D  00                 	db	0
    68  00081E  08                 	db	8
    69  00081F  00                 	db	0
    70  000820  00                 	db	0
    71  000821  00                 	db	0
    72  000822  00                 	db	0
    73  000823  01                 	db	1
    74  000824  00                 	db	0
    75  000825  00                 	db	0
    76  000826  00                 	db	0
    77  000827  00                 	db	0
    78  000828  00                 	db	0
    79  000829  00                 	db	0
    80  00082A  00                 	db	0
    81  00082B  08                 	db	8
    82  00082C  10                 	db	16
    83  00082D  20                 	db	32
    84  00082E  01                 	db	1
    85  00082F  00                 	db	0
    86  000830  00                 	db	0
    87  000831                     __end_of_MQ:
    88                           	opt stack 0
    89  000831                     _LED:
    90                           	opt stack 0
    91  000831  3F                 	db	63
    92  000832  06                 	db	6
    93  000833  5B                 	db	91
    94  000834  4F                 	db	79
    95  000835  66                 	db	102
    96  000836  6D                 	db	109
    97  000837  7D                 	db	125
    98  000838  07                 	db	7
    99  000839  7F                 	db	127
   100  00083A  6F                 	db	111
   101  00083B  BF                 	db	191
   102  00083C  86                 	db	134
   103  00083D  DB                 	db	219
   104  00083E  CF                 	db	207
   105  00083F  E6                 	db	230
   106  000840  ED                 	db	237
   107  000841  FD                 	db	253
   108  000842  87                 	db	135
   109  000843  FF                 	db	255
   110  000844  EF                 	db	239
   111  000845                     __end_of_LED:
   112                           	opt stack 0
   113  000845                     _KeyMap:
   114                           	opt stack 0
   115  000845  01                 	db	1
   116  000846  05                 	db	5
   117  000847  09                 	db	9
   118  000848  0D                 	db	13
   119  000849  02                 	db	2
   120  00084A  06                 	db	6
   121  00084B  0A                 	db	10
   122  00084C  0E                 	db	14
   123  00084D  03                 	db	3
   124  00084E  07                 	db	7
   125  00084F  0B                 	db	11
   126  000850  0F                 	db	15
   127  000851  04                 	db	4
   128  000852  08                 	db	8
   129  000853  0C                 	db	12
   130  000854  00                 	db	0
   131  000855                     __end_of_KeyMap:
   132                           	opt stack 0
   133  0000                     _LATB	set	3978
   134  0000                     _LATD	set	3980
   135  0000                     _PORTB	set	3969
   136  0000                     _PORTD	set	3971
   137  0000                     _PORTE	set	3972
   138  0000                     _TRISAbits	set	3986
   139  0000                     _TRISD	set	3989
   140  0000                     _TRISB0	set	31896
   141  0000                     _TRISB1	set	31897
   142  0000                     _TRISB2	set	31898
   143  0000                     _TRISB3	set	31899
   144  0000                     _TRISB4	set	31900
   145  0000                     _TRISB5	set	31901
   146  0000                     _TRISB6	set	31902
   147  0000                     _TRISB7	set	31903
   148  0000                     _TRISC6	set	31910
   149  0000                     _TRISC7	set	31911
   150  0000                     _TRISE0	set	31920
   151  0000                     _TRISE1	set	31921
   152  0000                     _TRISE2	set	31922
   153  0000                     _ADCON1	set	4033
   154  0000                     _T0CONbits	set	4053
   155  0000                     _TMR0H	set	4055
   156  0000                     _TMR0L	set	4054
   157  0000                     _INTCONbits	set	4082
   158  0000                     _TMR0IE	set	32661
   159  0000                     _TMR0IF	set	32658
   160                           
   161                           ; #config settings
   162  000855  00                 	db	0	; dummy byte at the end
   163  0000                     
   164                           	psect	cinit
   165  00126A                     __pcinit:
   166                           	opt stack 0
   167  00126A                     start_initialization:
   168                           	opt stack 0
   169  00126A                     __initialization:
   170                           	opt stack 0
   171                           
   172                           ; Clear objects allocated to COMRAM (45 bytes)
   173  00126A  EE00  F001         	lfsr	0,__pbssCOMRAM
   174  00126E  0E2D               	movlw	45
   175  001270                     clear_0:
   176  001270  6AEE               	clrf	postinc0,c
   177  001272  06E8               	decf	wreg,f,c
   178  001274  E1FD               	bnz	clear_0
   179                           
   180                           ; Initialize objects allocated to COMRAM (4 bytes)
   181                           ; load TBLPTR registers with __pidataCOMRAM
   182  001276  0EA4               	movlw	low __pidataCOMRAM
   183  001278  6EF6               	movwf	tblptrl,c
   184  00127A  0E12               	movlw	high __pidataCOMRAM
   185  00127C  6EF7               	movwf	tblptrh,c
   186  00127E  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   187  001280  6EF8               	movwf	tblptru,c
   188  001282  EE00  F04A         	lfsr	0,__pdataCOMRAM
   189  001286  EE10 F004          	lfsr	1,4
   190  00128A                     copy_data0:
   191  00128A  0009               	tblrd		*+
   192  00128C  CFF5 FFEE          	movff	tablat,postinc0
   193  001290  50E5               	movf	postdec1,w,c
   194  001292  50E1               	movf	fsr1l,w,c
   195  001294  E1FA               	bnz	copy_data0
   196  001296                     end_of_initialization:
   197                           	opt stack 0
   198  001296                     __end_of__initialization:
   199                           	opt stack 0
   200  001296  904E               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   201  001298  924E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   202  00129A  0E00               	movlw	low (__Lmediumconst shr (0+16))
   203  00129C  6EF8               	movwf	tblptru,c
   204  00129E  0100               	movlb	0
   205  0012A0  EF2B  F004         	goto	_main	;jump to C main() function
   206                           tblptru	equ	0xFF8
   207                           tblptrh	equ	0xFF7
   208                           tblptrl	equ	0xFF6
   209                           tablat	equ	0xFF5
   210                           postinc0	equ	0xFEE
   211                           wreg	equ	0xFE8
   212                           postdec1	equ	0xFE5
   213                           fsr1l	equ	0xFE1
   214                           
   215                           	psect	bssCOMRAM
   216  000001                     __pbssCOMRAM:
   217                           	opt stack 0
   218  000001                     _disp:
   219                           	opt stack 0
   220  000001                     	ds	4
   221  000005                     _Timer250m:
   222                           	opt stack 0
   223  000005                     	ds	2
   224  000007                     _a:
   225                           	opt stack 0
   226  000007                     	ds	2
   227  000009                     _col:
   228                           	opt stack 0
   229  000009                     	ds	2
   230  00000B                     _e:
   231                           	opt stack 0
   232  00000B                     	ds	2
   233  00000D                     _ggg:
   234                           	opt stack 0
   235  00000D                     	ds	2
   236  00000F                     _hur:
   237                           	opt stack 0
   238  00000F                     	ds	2
   239  000011                     _i:
   240                           	opt stack 0
   241  000011                     	ds	2
   242  000013                     _inval:
   243                           	opt stack 0
   244  000013                     	ds	2
   245  000015                     _kcode:
   246                           	opt stack 0
   247  000015                     	ds	2
   248  000017                     _keypress:
   249                           	opt stack 0
   250  000017                     	ds	2
   251  000019                     _min:
   252                           	opt stack 0
   253  000019                     	ds	2
   254  00001B                     _mq:
   255                           	opt stack 0
   256  00001B                     	ds	2
   257  00001D                     _r:
   258                           	opt stack 0
   259  00001D                     	ds	2
   260  00001F                     _row:
   261                           	opt stack 0
   262  00001F                     	ds	2
   263  000021                     _rowkey:
   264                           	opt stack 0
   265  000021                     	ds	2
   266  000023                     _rrr:
   267                           	opt stack 0
   268  000023                     	ds	2
   269  000025                     _sec:
   270                           	opt stack 0
   271  000025                     	ds	2
   272  000027                     _t:
   273                           	opt stack 0
   274  000027                     	ds	2
   275  000029                     _OutPortB:
   276                           	opt stack 0
   277  000029                     	ds	1
   278  00002A                     _T0Flag:
   279                           	opt stack 0
   280  00002A                     	ds	1
   281  00002B                     _Timer10m:
   282                           	opt stack 0
   283  00002B                     	ds	1
   284  00002C                     _Timer500m:
   285                           	opt stack 0
   286  00002C                     	ds	1
   287  00002D                     _pwmbuf:
   288                           	opt stack 0
   289  00002D                     	ds	1
   290                           tblptru	equ	0xFF8
   291                           tblptrh	equ	0xFF7
   292                           tblptrl	equ	0xFF6
   293                           tablat	equ	0xFF5
   294                           postinc0	equ	0xFEE
   295                           wreg	equ	0xFE8
   296                           postdec1	equ	0xFE5
   297                           fsr1l	equ	0xFE1
   298                           
   299                           	psect	dataCOMRAM
   300  00004A                     __pdataCOMRAM:
   301                           	opt stack 0
   302  00004A                     _ScanLine:
   303                           	opt stack 0
   304  00004A                     	ds	4
   305                           tblptru	equ	0xFF8
   306                           tblptrh	equ	0xFF7
   307                           tblptrl	equ	0xFF6
   308                           tablat	equ	0xFF5
   309                           postinc0	equ	0xFEE
   310                           wreg	equ	0xFE8
   311                           postdec1	equ	0xFE5
   312                           fsr1l	equ	0xFE1
   313                           
   314                           	psect	cstackBANK0
   315  000060                     __pcstackBANK0:
   316                           	opt stack 0
   317  000060                     ??_main:
   318                           
   319                           ; 0 bytes @ 0x0
   320  000060                     	ds	4
   321                           tblptru	equ	0xFF8
   322                           tblptrh	equ	0xFF7
   323                           tblptrl	equ	0xFF6
   324                           tablat	equ	0xFF5
   325                           postinc0	equ	0xFEE
   326                           wreg	equ	0xFE8
   327                           postdec1	equ	0xFE5
   328                           fsr1l	equ	0xFE1
   329                           
   330                           	psect	cstackCOMRAM
   331  00002E                     __pcstackCOMRAM:
   332                           	opt stack 0
   333  00002E                     ??_HighISR:
   334                           
   335                           ; 0 bytes @ 0x0
   336  00002E                     	ds	14
   337  00003C                     ?___awdiv:
   338                           	opt stack 0
   339  00003C                     ?___lwdiv:
   340                           	opt stack 0
   341  00003C                     ___awdiv@dividend:
   342                           	opt stack 0
   343  00003C                     ___lwdiv@dividend:
   344                           	opt stack 0
   345                           
   346                           ; 2 bytes @ 0xE
   347  00003C                     	ds	2
   348  00003E                     ___awdiv@divisor:
   349                           	opt stack 0
   350  00003E                     ___lwdiv@divisor:
   351                           	opt stack 0
   352                           
   353                           ; 2 bytes @ 0x10
   354  00003E                     	ds	2
   355  000040                     ___awdiv@counter:
   356                           	opt stack 0
   357  000040                     ___lwdiv@quotient:
   358                           	opt stack 0
   359                           
   360                           ; 2 bytes @ 0x12
   361  000040                     	ds	1
   362  000041                     ___awdiv@sign:
   363                           	opt stack 0
   364                           
   365                           ; 1 bytes @ 0x13
   366  000041                     	ds	1
   367  000042                     ___lwdiv@counter:
   368                           	opt stack 0
   369  000042                     ___awdiv@quotient:
   370                           	opt stack 0
   371                           
   372                           ; 2 bytes @ 0x14
   373  000042                     	ds	1
   374  000043                     ?___lwmod:
   375                           	opt stack 0
   376  000043                     ___lwmod@dividend:
   377                           	opt stack 0
   378                           
   379                           ; 2 bytes @ 0x15
   380  000043                     	ds	1
   381  000044                     ?___awmod:
   382                           	opt stack 0
   383  000044                     ___awmod@dividend:
   384                           	opt stack 0
   385                           
   386                           ; 2 bytes @ 0x16
   387  000044                     	ds	1
   388  000045                     ___lwmod@divisor:
   389                           	opt stack 0
   390                           
   391                           ; 2 bytes @ 0x17
   392  000045                     	ds	1
   393  000046                     ___awmod@divisor:
   394                           	opt stack 0
   395                           
   396                           ; 2 bytes @ 0x18
   397  000046                     	ds	1
   398  000047                     ___lwmod@counter:
   399                           	opt stack 0
   400                           
   401                           ; 1 bytes @ 0x19
   402  000047                     	ds	1
   403  000048                     ___awmod@counter:
   404                           	opt stack 0
   405                           
   406                           ; 1 bytes @ 0x1A
   407  000048                     	ds	1
   408  000049                     ___awmod@sign:
   409                           	opt stack 0
   410                           
   411                           ; 1 bytes @ 0x1B
   412  000049                     	ds	1
   413                           tblptru	equ	0xFF8
   414                           tblptrh	equ	0xFF7
   415                           tblptrl	equ	0xFF6
   416                           tablat	equ	0xFF5
   417                           postinc0	equ	0xFEE
   418                           wreg	equ	0xFE8
   419                           postdec1	equ	0xFE5
   420                           fsr1l	equ	0xFE1
   421                           
   422 ;;
   423 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   424 ;;
   425 ;; *************** function _main *****************
   426 ;; Defined at:
   427 ;;		line 70 in file "4-7seg.c"
   428 ;; Parameters:    Size  Location     Type
   429 ;;		None
   430 ;; Auto vars:     Size  Location     Type
   431 ;;		None
   432 ;; Return value:  Size  Location     Type
   433 ;;		None               void
   434 ;; Registers used:
   435 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   436 ;; Tracked objects:
   437 ;;		On entry : 0/0
   438 ;;		On exit  : 0/0
   439 ;;		Unchanged: 0/0
   440 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   441 ;;      Params:         0       0       0       0       0       0       0       0       0
   442 ;;      Locals:         0       0       0       0       0       0       0       0       0
   443 ;;      Temps:          0       4       0       0       0       0       0       0       0
   444 ;;      Totals:         0       4       0       0       0       0       0       0       0
   445 ;;Total ram usage:        4 bytes
   446 ;; Hardware stack levels required when called:    2
   447 ;; This function calls:
   448 ;;		___awdiv
   449 ;;		___awmod
   450 ;;		___lwdiv
   451 ;;		___lwmod
   452 ;; This function is called by:
   453 ;;		Startup code after reset
   454 ;; This function uses a non-reentrant model
   455 ;;
   456                           
   457                           	psect	text0
   458  000856                     __ptext0:
   459                           	opt stack 0
   460  000856                     _main:
   461                           	opt stack 29
   462                           
   463                           ;4-7seg.c: 73: ADCON1=0x0A;
   464                           
   465                           ;incstack = 0
   466  000856  0E0A               	movlw	10
   467  000858  6EC1               	movwf	4033,c	;volatile
   468                           
   469                           ;4-7seg.c: 74: T0CONbits.T08BIT = 0;
   470  00085A  9CD5               	bcf	4053,6,c	;volatile
   471                           
   472                           ;4-7seg.c: 75: T0CONbits.T0CS = 0;
   473  00085C  9AD5               	bcf	4053,5,c	;volatile
   474                           
   475                           ;4-7seg.c: 76: T0CONbits.T0SE = 0;
   476  00085E  98D5               	bcf	4053,4,c	;volatile
   477                           
   478                           ;4-7seg.c: 77: T0CONbits.PSA = 0;
   479  000860  96D5               	bcf	4053,3,c	;volatile
   480                           
   481                           ;4-7seg.c: 78: T0CONbits.T0PS = 0x07;
   482  000862  80D5               	bsf	4053,0,c	;volatile
   483  000864  82D5               	bsf	4053,1,c	;volatile
   484  000866  84D5               	bsf	4053,2,c	;volatile
   485                           
   486                           ;4-7seg.c: 79: ((void)(TMR0H=((65536-788)>>8),TMR0L=((65536-788)&0xFF)));
   487  000868  0EFC               	movlw	252
   488  00086A  6ED7               	movwf	4055,c	;volatile
   489  00086C  0EEC               	movlw	236
   490  00086E  6ED6               	movwf	4054,c	;volatile
   491                           
   492                           ;4-7seg.c: 80: T0CONbits.TMR0ON = 1;
   493  000870  8ED5               	bsf	4053,7,c	;volatile
   494                           
   495                           ;4-7seg.c: 81: INTCONbits.TMR0IF = 0;
   496  000872  94F2               	bcf	intcon,2,c	;volatile
   497                           
   498                           ;4-7seg.c: 82: INTCONbits.TMR0IE = 1;
   499  000874  8AF2               	bsf	intcon,5,c	;volatile
   500                           
   501                           ;4-7seg.c: 83: INTCONbits.PEIE = 1;
   502  000876  8CF2               	bsf	intcon,6,c	;volatile
   503                           
   504                           ;4-7seg.c: 84: INTCONbits.GIE = 1;
   505  000878  8EF2               	bsf	intcon,7,c	;volatile
   506                           
   507                           ;4-7seg.c: 88: ADCON1=0x0A;
   508  00087A  0E0A               	movlw	10
   509  00087C  6EC1               	movwf	4033,c	;volatile
   510                           
   511                           ;4-7seg.c: 89: TRISB0= 0;
   512  00087E  9093               	bcf	3987,0,c	;volatile
   513                           
   514                           ;4-7seg.c: 90: TRISB1= 0;
   515  000880  9293               	bcf	3987,1,c	;volatile
   516                           
   517                           ;4-7seg.c: 91: TRISB2= 0;
   518  000882  9493               	bcf	3987,2,c	;volatile
   519                           
   520                           ;4-7seg.c: 92: TRISB3= 0;
   521  000884  9693               	bcf	3987,3,c	;volatile
   522                           
   523                           ;4-7seg.c: 93: TRISB4= 1;
   524  000886  8893               	bsf	3987,4,c	;volatile
   525                           
   526                           ;4-7seg.c: 94: TRISB5= 1;
   527  000888  8A93               	bsf	3987,5,c	;volatile
   528                           
   529                           ;4-7seg.c: 95: TRISB6= 1;
   530  00088A  8C93               	bsf	3987,6,c	;volatile
   531                           
   532                           ;4-7seg.c: 96: TRISB7= 1;
   533  00088C  8E93               	bsf	3987,7,c	;volatile
   534                           
   535                           ;4-7seg.c: 97: TRISC6= 0;
   536  00088E  9C94               	bcf	3988,6,c	;volatile
   537                           
   538                           ;4-7seg.c: 98: TRISC7=0;
   539  000890  9E94               	bcf	3988,7,c	;volatile
   540                           
   541                           ;4-7seg.c: 99: TRISD = 0;
   542  000892  0E00               	movlw	0
   543  000894  6E95               	movwf	3989,c	;volatile
   544                           
   545                           ;4-7seg.c: 100: TRISE0= 1;
   546  000896  8096               	bsf	3990,0,c	;volatile
   547                           
   548                           ;4-7seg.c: 101: TRISE1= 1;
   549  000898  8296               	bsf	3990,1,c	;volatile
   550                           
   551                           ;4-7seg.c: 102: TRISE2= 1;
   552  00089A  8496               	bsf	3990,2,c	;volatile
   553                           
   554                           ;4-7seg.c: 105: TRISAbits.TRISA1= 1;
   555  00089C  8292               	bsf	3986,1,c	;volatile
   556  00089E                     l113:
   557                           
   558                           ;4-7seg.c: 107: {
   559                           ;4-7seg.c: 109: if (Timer10m)
   560  00089E  502B               	movf	_Timer10m,w,c
   561  0008A0  B4D8               	btfsc	status,2,c
   562  0008A2  D085               	goto	l1607
   563                           
   564                           ;4-7seg.c: 110: {
   565                           ;4-7seg.c: 111: Timer10m = 0;
   566  0008A4  0E00               	movlw	0
   567  0008A6  6E2B               	movwf	_Timer10m,c
   568                           
   569                           ;4-7seg.c: 112: LATD = 0xff;
   570  0008A8  688C               	setf	3980,c	;volatile
   571                           
   572                           ;4-7seg.c: 113: LATB = OutPortB | 0x0f;
   573  0008AA  5029               	movf	_OutPortB,w,c
   574  0008AC  090F               	iorlw	15
   575  0008AE  6E8A               	movwf	3978,c	;volatile
   576                           
   577                           ;4-7seg.c: 114: keypress=0;
   578  0008B0  0E00               	movlw	0
   579  0008B2  6E18               	movwf	_keypress+1,c
   580  0008B4  0E00               	movlw	0
   581  0008B6  6E17               	movwf	_keypress,c
   582                           
   583                           ;4-7seg.c: 115: for(col=0;col<4;col++)
   584  0008B8  0E00               	movlw	0
   585  0008BA  6E0A               	movwf	_col+1,c
   586  0008BC  0E00               	movlw	0
   587  0008BE  6E09               	movwf	_col,c
   588  0008C0                     l1569:
   589  0008C0  500A               	movf	_col+1,w,c
   590  0008C2  E16D               	bnz	l1603
   591  0008C4  0E04               	movlw	4
   592  0008C6  5C09               	subwf	_col,w,c
   593  0008C8  B0D8               	btfsc	status,0,c
   594  0008CA  D069               	goto	l1603
   595                           
   596                           ;4-7seg.c: 116: {
   597                           ;4-7seg.c: 117: LATB= ~ScanLine[col];
   598  0008CC  0E4A               	movlw	low _ScanLine
   599  0008CE  2409               	addwf	_col,w,c
   600  0008D0  6ED9               	movwf	fsr2l,c
   601  0008D2  0E00               	movlw	high _ScanLine
   602  0008D4  200A               	addwfc	_col+1,w,c
   603  0008D6  6EDA               	movwf	fsr2h,c
   604  0008D8  50DF               	movf	indf2,w,c
   605  0008DA  0AFF               	xorlw	255
   606  0008DC  6E8A               	movwf	3978,c	;volatile
   607                           
   608                           ;4-7seg.c: 118: LATB= ~ScanLine[col];
   609  0008DE  0E4A               	movlw	low _ScanLine
   610  0008E0  2409               	addwf	_col,w,c
   611  0008E2  6ED9               	movwf	fsr2l,c
   612  0008E4  0E00               	movlw	high _ScanLine
   613  0008E6  200A               	addwfc	_col+1,w,c
   614  0008E8  6EDA               	movwf	fsr2h,c
   615  0008EA  50DF               	movf	indf2,w,c
   616  0008EC  0AFF               	xorlw	255
   617  0008EE  6E8A               	movwf	3978,c	;volatile
   618                           
   619                           ;4-7seg.c: 119: rowkey= (~PORTB) & 0xf0;
   620  0008F0  5081               	movf	3969,w,c	;volatile
   621  0008F2  0AFF               	xorlw	255
   622  0008F4  0100               	movlb	0	; () banked
   623  0008F6  6F60               	movwf	??_main& (0+255),b
   624  0008F8  0EF0               	movlw	240
   625  0008FA  0100               	movlb	0	; () banked
   626  0008FC  1760               	andwf	??_main& (0+255),f,b
   627  0008FE  0100               	movlb	0	; () banked
   628  000900  5160               	movf	??_main& (0+255),w,b
   629  000902  6E21               	movwf	_rowkey,c
   630  000904  6A22               	clrf	_rowkey+1,c
   631                           
   632                           ; BSR set to: 0
   633                           ;4-7seg.c: 120: if(rowkey !=0)
   634  000906  5021               	movf	_rowkey,w,c
   635  000908  1022               	iorwf	_rowkey+1,w,c
   636  00090A  B4D8               	btfsc	status,2,c
   637  00090C  D045               	goto	l1599
   638                           
   639                           ; BSR set to: 0
   640                           ;4-7seg.c: 121: {
   641                           ;4-7seg.c: 122: if (rowkey==0x10) row=0;
   642  00090E  0E10               	movlw	16
   643  000910  1821               	xorwf	_rowkey,w,c
   644  000912  1022               	iorwf	_rowkey+1,w,c
   645  000914  A4D8               	btfss	status,2,c
   646  000916  D004               	goto	l1583
   647                           
   648                           ; BSR set to: 0
   649  000918  0E00               	movlw	0
   650  00091A  6E20               	movwf	_row+1,c
   651  00091C  0E00               	movlw	0
   652  00091E  6E1F               	movwf	_row,c
   653  000920                     l1583:
   654                           
   655                           ; BSR set to: 0
   656                           ;4-7seg.c: 123: if (rowkey==0x20) row=1;
   657  000920  0E20               	movlw	32
   658  000922  1821               	xorwf	_rowkey,w,c
   659  000924  1022               	iorwf	_rowkey+1,w,c
   660  000926  A4D8               	btfss	status,2,c
   661  000928  D004               	goto	l1587
   662                           
   663                           ; BSR set to: 0
   664  00092A  0E00               	movlw	0
   665  00092C  6E20               	movwf	_row+1,c
   666  00092E  0E01               	movlw	1
   667  000930  6E1F               	movwf	_row,c
   668  000932                     l1587:
   669                           
   670                           ; BSR set to: 0
   671                           ;4-7seg.c: 124: if (rowkey==0x40) row=2;
   672  000932  0E40               	movlw	64
   673  000934  1821               	xorwf	_rowkey,w,c
   674  000936  1022               	iorwf	_rowkey+1,w,c
   675  000938  A4D8               	btfss	status,2,c
   676  00093A  D004               	goto	l1591
   677                           
   678                           ; BSR set to: 0
   679  00093C  0E00               	movlw	0
   680  00093E  6E20               	movwf	_row+1,c
   681  000940  0E02               	movlw	2
   682  000942  6E1F               	movwf	_row,c
   683  000944                     l1591:
   684                           
   685                           ; BSR set to: 0
   686                           ;4-7seg.c: 125: if (rowkey==0x80) row=3;
   687  000944  0E80               	movlw	128
   688  000946  1821               	xorwf	_rowkey,w,c
   689  000948  1022               	iorwf	_rowkey+1,w,c
   690  00094A  A4D8               	btfss	status,2,c
   691  00094C  D004               	goto	l1595
   692                           
   693                           ; BSR set to: 0
   694  00094E  0E00               	movlw	0
   695  000950  6E20               	movwf	_row+1,c
   696  000952  0E03               	movlw	3
   697  000954  6E1F               	movwf	_row,c
   698  000956                     l1595:
   699                           
   700                           ; BSR set to: 0
   701                           ;4-7seg.c: 126: inval= KeyMap[row + col *4];
   702  000956  C009  F060         	movff	_col,??_main
   703  00095A  C00A  F061         	movff	_col+1,??_main+1
   704  00095E  0100               	movlb	0	; () banked
   705  000960  90D8               	bcf	status,0,c
   706  000962  3760               	rlcf	??_main& (0+255),f,b
   707  000964  3761               	rlcf	(??_main+1)& (0+255),f,b
   708  000966  0100               	movlb	0	; () banked
   709  000968  90D8               	bcf	status,0,c
   710  00096A  3760               	rlcf	??_main& (0+255),f,b
   711  00096C  3761               	rlcf	(??_main+1)& (0+255),f,b
   712  00096E  501F               	movf	_row,w,c
   713  000970  0100               	movlb	0	; () banked
   714  000972  2760               	addwf	??_main& (0+255),f,b
   715  000974  5020               	movf	_row+1,w,c
   716  000976  0100               	movlb	0	; () banked
   717  000978  2361               	addwfc	(??_main+1)& (0+255),f,b
   718  00097A  0E45               	movlw	low _KeyMap
   719  00097C  0100               	movlb	0	; () banked
   720  00097E  2560               	addwf	??_main& (0+255),w,b
   721  000980  6EF6               	movwf	tblptrl,c
   722  000982  0E08               	movlw	high _KeyMap
   723  000984  2161               	addwfc	(??_main+1)& (0+255),w,b
   724  000986  6EF7               	movwf	tblptrh,c
   725  000988                     	if	0	;There are less than 3 active tblptr bytes
   726  000988                     	endif
   727  000988  0008               	tblrd		*
   728  00098A  50F5               	movf	tablat,w,c
   729  00098C  6E13               	movwf	_inval,c
   730  00098E  6A14               	clrf	_inval+1,c
   731                           
   732                           ; BSR set to: 0
   733                           ;4-7seg.c: 127: keypress=1;
   734  000990  0E00               	movlw	0
   735  000992  6E18               	movwf	_keypress+1,c
   736  000994  0E01               	movlw	1
   737  000996  6E17               	movwf	_keypress,c
   738  000998                     l1599:
   739                           
   740                           ; BSR set to: 0
   741  000998  4A09               	infsnz	_col,f,c
   742  00099A  2A0A               	incf	_col+1,f,c
   743  00099C  D791               	goto	l1569
   744  00099E                     l1603:
   745                           
   746                           ;4-7seg.c: 128: }
   747                           ;4-7seg.c: 129: }
   748                           ;4-7seg.c: 130: if (keypress==0) inval=17;
   749  00099E  5017               	movf	_keypress,w,c
   750  0009A0  1018               	iorwf	_keypress+1,w,c
   751  0009A2  A4D8               	btfss	status,2,c
   752  0009A4  D004               	goto	l1607
   753  0009A6  0E00               	movlw	0
   754  0009A8  6E14               	movwf	_inval+1,c
   755  0009AA  0E11               	movlw	17
   756  0009AC  6E13               	movwf	_inval,c
   757  0009AE                     l1607:
   758                           
   759                           ;4-7seg.c: 131: }
   760                           ;4-7seg.c: 135: a = PORTE & 0x07;
   761  0009AE  CF84 F060          	movff	3972,??_main	;volatile
   762  0009B2  0E07               	movlw	7
   763  0009B4  0100               	movlb	0	; () banked
   764  0009B6  1760               	andwf	??_main& (0+255),f,b
   765  0009B8  0100               	movlb	0	; () banked
   766  0009BA  5160               	movf	??_main& (0+255),w,b
   767  0009BC  6E07               	movwf	_a,c
   768  0009BE  6A08               	clrf	_a+1,c
   769                           
   770                           ;4-7seg.c: 136: switch(a)
   771  0009C0  D2C7               	goto	l1723
   772  0009C2                     l1611:
   773                           
   774                           ; BSR set to: 0
   775                           ;4-7seg.c: 148: if (Timer500m){
   776  0009C2  502C               	movf	_Timer500m,w,c
   777  0009C4  B4D8               	btfsc	status,2,c
   778  0009C6  D019               	goto	l1619
   779                           
   780                           ; BSR set to: 0
   781                           ;4-7seg.c: 149: Timer500m=0;
   782  0009C8  0E00               	movlw	0
   783  0009CA  6E2C               	movwf	_Timer500m,c
   784                           
   785                           ; BSR set to: 0
   786                           ;4-7seg.c: 150: if(ggg++>9999)ggg=0;
   787  0009CC  500D               	movf	_ggg,w,c
   788  0009CE  0100               	movlb	0	; () banked
   789  0009D0  6F60               	movwf	??_main& (0+255),b
   790  0009D2  500E               	movf	_ggg+1,w,c
   791  0009D4  0100               	movlb	0	; () banked
   792  0009D6  6F61               	movwf	(??_main+1)& (0+255),b
   793  0009D8  4A0D               	infsnz	_ggg,f,c
   794  0009DA  2A0E               	incf	_ggg+1,f,c
   795  0009DC  0100               	movlb	0	; () banked
   796  0009DE  BF61               	btfsc	(??_main+1)& (0+255),7,b
   797  0009E0  D00C               	goto	l1619
   798  0009E2  0E10               	movlw	16
   799  0009E4  0100               	movlb	0	; () banked
   800  0009E6  5D60               	subwf	??_main& (0+255),w,b
   801  0009E8  0E27               	movlw	39
   802  0009EA  0100               	movlb	0	; () banked
   803  0009EC  5961               	subwfb	(??_main+1)& (0+255),w,b
   804  0009EE  A0D8               	btfss	status,0,c
   805  0009F0  D004               	goto	l1619
   806                           
   807                           ; BSR set to: 0
   808  0009F2  0E00               	movlw	0
   809  0009F4  6E0E               	movwf	_ggg+1,c
   810  0009F6  0E00               	movlw	0
   811  0009F8  6E0D               	movwf	_ggg,c
   812  0009FA                     l1619:
   813                           
   814                           ; BSR set to: 0
   815                           ;4-7seg.c: 151: }
   816                           ;4-7seg.c: 152: disp[0]=LED[ggg%10];
   817  0009FA  C00D  F044         	movff	_ggg,___awmod@dividend
   818  0009FE  C00E  F045         	movff	_ggg+1,___awmod@dividend+1
   819  000A02  0E00               	movlw	0
   820  000A04  6E47               	movwf	___awmod@divisor+1,c
   821  000A06  0E0A               	movlw	10
   822  000A08  6E46               	movwf	___awmod@divisor,c
   823  000A0A  ECB3  F008         	call	___awmod	;wreg free
   824  000A0E  0E31               	movlw	low _LED
   825  000A10  2444               	addwf	?___awmod,w,c
   826  000A12  6EF6               	movwf	tblptrl,c
   827  000A14  0E08               	movlw	high _LED
   828  000A16  2045               	addwfc	?___awmod+1,w,c
   829  000A18  6EF7               	movwf	tblptrh,c
   830  000A1A                     	if	0	;There are less than 3 active tblptr bytes
   831  000A1A                     	endif
   832  000A1A  0008               	tblrd		*
   833  000A1C  CFF5 F001          	movff	tablat,_disp
   834                           
   835                           ;4-7seg.c: 153: disp[1]=LED[ggg/10%10];
   836  000A20  0E00               	movlw	0
   837  000A22  6E3F               	movwf	___awdiv@divisor+1,c
   838  000A24  0E0A               	movlw	10
   839  000A26  6E3E               	movwf	___awdiv@divisor,c
   840  000A28  C00D  F03C         	movff	_ggg,___awdiv@dividend
   841  000A2C  C00E  F03D         	movff	_ggg+1,___awdiv@dividend+1
   842  000A30  EC30  F008         	call	___awdiv	;wreg free
   843  000A34  C03C  F044         	movff	?___awdiv,___awmod@dividend
   844  000A38  C03D  F045         	movff	?___awdiv+1,___awmod@dividend+1
   845  000A3C  0E00               	movlw	0
   846  000A3E  6E47               	movwf	___awmod@divisor+1,c
   847  000A40  0E0A               	movlw	10
   848  000A42  6E46               	movwf	___awmod@divisor,c
   849  000A44  ECB3  F008         	call	___awmod	;wreg free
   850  000A48  0E31               	movlw	low _LED
   851  000A4A  2444               	addwf	?___awmod,w,c
   852  000A4C  6EF6               	movwf	tblptrl,c
   853  000A4E  0E08               	movlw	high _LED
   854  000A50  2045               	addwfc	?___awmod+1,w,c
   855  000A52  6EF7               	movwf	tblptrh,c
   856  000A54                     	if	0	;There are less than 3 active tblptr bytes
   857  000A54                     	endif
   858  000A54  0008               	tblrd		*
   859  000A56  CFF5 F002          	movff	tablat,_disp+1
   860                           
   861                           ;4-7seg.c: 154: disp[2]=LED[ggg/100%10];
   862  000A5A  0E00               	movlw	0
   863  000A5C  6E3F               	movwf	___awdiv@divisor+1,c
   864  000A5E  0E64               	movlw	100
   865  000A60  6E3E               	movwf	___awdiv@divisor,c
   866  000A62  C00D  F03C         	movff	_ggg,___awdiv@dividend
   867  000A66  C00E  F03D         	movff	_ggg+1,___awdiv@dividend+1
   868  000A6A  EC30  F008         	call	___awdiv	;wreg free
   869  000A6E  C03C  F044         	movff	?___awdiv,___awmod@dividend
   870  000A72  C03D  F045         	movff	?___awdiv+1,___awmod@dividend+1
   871  000A76  0E00               	movlw	0
   872  000A78  6E47               	movwf	___awmod@divisor+1,c
   873  000A7A  0E0A               	movlw	10
   874  000A7C  6E46               	movwf	___awmod@divisor,c
   875  000A7E  ECB3  F008         	call	___awmod	;wreg free
   876  000A82  0E31               	movlw	low _LED
   877  000A84  2444               	addwf	?___awmod,w,c
   878  000A86  6EF6               	movwf	tblptrl,c
   879  000A88  0E08               	movlw	high _LED
   880  000A8A  2045               	addwfc	?___awmod+1,w,c
   881  000A8C  6EF7               	movwf	tblptrh,c
   882  000A8E                     	if	0	;There are less than 3 active tblptr bytes
   883  000A8E                     	endif
   884  000A8E  0008               	tblrd		*
   885  000A90  CFF5 F003          	movff	tablat,_disp+2
   886                           
   887                           ;4-7seg.c: 155: disp[3]=LED[ggg/1000%10];
   888  000A94  0E03               	movlw	3
   889  000A96  6E3F               	movwf	___awdiv@divisor+1,c
   890  000A98  0EE8               	movlw	232
   891  000A9A  6E3E               	movwf	___awdiv@divisor,c
   892  000A9C  C00D  F03C         	movff	_ggg,___awdiv@dividend
   893  000AA0  C00E  F03D         	movff	_ggg+1,___awdiv@dividend+1
   894  000AA4  EC30  F008         	call	___awdiv	;wreg free
   895  000AA8  C03C  F044         	movff	?___awdiv,___awmod@dividend
   896  000AAC  C03D  F045         	movff	?___awdiv+1,___awmod@dividend+1
   897  000AB0  0E00               	movlw	0
   898  000AB2  6E47               	movwf	___awmod@divisor+1,c
   899  000AB4  0E0A               	movlw	10
   900  000AB6  6E46               	movwf	___awmod@divisor,c
   901  000AB8  ECB3  F008         	call	___awmod	;wreg free
   902  000ABC  D07B               	goto	L3
   903  000ABE                     L2:
   904  000ABE                     	endif
   905  000ABE  0008               	tblrd		*
   906  000AC0  CFF5 F004          	movff	tablat,_disp+3
   907                           
   908                           ;4-7seg.c: 156: break;
   909  000AC4  D268               	goto	l1725
   910  000AC6                     l1627:
   911                           
   912                           ;4-7seg.c: 160: if (Timer500m){
   913  000AC6  502C               	movf	_Timer500m,w,c
   914  000AC8  B4D8               	btfsc	status,2,c
   915  000ACA  D013               	goto	l1635
   916                           
   917                           ;4-7seg.c: 161: Timer500m=0;
   918  000ACC  0E00               	movlw	0
   919  000ACE  6E2C               	movwf	_Timer500m,c
   920                           
   921                           ;4-7seg.c: 162: if(ggg--<0)ggg=9999;
   922  000AD0  500D               	movf	_ggg,w,c
   923  000AD2  0100               	movlb	0	; () banked
   924  000AD4  6F60               	movwf	??_main& (0+255),b
   925  000AD6  500E               	movf	_ggg+1,w,c
   926  000AD8  0100               	movlb	0	; () banked
   927  000ADA  6F61               	movwf	(??_main+1)& (0+255),b
   928  000ADC  0E01               	movlw	1
   929  000ADE  5E0D               	subwf	_ggg,f,c
   930  000AE0  0E00               	movlw	0
   931  000AE2  5A0E               	subwfb	_ggg+1,f,c
   932  000AE4  0100               	movlb	0	; () banked
   933  000AE6  AF61               	btfss	(??_main+1)& (0+255),7,b
   934  000AE8  D004               	goto	l1635
   935                           
   936                           ; BSR set to: 0
   937  000AEA  0E27               	movlw	39
   938  000AEC  6E0E               	movwf	_ggg+1,c
   939  000AEE  0E0F               	movlw	15
   940  000AF0  6E0D               	movwf	_ggg,c
   941  000AF2                     l1635:
   942                           
   943                           ;4-7seg.c: 163: }
   944                           ;4-7seg.c: 164: disp[0]=LED[ggg%10];
   945  000AF2  C00D  F044         	movff	_ggg,___awmod@dividend
   946  000AF6  C00E  F045         	movff	_ggg+1,___awmod@dividend+1
   947  000AFA  0E00               	movlw	0
   948  000AFC  6E47               	movwf	___awmod@divisor+1,c
   949  000AFE  0E0A               	movlw	10
   950  000B00  6E46               	movwf	___awmod@divisor,c
   951  000B02  ECB3  F008         	call	___awmod	;wreg free
   952  000B06  0E31               	movlw	low _LED
   953  000B08  2444               	addwf	?___awmod,w,c
   954  000B0A  6EF6               	movwf	tblptrl,c
   955  000B0C  0E08               	movlw	high _LED
   956  000B0E  2045               	addwfc	?___awmod+1,w,c
   957  000B10  6EF7               	movwf	tblptrh,c
   958  000B12                     	if	0	;There are less than 3 active tblptr bytes
   959  000B12                     	endif
   960  000B12  0008               	tblrd		*
   961  000B14  CFF5 F001          	movff	tablat,_disp
   962                           
   963                           ;4-7seg.c: 165: disp[1]=LED[ggg/10%10];
   964  000B18  0E00               	movlw	0
   965  000B1A  6E3F               	movwf	___awdiv@divisor+1,c
   966  000B1C  0E0A               	movlw	10
   967  000B1E  6E3E               	movwf	___awdiv@divisor,c
   968  000B20  C00D  F03C         	movff	_ggg,___awdiv@dividend
   969  000B24  C00E  F03D         	movff	_ggg+1,___awdiv@dividend+1
   970  000B28  EC30  F008         	call	___awdiv	;wreg free
   971  000B2C  C03C  F044         	movff	?___awdiv,___awmod@dividend
   972  000B30  C03D  F045         	movff	?___awdiv+1,___awmod@dividend+1
   973  000B34  0E00               	movlw	0
   974  000B36  6E47               	movwf	___awmod@divisor+1,c
   975  000B38  0E0A               	movlw	10
   976  000B3A  6E46               	movwf	___awmod@divisor,c
   977  000B3C  ECB3  F008         	call	___awmod	;wreg free
   978  000B40  0E31               	movlw	low _LED
   979  000B42  2444               	addwf	?___awmod,w,c
   980  000B44  6EF6               	movwf	tblptrl,c
   981  000B46  0E08               	movlw	high _LED
   982  000B48  2045               	addwfc	?___awmod+1,w,c
   983  000B4A  6EF7               	movwf	tblptrh,c
   984  000B4C                     	if	0	;There are less than 3 active tblptr bytes
   985  000B4C                     	endif
   986  000B4C  0008               	tblrd		*
   987  000B4E  CFF5 F002          	movff	tablat,_disp+1
   988                           
   989                           ;4-7seg.c: 166: disp[2]=LED[ggg/100%10];
   990  000B52  0E00               	movlw	0
   991  000B54  6E3F               	movwf	___awdiv@divisor+1,c
   992  000B56  0E64               	movlw	100
   993  000B58  6E3E               	movwf	___awdiv@divisor,c
   994  000B5A  C00D  F03C         	movff	_ggg,___awdiv@dividend
   995  000B5E  C00E  F03D         	movff	_ggg+1,___awdiv@dividend+1
   996  000B62  EC30  F008         	call	___awdiv	;wreg free
   997  000B66  C03C  F044         	movff	?___awdiv,___awmod@dividend
   998  000B6A  C03D  F045         	movff	?___awdiv+1,___awmod@dividend+1
   999  000B6E  0E00               	movlw	0
  1000  000B70  6E47               	movwf	___awmod@divisor+1,c
  1001  000B72  0E0A               	movlw	10
  1002  000B74  6E46               	movwf	___awmod@divisor,c
  1003  000B76  ECB3  F008         	call	___awmod	;wreg free
  1004  000B7A  0E31               	movlw	low _LED
  1005  000B7C  2444               	addwf	?___awmod,w,c
  1006  000B7E  6EF6               	movwf	tblptrl,c
  1007  000B80  0E08               	movlw	high _LED
  1008  000B82  2045               	addwfc	?___awmod+1,w,c
  1009  000B84  6EF7               	movwf	tblptrh,c
  1010  000B86                     	if	0	;There are less than 3 active tblptr bytes
  1011  000B86                     	endif
  1012  000B86  0008               	tblrd		*
  1013  000B88  CFF5 F003          	movff	tablat,_disp+2
  1014                           
  1015                           ;4-7seg.c: 167: disp[3]=LED[ggg/1000%10];
  1016  000B8C  0E03               	movlw	3
  1017  000B8E  6E3F               	movwf	___awdiv@divisor+1,c
  1018  000B90  0EE8               	movlw	232
  1019  000B92  6E3E               	movwf	___awdiv@divisor,c
  1020  000B94  C00D  F03C         	movff	_ggg,___awdiv@dividend
  1021  000B98  C00E  F03D         	movff	_ggg+1,___awdiv@dividend+1
  1022  000B9C  EC30  F008         	call	___awdiv	;wreg free
  1023  000BA0  C03C  F044         	movff	?___awdiv,___awmod@dividend
  1024  000BA4  C03D  F045         	movff	?___awdiv+1,___awmod@dividend+1
  1025  000BA8  0E00               	movlw	0
  1026  000BAA  6E47               	movwf	___awmod@divisor+1,c
  1027  000BAC  0E0A               	movlw	10
  1028  000BAE  6E46               	movwf	___awmod@divisor,c
  1029  000BB0  ECB3  F008         	call	___awmod	;wreg free
  1030  000BB4                     L3:
  1031  000BB4  0E31               	movlw	low _LED
  1032  000BB6  2444               	addwf	?___awmod,w,c
  1033  000BB8  6EF6               	movwf	tblptrl,c
  1034  000BBA  0E08               	movlw	high _LED
  1035  000BBC  2045               	addwfc	?___awmod+1,w,c
  1036  000BBE  D096               	goto	L6
  1037  000BC0                     l1643:
  1038                           
  1039                           ;4-7seg.c: 172: if (Timer500m){
  1040  000BC0  502C               	movf	_Timer500m,w,c
  1041  000BC2  B4D8               	btfsc	status,2,c
  1042  000BC4  D02A               	goto	l1655
  1043                           
  1044                           ;4-7seg.c: 173: Timer500m=0;
  1045  000BC6  0E00               	movlw	0
  1046  000BC8  6E2C               	movwf	_Timer500m,c
  1047                           
  1048                           ;4-7seg.c: 174: if(sec++>58)
  1049  000BCA  5025               	movf	_sec,w,c
  1050  000BCC  0100               	movlb	0	; () banked
  1051  000BCE  6F60               	movwf	??_main& (0+255),b
  1052  000BD0  5026               	movf	_sec+1,w,c
  1053  000BD2  0100               	movlb	0	; () banked
  1054  000BD4  6F61               	movwf	(??_main+1)& (0+255),b
  1055  000BD6  4A25               	infsnz	_sec,f,c
  1056  000BD8  2A26               	incf	_sec+1,f,c
  1057  000BDA  0100               	movlb	0	; () banked
  1058  000BDC  5161               	movf	(??_main+1)& (0+255),w,b
  1059  000BDE  E105               	bnz	u1170
  1060  000BE0  0E3B               	movlw	59
  1061  000BE2  0100               	movlb	0	; () banked
  1062  000BE4  5D60               	subwf	??_main& (0+255),w,b
  1063  000BE6  A0D8               	btfss	status,0,c
  1064  000BE8  D018               	goto	l1655
  1065  000BEA                     u1170:
  1066                           
  1067                           ; BSR set to: 0
  1068                           ;4-7seg.c: 175: {
  1069                           ;4-7seg.c: 176: sec=0;
  1070  000BEA  0E00               	movlw	0
  1071  000BEC  6E26               	movwf	_sec+1,c
  1072  000BEE  0E00               	movlw	0
  1073  000BF0  6E25               	movwf	_sec,c
  1074                           
  1075                           ; BSR set to: 0
  1076                           ;4-7seg.c: 177: if(min++>58)
  1077  000BF2  5019               	movf	_min,w,c
  1078  000BF4  0100               	movlb	0	; () banked
  1079  000BF6  6F60               	movwf	??_main& (0+255),b
  1080  000BF8  501A               	movf	_min+1,w,c
  1081  000BFA  0100               	movlb	0	; () banked
  1082  000BFC  6F61               	movwf	(??_main+1)& (0+255),b
  1083  000BFE  4A19               	infsnz	_min,f,c
  1084  000C00  2A1A               	incf	_min+1,f,c
  1085  000C02  0100               	movlb	0	; () banked
  1086  000C04  5161               	movf	(??_main+1)& (0+255),w,b
  1087  000C06  E105               	bnz	u1180
  1088  000C08  0E3B               	movlw	59
  1089  000C0A  0100               	movlb	0	; () banked
  1090  000C0C  5D60               	subwf	??_main& (0+255),w,b
  1091  000C0E  A0D8               	btfss	status,0,c
  1092  000C10  D004               	goto	l1655
  1093  000C12                     u1180:
  1094                           
  1095                           ; BSR set to: 0
  1096                           ;4-7seg.c: 178: {
  1097                           ;4-7seg.c: 179: min=0;
  1098  000C12  0E00               	movlw	0
  1099  000C14  6E1A               	movwf	_min+1,c
  1100  000C16  0E00               	movlw	0
  1101  000C18  6E19               	movwf	_min,c
  1102  000C1A                     l1655:
  1103                           
  1104                           ;4-7seg.c: 180: }
  1105                           ;4-7seg.c: 181: }
  1106                           ;4-7seg.c: 182: }
  1107                           ;4-7seg.c: 183: disp[0]=LED[sec%10];
  1108  000C1A  C025  F043         	movff	_sec,___lwmod@dividend
  1109  000C1E  C026  F044         	movff	_sec+1,___lwmod@dividend+1
  1110  000C22  0E00               	movlw	0
  1111  000C24  6E46               	movwf	___lwmod@divisor+1,c
  1112  000C26  0E0A               	movlw	10
  1113  000C28  6E45               	movwf	___lwmod@divisor,c
  1114  000C2A  EC14  F009         	call	___lwmod	;wreg free
  1115  000C2E  0E31               	movlw	low _LED
  1116  000C30  2443               	addwf	?___lwmod,w,c
  1117  000C32  6EF6               	movwf	tblptrl,c
  1118  000C34  0E08               	movlw	high _LED
  1119  000C36  2044               	addwfc	?___lwmod+1,w,c
  1120  000C38  6EF7               	movwf	tblptrh,c
  1121  000C3A                     	if	0	;There are less than 3 active tblptr bytes
  1122  000C3A                     	endif
  1123  000C3A  0008               	tblrd		*
  1124  000C3C  CFF5 F001          	movff	tablat,_disp
  1125                           
  1126                           ;4-7seg.c: 184: disp[1]=LED[sec/10%10];
  1127  000C40  0E00               	movlw	0
  1128  000C42  6E3F               	movwf	___lwdiv@divisor+1,c
  1129  000C44  0E0A               	movlw	10
  1130  000C46  6E3E               	movwf	___lwdiv@divisor,c
  1131  000C48  C025  F03C         	movff	_sec,___lwdiv@dividend
  1132  000C4C  C026  F03D         	movff	_sec+1,___lwdiv@dividend+1
  1133  000C50  ECEB  F008         	call	___lwdiv	;wreg free
  1134  000C54  C03C  F043         	movff	?___lwdiv,___lwmod@dividend
  1135  000C58  C03D  F044         	movff	?___lwdiv+1,___lwmod@dividend+1
  1136  000C5C  0E00               	movlw	0
  1137  000C5E  6E46               	movwf	___lwmod@divisor+1,c
  1138  000C60  0E0A               	movlw	10
  1139  000C62  6E45               	movwf	___lwmod@divisor,c
  1140  000C64  EC14  F009         	call	___lwmod	;wreg free
  1141  000C68  0E31               	movlw	low _LED
  1142  000C6A  2443               	addwf	?___lwmod,w,c
  1143  000C6C  6EF6               	movwf	tblptrl,c
  1144  000C6E  0E08               	movlw	high _LED
  1145  000C70  2044               	addwfc	?___lwmod+1,w,c
  1146  000C72  6EF7               	movwf	tblptrh,c
  1147  000C74                     	if	0	;There are less than 3 active tblptr bytes
  1148  000C74                     	endif
  1149  000C74  0008               	tblrd		*
  1150  000C76  CFF5 F002          	movff	tablat,_disp+1
  1151                           
  1152                           ;4-7seg.c: 185: if(Timer250m)
  1153  000C7A  5005               	movf	_Timer250m,w,c
  1154  000C7C  1006               	iorwf	_Timer250m+1,w,c
  1155  000C7E  B4D8               	btfsc	status,2,c
  1156  000C80  D00D               	goto	l1663
  1157                           
  1158                           ;4-7seg.c: 186: {
  1159                           ;4-7seg.c: 187: disp[2]=LED[(min+10)%10];
  1160  000C82  0E0A               	movlw	10
  1161  000C84  2419               	addwf	_min,w,c
  1162  000C86  6E43               	movwf	___lwmod@dividend,c
  1163  000C88  0E00               	movlw	0
  1164  000C8A  201A               	addwfc	_min+1,w,c
  1165  000C8C  6E44               	movwf	___lwmod@dividend+1,c
  1166  000C8E  0E00               	movlw	0
  1167  000C90  6E46               	movwf	___lwmod@divisor+1,c
  1168  000C92  0E0A               	movlw	10
  1169  000C94  6E45               	movwf	___lwmod@divisor,c
  1170  000C96  EC14  F009         	call	___lwmod	;wreg free
  1171  000C9A  D00A               	goto	L4
  1172  000C9C                     l1663:
  1173                           
  1174                           ;4-7seg.c: 189: else
  1175                           ;4-7seg.c: 190: {
  1176                           ;4-7seg.c: 191: disp[2]=LED[min%10];
  1177  000C9C  C019  F043         	movff	_min,___lwmod@dividend
  1178  000CA0  C01A  F044         	movff	_min+1,___lwmod@dividend+1
  1179  000CA4  0E00               	movlw	0
  1180  000CA6  6E46               	movwf	___lwmod@divisor+1,c
  1181  000CA8  0E0A               	movlw	10
  1182  000CAA  6E45               	movwf	___lwmod@divisor,c
  1183  000CAC  EC14  F009         	call	___lwmod	;wreg free
  1184  000CB0                     L4:
  1185  000CB0  0E31               	movlw	low _LED
  1186  000CB2  2443               	addwf	?___lwmod,w,c
  1187  000CB4  6EF6               	movwf	tblptrl,c
  1188  000CB6  0E08               	movlw	high _LED
  1189  000CB8  2044               	addwfc	?___lwmod+1,w,c
  1190  000CBA  6EF7               	movwf	tblptrh,c
  1191  000CBC                     	if	0	;There are less than 3 active tblptr bytes
  1192  000CBC                     	endif
  1193  000CBC  0008               	tblrd		*
  1194  000CBE  CFF5 F003          	movff	tablat,_disp+2
  1195                           
  1196                           ;4-7seg.c: 192: }
  1197                           ;4-7seg.c: 193: disp[3]=LED[min/10%10];
  1198  000CC2  0E00               	movlw	0
  1199  000CC4  6E3F               	movwf	___lwdiv@divisor+1,c
  1200  000CC6  0E0A               	movlw	10
  1201  000CC8  6E3E               	movwf	___lwdiv@divisor,c
  1202  000CCA  C019  F03C         	movff	_min,___lwdiv@dividend
  1203  000CCE  C01A  F03D         	movff	_min+1,___lwdiv@dividend+1
  1204  000CD2  ECEB  F008         	call	___lwdiv	;wreg free
  1205  000CD6  C03C  F043         	movff	?___lwdiv,___lwmod@dividend
  1206  000CDA  C03D  F044         	movff	?___lwdiv+1,___lwmod@dividend+1
  1207  000CDE  0E00               	movlw	0
  1208  000CE0  6E46               	movwf	___lwmod@divisor+1,c
  1209  000CE2  0E0A               	movlw	10
  1210  000CE4  6E45               	movwf	___lwmod@divisor,c
  1211  000CE6  EC14  F009         	call	___lwmod	;wreg free
  1212  000CEA  D087               	goto	L7
  1213  000CEC                     L6:
  1214  000CEC  6EF7               	movwf	tblptrh,c
  1215  000CEE                     	if	0	;There are less than 3 active tblptr bytes
  1216  000CEE  D6E7               	goto	L2
  1217  000CF0                     l1665:
  1218                           
  1219                           ;4-7seg.c: 198: if (Timer500m){
  1220  000CF0  502C               	movf	_Timer500m,w,c
  1221  000CF2  B4D8               	btfsc	status,2,c
  1222  000CF4  D01A               	goto	l1677
  1223                           
  1224                           ;4-7seg.c: 199: Timer500m=0;
  1225  000CF6  0E00               	movlw	0
  1226  000CF8  6E2C               	movwf	_Timer500m,c
  1227                           
  1228                           ;4-7seg.c: 200: if(sec--<1)
  1229  000CFA  0625               	decf	_sec,f,c
  1230  000CFC  A0D8               	btfss	status,0,c
  1231  000CFE  0626               	decf	_sec+1,f,c
  1232  000D00  2825               	incf	_sec,w,c
  1233  000D02  E113               	bnz	l1677
  1234  000D04  2826               	incf	_sec+1,w,c
  1235  000D06  A4D8               	btfss	status,2,c
  1236  000D08  D010               	goto	l1677
  1237                           
  1238                           ;4-7seg.c: 201: {
  1239                           ;4-7seg.c: 202: sec=59;
  1240  000D0A  0E00               	movlw	0
  1241  000D0C  6E26               	movwf	_sec+1,c
  1242  000D0E  0E3B               	movlw	59
  1243  000D10  6E25               	movwf	_sec,c
  1244                           
  1245                           ;4-7seg.c: 203: if(min--<1)
  1246  000D12  0619               	decf	_min,f,c
  1247  000D14  A0D8               	btfss	status,0,c
  1248  000D16  061A               	decf	_min+1,f,c
  1249  000D18  2819               	incf	_min,w,c
  1250  000D1A  E107               	bnz	l1677
  1251  000D1C  281A               	incf	_min+1,w,c
  1252  000D1E  A4D8               	btfss	status,2,c
  1253  000D20  D004               	goto	l1677
  1254                           
  1255                           ;4-7seg.c: 204: {
  1256                           ;4-7seg.c: 205: min=59;
  1257  000D22  0E00               	movlw	0
  1258  000D24  6E1A               	movwf	_min+1,c
  1259  000D26  0E3B               	movlw	59
  1260  000D28  6E19               	movwf	_min,c
  1261  000D2A                     l1677:
  1262                           
  1263                           ;4-7seg.c: 206: }
  1264                           ;4-7seg.c: 207: }
  1265                           ;4-7seg.c: 208: }
  1266                           ;4-7seg.c: 209: disp[0]=LED[sec%10];
  1267  000D2A  C025  F043         	movff	_sec,___lwmod@dividend
  1268  000D2E  C026  F044         	movff	_sec+1,___lwmod@dividend+1
  1269  000D32  0E00               	movlw	0
  1270  000D34  6E46               	movwf	___lwmod@divisor+1,c
  1271  000D36  0E0A               	movlw	10
  1272  000D38  6E45               	movwf	___lwmod@divisor,c
  1273  000D3A  EC14  F009         	call	___lwmod	;wreg free
  1274  000D3E  0E31               	movlw	low _LED
  1275  000D40  2443               	addwf	?___lwmod,w,c
  1276  000D42  6EF6               	movwf	tblptrl,c
  1277  000D44  0E08               	movlw	high _LED
  1278  000D46  2044               	addwfc	?___lwmod+1,w,c
  1279  000D48  6EF7               	movwf	tblptrh,c
  1280  000D4A                     	if	0	;There are less than 3 active tblptr bytes
  1281  000D4A                     	endif
  1282  000D4A  0008               	tblrd		*
  1283  000D4C  CFF5 F001          	movff	tablat,_disp
  1284                           
  1285                           ;4-7seg.c: 210: disp[1]=LED[sec/10%10];
  1286  000D50  0E00               	movlw	0
  1287  000D52  6E3F               	movwf	___lwdiv@divisor+1,c
  1288  000D54  0E0A               	movlw	10
  1289  000D56  6E3E               	movwf	___lwdiv@divisor,c
  1290  000D58  C025  F03C         	movff	_sec,___lwdiv@dividend
  1291  000D5C  C026  F03D         	movff	_sec+1,___lwdiv@dividend+1
  1292  000D60  ECEB  F008         	call	___lwdiv	;wreg free
  1293  000D64  C03C  F043         	movff	?___lwdiv,___lwmod@dividend
  1294  000D68  C03D  F044         	movff	?___lwdiv+1,___lwmod@dividend+1
  1295  000D6C  0E00               	movlw	0
  1296  000D6E  6E46               	movwf	___lwmod@divisor+1,c
  1297  000D70  0E0A               	movlw	10
  1298  000D72  6E45               	movwf	___lwmod@divisor,c
  1299  000D74  EC14  F009         	call	___lwmod	;wreg free
  1300  000D78  0E31               	movlw	low _LED
  1301  000D7A  2443               	addwf	?___lwmod,w,c
  1302  000D7C  6EF6               	movwf	tblptrl,c
  1303  000D7E  0E08               	movlw	high _LED
  1304  000D80  2044               	addwfc	?___lwmod+1,w,c
  1305  000D82  6EF7               	movwf	tblptrh,c
  1306  000D84                     	if	0	;There are less than 3 active tblptr bytes
  1307  000D84                     	endif
  1308  000D84  0008               	tblrd		*
  1309  000D86  CFF5 F002          	movff	tablat,_disp+1
  1310                           
  1311                           ;4-7seg.c: 211: if(Timer250m){
  1312  000D8A  5005               	movf	_Timer250m,w,c
  1313  000D8C  1006               	iorwf	_Timer250m+1,w,c
  1314  000D8E  B4D8               	btfsc	status,2,c
  1315  000D90  D00D               	goto	l1685
  1316                           
  1317                           ;4-7seg.c: 212: disp[2]=LED[(min+10)%10];
  1318  000D92  0E0A               	movlw	10
  1319  000D94  2419               	addwf	_min,w,c
  1320  000D96  6E43               	movwf	___lwmod@dividend,c
  1321  000D98  0E00               	movlw	0
  1322  000D9A  201A               	addwfc	_min+1,w,c
  1323  000D9C  6E44               	movwf	___lwmod@dividend+1,c
  1324  000D9E  0E00               	movlw	0
  1325  000DA0  6E46               	movwf	___lwmod@divisor+1,c
  1326  000DA2  0E0A               	movlw	10
  1327  000DA4  6E45               	movwf	___lwmod@divisor,c
  1328  000DA6  EC14  F009         	call	___lwmod	;wreg free
  1329  000DAA  D00A               	goto	L5
  1330  000DAC                     l1685:
  1331                           
  1332                           ;4-7seg.c: 214: disp[2]=LED[min%10];
  1333  000DAC  C019  F043         	movff	_min,___lwmod@dividend
  1334  000DB0  C01A  F044         	movff	_min+1,___lwmod@dividend+1
  1335  000DB4  0E00               	movlw	0
  1336  000DB6  6E46               	movwf	___lwmod@divisor+1,c
  1337  000DB8  0E0A               	movlw	10
  1338  000DBA  6E45               	movwf	___lwmod@divisor,c
  1339  000DBC  EC14  F009         	call	___lwmod	;wreg free
  1340  000DC0                     L5:
  1341  000DC0  0E31               	movlw	low _LED
  1342  000DC2  2443               	addwf	?___lwmod,w,c
  1343  000DC4  6EF6               	movwf	tblptrl,c
  1344  000DC6  0E08               	movlw	high _LED
  1345  000DC8  2044               	addwfc	?___lwmod+1,w,c
  1346  000DCA  6EF7               	movwf	tblptrh,c
  1347  000DCC                     	if	0	;There are less than 3 active tblptr bytes
  1348  000DCC                     	endif
  1349  000DCC  0008               	tblrd		*
  1350  000DCE  CFF5 F003          	movff	tablat,_disp+2
  1351                           
  1352                           ;4-7seg.c: 215: }
  1353                           ;4-7seg.c: 216: disp[3]=LED[min/10%10];
  1354  000DD2  0E00               	movlw	0
  1355  000DD4  6E3F               	movwf	___lwdiv@divisor+1,c
  1356  000DD6  0E0A               	movlw	10
  1357  000DD8  6E3E               	movwf	___lwdiv@divisor,c
  1358  000DDA  C019  F03C         	movff	_min,___lwdiv@dividend
  1359  000DDE  C01A  F03D         	movff	_min+1,___lwdiv@dividend+1
  1360  000DE2  ECEB  F008         	call	___lwdiv	;wreg free
  1361  000DE6  C03C  F043         	movff	?___lwdiv,___lwmod@dividend
  1362  000DEA  C03D  F044         	movff	?___lwdiv+1,___lwmod@dividend+1
  1363  000DEE  0E00               	movlw	0
  1364  000DF0  6E46               	movwf	___lwmod@divisor+1,c
  1365  000DF2  0E0A               	movlw	10
  1366  000DF4  6E45               	movwf	___lwmod@divisor,c
  1367  000DF6  EC14  F009         	call	___lwmod	;wreg free
  1368  000DFA                     L7:
  1369  000DFA  0E31               	movlw	low _LED
  1370  000DFC  2443               	addwf	?___lwmod,w,c
  1371  000DFE  6EF6               	movwf	tblptrl,c
  1372  000E00  0E08               	movlw	high _LED
  1373  000E02  2044               	addwfc	?___lwmod+1,w,c
  1374  000E04  D773               	goto	L6
  1375  000E06                     l1687:
  1376                           
  1377                           ;4-7seg.c: 221: if (rrr){
  1378  000E06  5023               	movf	_rrr,w,c
  1379  000E08  1024               	iorwf	_rrr+1,w,c
  1380  000E0A  B4D8               	btfsc	status,2,c
  1381  000E0C  D057               	goto	l1711
  1382                           
  1383                           ;4-7seg.c: 222: rrr=0;
  1384  000E0E  0E00               	movlw	0
  1385  000E10  6E24               	movwf	_rrr+1,c
  1386  000E12  0E00               	movlw	0
  1387  000E14  6E23               	movwf	_rrr,c
  1388                           
  1389                           ;4-7seg.c: 223: if(mq++>12)mq=0;
  1390  000E16  501B               	movf	_mq,w,c
  1391  000E18  0100               	movlb	0	; () banked
  1392  000E1A  6F60               	movwf	??_main& (0+255),b
  1393  000E1C  501C               	movf	_mq+1,w,c
  1394  000E1E  0100               	movlb	0	; () banked
  1395  000E20  6F61               	movwf	(??_main+1)& (0+255),b
  1396  000E22  4A1B               	infsnz	_mq,f,c
  1397  000E24  2A1C               	incf	_mq+1,f,c
  1398  000E26  0100               	movlb	0	; () banked
  1399  000E28  BF61               	btfsc	(??_main+1)& (0+255),7,b
  1400  000E2A  D048               	goto	l1711
  1401  000E2C  0100               	movlb	0	; () banked
  1402  000E2E  5161               	movf	(??_main+1)& (0+255),w,b
  1403  000E30  E105               	bnz	u1250
  1404  000E32  0E0D               	movlw	13
  1405  000E34  0100               	movlb	0	; () banked
  1406  000E36  5D60               	subwf	??_main& (0+255),w,b
  1407  000E38  A0D8               	btfss	status,0,c
  1408  000E3A  D040               	goto	l1711
  1409  000E3C                     u1250:
  1410                           
  1411                           ; BSR set to: 0
  1412  000E3C  0E00               	movlw	0
  1413  000E3E  6E1C               	movwf	_mq+1,c
  1414  000E40  0E00               	movlw	0
  1415  000E42  6E1B               	movwf	_mq,c
  1416                           
  1417                           ; BSR set to: 0
  1418  000E44  D03B               	goto	l1711
  1419  000E46                     l1697:
  1420                           
  1421                           ; BSR set to: 0
  1422                           ;4-7seg.c: 226: disp[1]=MQ[mq+11];
  1423  000E46  0E0B               	movlw	11
  1424  000E48  241B               	addwf	_mq,w,c
  1425  000E4A  0100               	movlb	0	; () banked
  1426  000E4C  6F60               	movwf	??_main& (0+255),b
  1427  000E4E  0E00               	movlw	0
  1428  000E50  201C               	addwfc	_mq+1,w,c
  1429  000E52  0100               	movlb	0	; () banked
  1430  000E54  6F61               	movwf	(??_main+1)& (0+255),b
  1431  000E56  0E01               	movlw	low _MQ
  1432  000E58  0100               	movlb	0	; () banked
  1433  000E5A  2560               	addwf	??_main& (0+255),w,b
  1434  000E5C  6EF6               	movwf	tblptrl,c
  1435  000E5E  0E08               	movlw	high _MQ
  1436  000E60  2161               	addwfc	(??_main+1)& (0+255),w,b
  1437  000E62  6EF7               	movwf	tblptrh,c
  1438  000E64                     	if	0	;There are less than 3 active tblptr bytes
  1439  000E64                     	endif
  1440  000E64  0008               	tblrd		*
  1441  000E66  CFF5 F002          	movff	tablat,_disp+1
  1442  000E6A  D045               	goto	l1715
  1443  000E6C                     l1701:
  1444                           
  1445                           ; BSR set to: 0
  1446                           ;4-7seg.c: 228: disp[3]=MQ[mq+35];
  1447  000E6C  0E23               	movlw	35
  1448  000E6E  241B               	addwf	_mq,w,c
  1449  000E70  0100               	movlb	0	; () banked
  1450  000E72  6F60               	movwf	??_main& (0+255),b
  1451  000E74  0E00               	movlw	0
  1452  000E76  201C               	addwfc	_mq+1,w,c
  1453  000E78  0100               	movlb	0	; () banked
  1454  000E7A  6F61               	movwf	(??_main+1)& (0+255),b
  1455  000E7C  0E01               	movlw	low _MQ
  1456  000E7E  0100               	movlb	0	; () banked
  1457  000E80  2560               	addwf	??_main& (0+255),w,b
  1458  000E82  6EF6               	movwf	tblptrl,c
  1459  000E84  0E08               	movlw	high _MQ
  1460  000E86  2161               	addwfc	(??_main+1)& (0+255),w,b
  1461  000E88  D731               	goto	L6
  1462  000E8A                     l1703:
  1463                           
  1464                           ; BSR set to: 0
  1465                           ;4-7seg.c: 233: if (rrr){
  1466  000E8A  5023               	movf	_rrr,w,c
  1467  000E8C  1024               	iorwf	_rrr+1,w,c
  1468  000E8E  B4D8               	btfsc	status,2,c
  1469  000E90  D015               	goto	l1711
  1470                           
  1471                           ; BSR set to: 0
  1472                           ;4-7seg.c: 234: rrr=0;
  1473  000E92  0E00               	movlw	0
  1474  000E94  6E24               	movwf	_rrr+1,c
  1475  000E96  0E00               	movlw	0
  1476  000E98  6E23               	movwf	_rrr,c
  1477                           
  1478                           ; BSR set to: 0
  1479                           ;4-7seg.c: 235: if(mq--<0)mq=12;
  1480  000E9A  501B               	movf	_mq,w,c
  1481  000E9C  0100               	movlb	0	; () banked
  1482  000E9E  6F60               	movwf	??_main& (0+255),b
  1483  000EA0  501C               	movf	_mq+1,w,c
  1484  000EA2  0100               	movlb	0	; () banked
  1485  000EA4  6F61               	movwf	(??_main+1)& (0+255),b
  1486  000EA6  0E01               	movlw	1
  1487  000EA8  5E1B               	subwf	_mq,f,c
  1488  000EAA  0E00               	movlw	0
  1489  000EAC  5A1C               	subwfb	_mq+1,f,c
  1490  000EAE  0100               	movlb	0	; () banked
  1491  000EB0  AF61               	btfss	(??_main+1)& (0+255),7,b
  1492  000EB2  D004               	goto	l1711
  1493                           
  1494                           ; BSR set to: 0
  1495  000EB4  0E00               	movlw	0
  1496  000EB6  6E1C               	movwf	_mq+1,c
  1497  000EB8  0E0C               	movlw	12
  1498  000EBA  D7C3               	goto	L8
  1499  000EBC                     l1711:
  1500                           
  1501                           ; BSR set to: 0
  1502                           ;4-7seg.c: 236: }
  1503                           ;4-7seg.c: 237: disp[0]=MQ[mq-1];
  1504  000EBC  0EFF               	movlw	255
  1505  000EBE  0100               	movlb	0	; () banked
  1506  000EC0  6F60               	movwf	??_main& (0+255),b
  1507  000EC2  0EFF               	movlw	255
  1508  000EC4  0100               	movlb	0	; () banked
  1509  000EC6  6F61               	movwf	(??_main+1)& (0+255),b
  1510  000EC8  C01B  F062         	movff	_mq,??_main+2
  1511  000ECC  C01C  F063         	movff	_mq+1,??_main+3
  1512  000ED0  0100               	movlb	0	; () banked
  1513  000ED2  5160               	movf	??_main& (0+255),w,b
  1514  000ED4  0100               	movlb	0	; () banked
  1515  000ED6  2762               	addwf	(??_main+2)& (0+255),f,b
  1516  000ED8  0100               	movlb	0	; () banked
  1517  000EDA  5161               	movf	(??_main+1)& (0+255),w,b
  1518  000EDC  0100               	movlb	0	; () banked
  1519  000EDE  2363               	addwfc	(??_main+3)& (0+255),f,b
  1520  000EE0  0E01               	movlw	low _MQ
  1521  000EE2  0100               	movlb	0	; () banked
  1522  000EE4  2562               	addwf	(??_main+2)& (0+255),w,b
  1523  000EE6  6EF6               	movwf	tblptrl,c
  1524  000EE8  0E08               	movlw	high _MQ
  1525  000EEA  2163               	addwfc	(??_main+3)& (0+255),w,b
  1526  000EEC  6EF7               	movwf	tblptrh,c
  1527  000EEE                     	if	0	;There are less than 3 active tblptr bytes
  1528  000EEE                     	endif
  1529  000EEE  0008               	tblrd		*
  1530  000EF0  CFF5 F001          	movff	tablat,_disp
  1531  000EF4  D7A8               	goto	l1697
  1532  000EF6                     l1715:
  1533                           
  1534                           ; BSR set to: 0
  1535                           ;4-7seg.c: 239: disp[2]=MQ[mq+23];
  1536  000EF6  0E17               	movlw	23
  1537  000EF8  241B               	addwf	_mq,w,c
  1538  000EFA  0100               	movlb	0	; () banked
  1539  000EFC  6F60               	movwf	??_main& (0+255),b
  1540  000EFE  0E00               	movlw	0
  1541  000F00  201C               	addwfc	_mq+1,w,c
  1542  000F02  0100               	movlb	0	; () banked
  1543  000F04  6F61               	movwf	(??_main+1)& (0+255),b
  1544  000F06  0E01               	movlw	low _MQ
  1545  000F08  0100               	movlb	0	; () banked
  1546  000F0A  2560               	addwf	??_main& (0+255),w,b
  1547  000F0C  6EF6               	movwf	tblptrl,c
  1548  000F0E  0E08               	movlw	high _MQ
  1549  000F10  2161               	addwfc	(??_main+1)& (0+255),w,b
  1550  000F12  6EF7               	movwf	tblptrh,c
  1551  000F14                     	if	0	;There are less than 3 active tblptr bytes
  1552  000F14                     	endif
  1553  000F14  0008               	tblrd		*
  1554  000F16  CFF5 F003          	movff	tablat,_disp+2
  1555  000F1A  D7A8               	goto	l1701
  1556  000F1C                     l1719:
  1557                           
  1558                           ; BSR set to: 0
  1559                           ;4-7seg.c: 245: disp[0]=LED[0];
  1560  000F1C  0E31               	movlw	low _LED
  1561  000F1E  6EF6               	movwf	tblptrl,c
  1562  000F20                     	if	1	;There is more than 1 active tblptr byte
  1563  000F20  0E08               	movlw	high _LED
  1564  000F22  6EF7               	movwf	tblptrh,c
  1565  000F24                     	endif
  1566  000F24                     	if	0	;There are less than 3 active tblptr bytes
  1567  000F24                     	endif
  1568  000F24  0008               	tblrd		*
  1569  000F26  CFF5 F001          	movff	tablat,_disp
  1570                           
  1571                           ;4-7seg.c: 246: disp[1]=LED[0];
  1572  000F2A  0E31               	movlw	low _LED
  1573  000F2C  6EF6               	movwf	tblptrl,c
  1574  000F2E                     	if	1	;There is more than 1 active tblptr byte
  1575  000F2E  0E08               	movlw	high _LED
  1576  000F30  6EF7               	movwf	tblptrh,c
  1577  000F32                     	endif
  1578  000F32                     	if	0	;There are less than 3 active tblptr bytes
  1579  000F32                     	endif
  1580  000F32  0008               	tblrd		*
  1581  000F34  CFF5 F002          	movff	tablat,_disp+1
  1582                           
  1583                           ;4-7seg.c: 247: disp[2]=LED[0];
  1584  000F38  0E31               	movlw	low _LED
  1585  000F3A  6EF6               	movwf	tblptrl,c
  1586  000F3C                     	if	1	;There is more than 1 active tblptr byte
  1587  000F3C  0E08               	movlw	high _LED
  1588  000F3E  6EF7               	movwf	tblptrh,c
  1589  000F40                     	endif
  1590  000F40                     	if	0	;There are less than 3 active tblptr bytes
  1591  000F40                     	endif
  1592  000F40  0008               	tblrd		*
  1593  000F42  CFF5 F003          	movff	tablat,_disp+2
  1594                           
  1595                           ;4-7seg.c: 248: disp[3]=LED[0];
  1596  000F46  0E31               	movlw	low _LED
  1597  000F48  6EF6               	movwf	tblptrl,c
  1598  000F4A                     	if	1	;There is more than 1 active tblptr byte
  1599  000F4A  0E08               	movlw	high _LED
  1600  000F4C  6EF7               	movwf	tblptrh,c
  1601  000F4E                     	endif
  1602  000F4E                     	if	0	;There are less than 3 active tblptr bytes
  1603  000F4E  D5B7               	goto	L2
  1604  000F50                     l1723:
  1605                           
  1606                           ; BSR set to: 0
  1607  000F50  C007  F060         	movff	_a,??_main
  1608  000F54  C008  F061         	movff	_a+1,??_main+1
  1609                           
  1610                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1611                           ; Switch size 1, requested type "space"
  1612                           ; Number of cases is 1, Range of values is 0 to 0
  1613                           ; switch strategies available:
  1614                           ; Name         Instructions Cycles
  1615                           ; simple_byte            4     3 (average)
  1616                           ;	Chosen strategy is simple_byte
  1617  000F58  0100               	movlb	0	; () banked
  1618  000F5A  5161               	movf	(??_main+1)& (0+255),w,b
  1619  000F5C  0A00               	xorlw	0	; case 0
  1620  000F5E  A4D8               	btfss	status,2,c
  1621  000F60  D01A               	goto	l1725
  1622                           
  1623                           ; BSR set to: 0
  1624                           ; Switch size 1, requested type "space"
  1625                           ; Number of cases is 8, Range of values is 1 to 8
  1626                           ; switch strategies available:
  1627                           ; Name         Instructions Cycles
  1628                           ; simple_byte           25    13 (average)
  1629                           ;	Chosen strategy is simple_byte
  1630  000F62  0100               	movlb	0	; () banked
  1631  000F64  5160               	movf	??_main& (0+255),w,b
  1632  000F66  0A01               	xorlw	1	; case 1
  1633  000F68  B4D8               	btfsc	status,2,c
  1634  000F6A  D7D8               	goto	l1719
  1635  000F6C  0A03               	xorlw	3	; case 2
  1636  000F6E  B4D8               	btfsc	status,2,c
  1637  000F70  D528               	goto	l1611
  1638  000F72  0A01               	xorlw	1	; case 3
  1639  000F74  B4D8               	btfsc	status,2,c
  1640  000F76  D5A7               	goto	l1627
  1641  000F78  0A07               	xorlw	7	; case 4
  1642  000F7A  B4D8               	btfsc	status,2,c
  1643  000F7C  D621               	goto	l1643
  1644  000F7E  0A01               	xorlw	1	; case 5
  1645  000F80  B4D8               	btfsc	status,2,c
  1646  000F82  D6B6               	goto	l1665
  1647  000F84  0A03               	xorlw	3	; case 6
  1648  000F86  B4D8               	btfsc	status,2,c
  1649  000F88  D73E               	goto	l1687
  1650  000F8A  0A01               	xorlw	1	; case 7
  1651  000F8C  B4D8               	btfsc	status,2,c
  1652  000F8E  D77D               	goto	l1703
  1653  000F90  0A0F               	xorlw	15	; case 8
  1654  000F92  B4D8               	btfsc	status,2,c
  1655  000F94  D7C3               	goto	l1719
  1656  000F96                     l1725:
  1657                           
  1658                           ;4-7seg.c: 257: OutPortB=PORTB & 0xf0;
  1659  000F96  5081               	movf	3969,w,c	;volatile
  1660  000F98  0BF0               	andlw	240
  1661  000F9A  6E29               	movwf	_OutPortB,c
  1662                           
  1663                           ;4-7seg.c: 258: PORTD=0xff;
  1664  000F9C  6883               	setf	3971,c	;volatile
  1665                           
  1666                           ;4-7seg.c: 259: PORTB=OutPortB | 0x0f;
  1667  000F9E  5029               	movf	_OutPortB,w,c
  1668  000FA0  090F               	iorlw	15
  1669  000FA2  6E81               	movwf	3969,c	;volatile
  1670                           
  1671                           ;4-7seg.c: 260: if(++i>3)i=0;
  1672  000FA4  4A11               	infsnz	_i,f,c
  1673  000FA6  2A12               	incf	_i+1,f,c
  1674  000FA8  5012               	movf	_i+1,w,c
  1675  000FAA  E104               	bnz	u1280
  1676  000FAC  0E04               	movlw	4
  1677  000FAE  5C11               	subwf	_i,w,c
  1678  000FB0  A0D8               	btfss	status,0,c
  1679  000FB2  D004               	goto	l1731
  1680  000FB4                     u1280:
  1681  000FB4  0E00               	movlw	0
  1682  000FB6  6E12               	movwf	_i+1,c
  1683  000FB8  0E00               	movlw	0
  1684  000FBA  6E11               	movwf	_i,c
  1685  000FBC                     l1731:
  1686                           
  1687                           ;4-7seg.c: 261: OutPortB = OutPortB | (~ScanLine[i]);
  1688  000FBC  0E4A               	movlw	low _ScanLine
  1689  000FBE  2411               	addwf	_i,w,c
  1690  000FC0  6ED9               	movwf	fsr2l,c
  1691  000FC2  0E00               	movlw	high _ScanLine
  1692  000FC4  2012               	addwfc	_i+1,w,c
  1693  000FC6  6EDA               	movwf	fsr2h,c
  1694  000FC8  50DF               	movf	indf2,w,c
  1695  000FCA  0AFF               	xorlw	255
  1696  000FCC  1029               	iorwf	_OutPortB,w,c
  1697  000FCE  6E29               	movwf	_OutPortB,c
  1698                           
  1699                           ;4-7seg.c: 262: PORTB = OutPortB;
  1700  000FD0  C029  FF81         	movff	_OutPortB,3969	;volatile
  1701                           
  1702                           ;4-7seg.c: 263: PORTD=~disp[i];
  1703  000FD4  0E01               	movlw	low _disp
  1704  000FD6  2411               	addwf	_i,w,c
  1705  000FD8  6ED9               	movwf	fsr2l,c
  1706  000FDA  0E00               	movlw	high _disp
  1707  000FDC  2012               	addwfc	_i+1,w,c
  1708  000FDE  6EDA               	movwf	fsr2h,c
  1709  000FE0  50DF               	movf	indf2,w,c
  1710  000FE2  0AFF               	xorlw	255
  1711  000FE4  6E83               	movwf	3971,c	;volatile
  1712                           
  1713                           ;4-7seg.c: 267: if (T0Flag)
  1714  000FE6  502A               	movf	_T0Flag,w,c
  1715  000FE8  B4D8               	btfsc	status,2,c
  1716  000FEA  D459               	goto	l113
  1717                           
  1718                           ;4-7seg.c: 268: {
  1719                           ;4-7seg.c: 269: T0Flag = 0;
  1720  000FEC  0E00               	movlw	0
  1721  000FEE  6E2A               	movwf	_T0Flag,c
  1722                           
  1723                           ;4-7seg.c: 270: if(++r>1)
  1724  000FF0  4A1D               	infsnz	_r,f,c
  1725  000FF2  2A1E               	incf	_r+1,f,c
  1726  000FF4  BE1E               	btfsc	_r+1,7,c
  1727  000FF6  D00E               	goto	l1743
  1728  000FF8  501E               	movf	_r+1,w,c
  1729  000FFA  E104               	bnz	u1300
  1730  000FFC  0E02               	movlw	2
  1731  000FFE  5C1D               	subwf	_r,w,c
  1732  001000  A0D8               	btfss	status,0,c
  1733  001002  D008               	goto	l1743
  1734  001004                     u1300:
  1735                           
  1736                           ;4-7seg.c: 271: {
  1737                           ;4-7seg.c: 272: r=0;
  1738  001004  0E00               	movlw	0
  1739  001006  6E1E               	movwf	_r+1,c
  1740  001008  0E00               	movlw	0
  1741  00100A  6E1D               	movwf	_r,c
  1742                           
  1743                           ;4-7seg.c: 273: rrr=1;
  1744  00100C  0E00               	movlw	0
  1745  00100E  6E24               	movwf	_rrr+1,c
  1746  001010  0E01               	movlw	1
  1747  001012  6E23               	movwf	_rrr,c
  1748  001014                     l1743:
  1749                           
  1750                           ;4-7seg.c: 274: }
  1751                           ;4-7seg.c: 275: if(++e>14)
  1752  001014  4A0B               	infsnz	_e,f,c
  1753  001016  2A0C               	incf	_e+1,f,c
  1754  001018  BE0C               	btfsc	_e+1,7,c
  1755  00101A  D013               	goto	l1749
  1756  00101C  500C               	movf	_e+1,w,c
  1757  00101E  E104               	bnz	u1310
  1758  001020  0E0F               	movlw	15
  1759  001022  5C0B               	subwf	_e,w,c
  1760  001024  A0D8               	btfss	status,0,c
  1761  001026  D00D               	goto	l1749
  1762  001028                     u1310:
  1763                           
  1764                           ;4-7seg.c: 276: {
  1765                           ;4-7seg.c: 277: e=0;
  1766  001028  0E00               	movlw	0
  1767  00102A  6E0C               	movwf	_e+1,c
  1768  00102C  0E00               	movlw	0
  1769  00102E  6E0B               	movwf	_e,c
  1770                           
  1771                           ;4-7seg.c: 278: Timer250m=!Timer250m;
  1772  001030  5005               	movf	_Timer250m,w,c
  1773  001032  1006               	iorwf	_Timer250m+1,w,c
  1774  001034  A4D8               	btfss	status,2,c
  1775  001036  D002               	goto	u1320
  1776  001038  0E01               	movlw	1
  1777  00103A  D001               	goto	u1330
  1778  00103C                     u1320:
  1779  00103C  0E00               	movlw	0
  1780  00103E                     u1330:
  1781  00103E  6E05               	movwf	_Timer250m,c
  1782  001040  6A06               	clrf	_Timer250m+1,c
  1783  001042                     l1749:
  1784                           
  1785                           ;4-7seg.c: 279: }
  1786                           ;4-7seg.c: 280: if(++t>29)
  1787  001042  4A27               	infsnz	_t,f,c
  1788  001044  2A28               	incf	_t+1,f,c
  1789  001046  5028               	movf	_t+1,w,c
  1790  001048  E104               	bnz	u1340
  1791  00104A  0E1E               	movlw	30
  1792  00104C  5C27               	subwf	_t,w,c
  1793  00104E  A0D8               	btfss	status,0,c
  1794  001050  D426               	goto	l113
  1795  001052                     u1340:
  1796                           
  1797                           ;4-7seg.c: 281: {
  1798                           ;4-7seg.c: 282: t=0;
  1799  001052  0E00               	movlw	0
  1800  001054  6E28               	movwf	_t+1,c
  1801  001056  0E00               	movlw	0
  1802  001058  6E27               	movwf	_t,c
  1803                           
  1804                           ;4-7seg.c: 283: Timer500m=1;
  1805  00105A  0E01               	movlw	1
  1806  00105C  6E2C               	movwf	_Timer500m,c
  1807  00105E  D41F               	goto	l113
  1808  001060                     __end_of_main:
  1809                           	opt stack 0
  1810                           tblptru	equ	0xFF8
  1811                           tblptrh	equ	0xFF7
  1812                           tblptrl	equ	0xFF6
  1813                           tablat	equ	0xFF5
  1814                           intcon	equ	0xFF2
  1815                           postinc0	equ	0xFEE
  1816                           wreg	equ	0xFE8
  1817                           postdec1	equ	0xFE5
  1818                           fsr1l	equ	0xFE1
  1819                           indf2	equ	0xFDF
  1820                           fsr2h	equ	0xFDA
  1821                           fsr2l	equ	0xFD9
  1822                           status	equ	0xFD8
  1823                           
  1824 ;; *************** function ___lwmod *****************
  1825 ;; Defined at:
  1826 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwmod.c"
  1827 ;; Parameters:    Size  Location     Type
  1828 ;;  dividend        2   21[COMRAM] unsigned int 
  1829 ;;  divisor         2   23[COMRAM] unsigned int 
  1830 ;; Auto vars:     Size  Location     Type
  1831 ;;  counter         1   25[COMRAM] unsigned char 
  1832 ;; Return value:  Size  Location     Type
  1833 ;;                  2   21[COMRAM] unsigned int 
  1834 ;; Registers used:
  1835 ;;		wreg, status,2, status,0
  1836 ;; Tracked objects:
  1837 ;;		On entry : 0/0
  1838 ;;		On exit  : 0/0
  1839 ;;		Unchanged: 0/0
  1840 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1841 ;;      Params:         4       0       0       0       0       0       0       0       0
  1842 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1843 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1844 ;;      Totals:         5       0       0       0       0       0       0       0       0
  1845 ;;Total ram usage:        5 bytes
  1846 ;; Hardware stack levels used:    1
  1847 ;; Hardware stack levels required when called:    1
  1848 ;; This function calls:
  1849 ;;		Nothing
  1850 ;; This function is called by:
  1851 ;;		_main
  1852 ;; This function uses a non-reentrant model
  1853 ;;
  1854                           
  1855                           	psect	text1
  1856  001228                     __ptext1:
  1857                           	opt stack 0
  1858  001228                     ___lwmod:
  1859                           	opt stack 29
  1860                           
  1861                           ;incstack = 0
  1862  001228  5045               	movf	___lwmod@divisor,w,c
  1863  00122A  1046               	iorwf	___lwmod@divisor+1,w,c
  1864  00122C  B4D8               	btfsc	status,2,c
  1865  00122E  D018               	goto	l576
  1866  001230  0E01               	movlw	1
  1867  001232  6E47               	movwf	___lwmod@counter,c
  1868  001234  D004               	goto	l1247
  1869  001236                     l1245:
  1870  001236  90D8               	bcf	status,0,c
  1871  001238  3645               	rlcf	___lwmod@divisor,f,c
  1872  00123A  3646               	rlcf	___lwmod@divisor+1,f,c
  1873  00123C  2A47               	incf	___lwmod@counter,f,c
  1874  00123E                     l1247:
  1875  00123E  AE46               	btfss	___lwmod@divisor+1,7,c
  1876  001240  D7FA               	goto	l1245
  1877  001242                     l1249:
  1878  001242  5045               	movf	___lwmod@divisor,w,c
  1879  001244  5C43               	subwf	___lwmod@dividend,w,c
  1880  001246  5046               	movf	___lwmod@divisor+1,w,c
  1881  001248  5844               	subwfb	___lwmod@dividend+1,w,c
  1882  00124A  A0D8               	btfss	status,0,c
  1883  00124C  D004               	goto	l1253
  1884  00124E  5045               	movf	___lwmod@divisor,w,c
  1885  001250  5E43               	subwf	___lwmod@dividend,f,c
  1886  001252  5046               	movf	___lwmod@divisor+1,w,c
  1887  001254  5A44               	subwfb	___lwmod@dividend+1,f,c
  1888  001256                     l1253:
  1889  001256  90D8               	bcf	status,0,c
  1890  001258  3246               	rrcf	___lwmod@divisor+1,f,c
  1891  00125A  3245               	rrcf	___lwmod@divisor,f,c
  1892  00125C  2E47               	decfsz	___lwmod@counter,f,c
  1893  00125E  D7F1               	goto	l1249
  1894  001260                     l576:
  1895  001260  C043  F043         	movff	___lwmod@dividend,?___lwmod
  1896  001264  C044  F044         	movff	___lwmod@dividend+1,?___lwmod+1
  1897  001268  0012               	return		;funcret
  1898  00126A                     __end_of___lwmod:
  1899                           	opt stack 0
  1900                           tblptru	equ	0xFF8
  1901                           tblptrh	equ	0xFF7
  1902                           tblptrl	equ	0xFF6
  1903                           tablat	equ	0xFF5
  1904                           intcon	equ	0xFF2
  1905                           postinc0	equ	0xFEE
  1906                           wreg	equ	0xFE8
  1907                           postdec1	equ	0xFE5
  1908                           fsr1l	equ	0xFE1
  1909                           indf2	equ	0xFDF
  1910                           fsr2h	equ	0xFDA
  1911                           fsr2l	equ	0xFD9
  1912                           status	equ	0xFD8
  1913                           
  1914 ;; *************** function ___lwdiv *****************
  1915 ;; Defined at:
  1916 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwdiv.c"
  1917 ;; Parameters:    Size  Location     Type
  1918 ;;  dividend        2   14[COMRAM] unsigned int 
  1919 ;;  divisor         2   16[COMRAM] unsigned int 
  1920 ;; Auto vars:     Size  Location     Type
  1921 ;;  quotient        2   18[COMRAM] unsigned int 
  1922 ;;  counter         1   20[COMRAM] unsigned char 
  1923 ;; Return value:  Size  Location     Type
  1924 ;;                  2   14[COMRAM] unsigned int 
  1925 ;; Registers used:
  1926 ;;		wreg, status,2, status,0
  1927 ;; Tracked objects:
  1928 ;;		On entry : 0/0
  1929 ;;		On exit  : 0/0
  1930 ;;		Unchanged: 0/0
  1931 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1932 ;;      Params:         4       0       0       0       0       0       0       0       0
  1933 ;;      Locals:         3       0       0       0       0       0       0       0       0
  1934 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1935 ;;      Totals:         7       0       0       0       0       0       0       0       0
  1936 ;;Total ram usage:        7 bytes
  1937 ;; Hardware stack levels used:    1
  1938 ;; Hardware stack levels required when called:    1
  1939 ;; This function calls:
  1940 ;;		Nothing
  1941 ;; This function is called by:
  1942 ;;		_main
  1943 ;; This function uses a non-reentrant model
  1944 ;;
  1945                           
  1946                           	psect	text2
  1947  0011D6                     __ptext2:
  1948                           	opt stack 0
  1949  0011D6                     ___lwdiv:
  1950                           	opt stack 29
  1951                           
  1952                           ;incstack = 0
  1953  0011D6  0E00               	movlw	0
  1954  0011D8  6E41               	movwf	___lwdiv@quotient+1,c
  1955  0011DA  0E00               	movlw	0
  1956  0011DC  6E40               	movwf	___lwdiv@quotient,c
  1957  0011DE  503E               	movf	___lwdiv@divisor,w,c
  1958  0011E0  103F               	iorwf	___lwdiv@divisor+1,w,c
  1959  0011E2  B4D8               	btfsc	status,2,c
  1960  0011E4  D01C               	goto	l566
  1961  0011E6  0E01               	movlw	1
  1962  0011E8  6E42               	movwf	___lwdiv@counter,c
  1963  0011EA  D004               	goto	l1227
  1964  0011EC                     l1225:
  1965  0011EC  90D8               	bcf	status,0,c
  1966  0011EE  363E               	rlcf	___lwdiv@divisor,f,c
  1967  0011F0  363F               	rlcf	___lwdiv@divisor+1,f,c
  1968  0011F2  2A42               	incf	___lwdiv@counter,f,c
  1969  0011F4                     l1227:
  1970  0011F4  AE3F               	btfss	___lwdiv@divisor+1,7,c
  1971  0011F6  D7FA               	goto	l1225
  1972  0011F8                     l1229:
  1973  0011F8  90D8               	bcf	status,0,c
  1974  0011FA  3640               	rlcf	___lwdiv@quotient,f,c
  1975  0011FC  3641               	rlcf	___lwdiv@quotient+1,f,c
  1976  0011FE  503E               	movf	___lwdiv@divisor,w,c
  1977  001200  5C3C               	subwf	___lwdiv@dividend,w,c
  1978  001202  503F               	movf	___lwdiv@divisor+1,w,c
  1979  001204  583D               	subwfb	___lwdiv@dividend+1,w,c
  1980  001206  A0D8               	btfss	status,0,c
  1981  001208  D005               	goto	l1237
  1982  00120A  503E               	movf	___lwdiv@divisor,w,c
  1983  00120C  5E3C               	subwf	___lwdiv@dividend,f,c
  1984  00120E  503F               	movf	___lwdiv@divisor+1,w,c
  1985  001210  5A3D               	subwfb	___lwdiv@dividend+1,f,c
  1986  001212  8040               	bsf	___lwdiv@quotient,0,c
  1987  001214                     l1237:
  1988  001214  90D8               	bcf	status,0,c
  1989  001216  323F               	rrcf	___lwdiv@divisor+1,f,c
  1990  001218  323E               	rrcf	___lwdiv@divisor,f,c
  1991  00121A  2E42               	decfsz	___lwdiv@counter,f,c
  1992  00121C  D7ED               	goto	l1229
  1993  00121E                     l566:
  1994  00121E  C040  F03C         	movff	___lwdiv@quotient,?___lwdiv
  1995  001222  C041  F03D         	movff	___lwdiv@quotient+1,?___lwdiv+1
  1996  001226  0012               	return		;funcret
  1997  001228                     __end_of___lwdiv:
  1998                           	opt stack 0
  1999                           tblptru	equ	0xFF8
  2000                           tblptrh	equ	0xFF7
  2001                           tblptrl	equ	0xFF6
  2002                           tablat	equ	0xFF5
  2003                           intcon	equ	0xFF2
  2004                           postinc0	equ	0xFEE
  2005                           wreg	equ	0xFE8
  2006                           postdec1	equ	0xFE5
  2007                           fsr1l	equ	0xFE1
  2008                           indf2	equ	0xFDF
  2009                           fsr2h	equ	0xFDA
  2010                           fsr2l	equ	0xFD9
  2011                           status	equ	0xFD8
  2012                           
  2013 ;; *************** function ___awmod *****************
  2014 ;; Defined at:
  2015 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awmod.c"
  2016 ;; Parameters:    Size  Location     Type
  2017 ;;  dividend        2   22[COMRAM] int 
  2018 ;;  divisor         2   24[COMRAM] int 
  2019 ;; Auto vars:     Size  Location     Type
  2020 ;;  sign            1   27[COMRAM] unsigned char 
  2021 ;;  counter         1   26[COMRAM] unsigned char 
  2022 ;; Return value:  Size  Location     Type
  2023 ;;                  2   22[COMRAM] int 
  2024 ;; Registers used:
  2025 ;;		wreg, status,2, status,0
  2026 ;; Tracked objects:
  2027 ;;		On entry : 0/0
  2028 ;;		On exit  : 0/0
  2029 ;;		Unchanged: 0/0
  2030 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2031 ;;      Params:         4       0       0       0       0       0       0       0       0
  2032 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2033 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2034 ;;      Totals:         6       0       0       0       0       0       0       0       0
  2035 ;;Total ram usage:        6 bytes
  2036 ;; Hardware stack levels used:    1
  2037 ;; Hardware stack levels required when called:    1
  2038 ;; This function calls:
  2039 ;;		Nothing
  2040 ;; This function is called by:
  2041 ;;		_main
  2042 ;; This function uses a non-reentrant model
  2043 ;;
  2044                           
  2045                           	psect	text3
  2046  001166                     __ptext3:
  2047                           	opt stack 0
  2048  001166                     ___awmod:
  2049                           	opt stack 29
  2050                           
  2051                           ;incstack = 0
  2052  001166  0E00               	movlw	0
  2053  001168  6E49               	movwf	___awmod@sign,c
  2054  00116A  AE45               	btfss	___awmod@dividend+1,7,c
  2055  00116C  D006               	goto	l1191
  2056  00116E  6C44               	negf	___awmod@dividend,c
  2057  001170  1E45               	comf	___awmod@dividend+1,f,c
  2058  001172  B0D8               	btfsc	status,0,c
  2059  001174  2A45               	incf	___awmod@dividend+1,f,c
  2060  001176  0E01               	movlw	1
  2061  001178  6E49               	movwf	___awmod@sign,c
  2062  00117A                     l1191:
  2063  00117A  AE47               	btfss	___awmod@divisor+1,7,c
  2064  00117C  D004               	goto	l1195
  2065  00117E  6C46               	negf	___awmod@divisor,c
  2066  001180  1E47               	comf	___awmod@divisor+1,f,c
  2067  001182  B0D8               	btfsc	status,0,c
  2068  001184  2A47               	incf	___awmod@divisor+1,f,c
  2069  001186                     l1195:
  2070  001186  5046               	movf	___awmod@divisor,w,c
  2071  001188  1047               	iorwf	___awmod@divisor+1,w,c
  2072  00118A  B4D8               	btfsc	status,2,c
  2073  00118C  D018               	goto	l1211
  2074  00118E  0E01               	movlw	1
  2075  001190  6E48               	movwf	___awmod@counter,c
  2076  001192  D004               	goto	l1201
  2077  001194                     l1199:
  2078  001194  90D8               	bcf	status,0,c
  2079  001196  3646               	rlcf	___awmod@divisor,f,c
  2080  001198  3647               	rlcf	___awmod@divisor+1,f,c
  2081  00119A  2A48               	incf	___awmod@counter,f,c
  2082  00119C                     l1201:
  2083  00119C  AE47               	btfss	___awmod@divisor+1,7,c
  2084  00119E  D7FA               	goto	l1199
  2085  0011A0                     l1203:
  2086  0011A0  5046               	movf	___awmod@divisor,w,c
  2087  0011A2  5C44               	subwf	___awmod@dividend,w,c
  2088  0011A4  5047               	movf	___awmod@divisor+1,w,c
  2089  0011A6  5845               	subwfb	___awmod@dividend+1,w,c
  2090  0011A8  A0D8               	btfss	status,0,c
  2091  0011AA  D004               	goto	l1207
  2092  0011AC  5046               	movf	___awmod@divisor,w,c
  2093  0011AE  5E44               	subwf	___awmod@dividend,f,c
  2094  0011B0  5047               	movf	___awmod@divisor+1,w,c
  2095  0011B2  5A45               	subwfb	___awmod@dividend+1,f,c
  2096  0011B4                     l1207:
  2097  0011B4  90D8               	bcf	status,0,c
  2098  0011B6  3247               	rrcf	___awmod@divisor+1,f,c
  2099  0011B8  3246               	rrcf	___awmod@divisor,f,c
  2100  0011BA  2E48               	decfsz	___awmod@counter,f,c
  2101  0011BC  D7F1               	goto	l1203
  2102  0011BE                     l1211:
  2103  0011BE  5049               	movf	___awmod@sign,w,c
  2104  0011C0  B4D8               	btfsc	status,2,c
  2105  0011C2  D004               	goto	l1215
  2106  0011C4  6C44               	negf	___awmod@dividend,c
  2107  0011C6  1E45               	comf	___awmod@dividend+1,f,c
  2108  0011C8  B0D8               	btfsc	status,0,c
  2109  0011CA  2A45               	incf	___awmod@dividend+1,f,c
  2110  0011CC                     l1215:
  2111  0011CC  C044  F044         	movff	___awmod@dividend,?___awmod
  2112  0011D0  C045  F045         	movff	___awmod@dividend+1,?___awmod+1
  2113  0011D4  0012               	return	
  2114  0011D6                     __end_of___awmod:
  2115                           	opt stack 0
  2116                           tblptru	equ	0xFF8
  2117                           tblptrh	equ	0xFF7
  2118                           tblptrl	equ	0xFF6
  2119                           tablat	equ	0xFF5
  2120                           intcon	equ	0xFF2
  2121                           postinc0	equ	0xFEE
  2122                           wreg	equ	0xFE8
  2123                           postdec1	equ	0xFE5
  2124                           fsr1l	equ	0xFE1
  2125                           indf2	equ	0xFDF
  2126                           fsr2h	equ	0xFDA
  2127                           fsr2l	equ	0xFD9
  2128                           status	equ	0xFD8
  2129                           
  2130 ;; *************** function ___awdiv *****************
  2131 ;; Defined at:
  2132 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awdiv.c"
  2133 ;; Parameters:    Size  Location     Type
  2134 ;;  dividend        2   14[COMRAM] int 
  2135 ;;  divisor         2   16[COMRAM] int 
  2136 ;; Auto vars:     Size  Location     Type
  2137 ;;  quotient        2   20[COMRAM] int 
  2138 ;;  sign            1   19[COMRAM] unsigned char 
  2139 ;;  counter         1   18[COMRAM] unsigned char 
  2140 ;; Return value:  Size  Location     Type
  2141 ;;                  2   14[COMRAM] int 
  2142 ;; Registers used:
  2143 ;;		wreg, status,2, status,0
  2144 ;; Tracked objects:
  2145 ;;		On entry : 0/0
  2146 ;;		On exit  : 0/0
  2147 ;;		Unchanged: 0/0
  2148 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2149 ;;      Params:         4       0       0       0       0       0       0       0       0
  2150 ;;      Locals:         4       0       0       0       0       0       0       0       0
  2151 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2152 ;;      Totals:         8       0       0       0       0       0       0       0       0
  2153 ;;Total ram usage:        8 bytes
  2154 ;; Hardware stack levels used:    1
  2155 ;; Hardware stack levels required when called:    1
  2156 ;; This function calls:
  2157 ;;		Nothing
  2158 ;; This function is called by:
  2159 ;;		_main
  2160 ;; This function uses a non-reentrant model
  2161 ;;
  2162                           
  2163                           	psect	text4
  2164  001060                     __ptext4:
  2165                           	opt stack 0
  2166  001060                     ___awdiv:
  2167                           	opt stack 29
  2168                           
  2169                           ;incstack = 0
  2170  001060  0E00               	movlw	0
  2171  001062  6E41               	movwf	___awdiv@sign,c
  2172  001064  AE3F               	btfss	___awdiv@divisor+1,7,c
  2173  001066  D006               	goto	l1147
  2174  001068  6C3E               	negf	___awdiv@divisor,c
  2175  00106A  1E3F               	comf	___awdiv@divisor+1,f,c
  2176  00106C  B0D8               	btfsc	status,0,c
  2177  00106E  2A3F               	incf	___awdiv@divisor+1,f,c
  2178  001070  0E01               	movlw	1
  2179  001072  6E41               	movwf	___awdiv@sign,c
  2180  001074                     l1147:
  2181  001074  AE3D               	btfss	___awdiv@dividend+1,7,c
  2182  001076  D006               	goto	l1153
  2183  001078  6C3C               	negf	___awdiv@dividend,c
  2184  00107A  1E3D               	comf	___awdiv@dividend+1,f,c
  2185  00107C  B0D8               	btfsc	status,0,c
  2186  00107E  2A3D               	incf	___awdiv@dividend+1,f,c
  2187  001080  0E01               	movlw	1
  2188  001082  1A41               	xorwf	___awdiv@sign,f,c
  2189  001084                     l1153:
  2190  001084  0E00               	movlw	0
  2191  001086  6E43               	movwf	___awdiv@quotient+1,c
  2192  001088  0E00               	movlw	0
  2193  00108A  6E42               	movwf	___awdiv@quotient,c
  2194  00108C  503E               	movf	___awdiv@divisor,w,c
  2195  00108E  103F               	iorwf	___awdiv@divisor+1,w,c
  2196  001090  B4D8               	btfsc	status,2,c
  2197  001092  D01C               	goto	l1175
  2198  001094  0E01               	movlw	1
  2199  001096  6E40               	movwf	___awdiv@counter,c
  2200  001098  D004               	goto	l1161
  2201  00109A                     l1159:
  2202  00109A  90D8               	bcf	status,0,c
  2203  00109C  363E               	rlcf	___awdiv@divisor,f,c
  2204  00109E  363F               	rlcf	___awdiv@divisor+1,f,c
  2205  0010A0  2A40               	incf	___awdiv@counter,f,c
  2206  0010A2                     l1161:
  2207  0010A2  AE3F               	btfss	___awdiv@divisor+1,7,c
  2208  0010A4  D7FA               	goto	l1159
  2209  0010A6                     l1163:
  2210  0010A6  90D8               	bcf	status,0,c
  2211  0010A8  3642               	rlcf	___awdiv@quotient,f,c
  2212  0010AA  3643               	rlcf	___awdiv@quotient+1,f,c
  2213  0010AC  503E               	movf	___awdiv@divisor,w,c
  2214  0010AE  5C3C               	subwf	___awdiv@dividend,w,c
  2215  0010B0  503F               	movf	___awdiv@divisor+1,w,c
  2216  0010B2  583D               	subwfb	___awdiv@dividend+1,w,c
  2217  0010B4  A0D8               	btfss	status,0,c
  2218  0010B6  D005               	goto	l1171
  2219  0010B8  503E               	movf	___awdiv@divisor,w,c
  2220  0010BA  5E3C               	subwf	___awdiv@dividend,f,c
  2221  0010BC  503F               	movf	___awdiv@divisor+1,w,c
  2222  0010BE  5A3D               	subwfb	___awdiv@dividend+1,f,c
  2223  0010C0  8042               	bsf	___awdiv@quotient,0,c
  2224  0010C2                     l1171:
  2225  0010C2  90D8               	bcf	status,0,c
  2226  0010C4  323F               	rrcf	___awdiv@divisor+1,f,c
  2227  0010C6  323E               	rrcf	___awdiv@divisor,f,c
  2228  0010C8  2E40               	decfsz	___awdiv@counter,f,c
  2229  0010CA  D7ED               	goto	l1163
  2230  0010CC                     l1175:
  2231  0010CC  5041               	movf	___awdiv@sign,w,c
  2232  0010CE  B4D8               	btfsc	status,2,c
  2233  0010D0  D004               	goto	l1179
  2234  0010D2  6C42               	negf	___awdiv@quotient,c
  2235  0010D4  1E43               	comf	___awdiv@quotient+1,f,c
  2236  0010D6  B0D8               	btfsc	status,0,c
  2237  0010D8  2A43               	incf	___awdiv@quotient+1,f,c
  2238  0010DA                     l1179:
  2239  0010DA  C042  F03C         	movff	___awdiv@quotient,?___awdiv
  2240  0010DE  C043  F03D         	movff	___awdiv@quotient+1,?___awdiv+1
  2241  0010E2  0012               	return	
  2242  0010E4                     __end_of___awdiv:
  2243                           	opt stack 0
  2244                           tblptru	equ	0xFF8
  2245                           tblptrh	equ	0xFF7
  2246                           tblptrl	equ	0xFF6
  2247                           tablat	equ	0xFF5
  2248                           intcon	equ	0xFF2
  2249                           postinc0	equ	0xFEE
  2250                           wreg	equ	0xFE8
  2251                           postdec1	equ	0xFE5
  2252                           fsr1l	equ	0xFE1
  2253                           indf2	equ	0xFDF
  2254                           fsr2h	equ	0xFDA
  2255                           fsr2l	equ	0xFD9
  2256                           status	equ	0xFD8
  2257                           
  2258 ;; *************** function _HighISR *****************
  2259 ;; Defined at:
  2260 ;;		line 290 in file "4-7seg.c"
  2261 ;; Parameters:    Size  Location     Type
  2262 ;;		None
  2263 ;; Auto vars:     Size  Location     Type
  2264 ;;		None
  2265 ;; Return value:  Size  Location     Type
  2266 ;;		None               void
  2267 ;; Registers used:
  2268 ;;		wreg, status,2
  2269 ;; Tracked objects:
  2270 ;;		On entry : 0/0
  2271 ;;		On exit  : 0/0
  2272 ;;		Unchanged: 0/0
  2273 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2274 ;;      Params:         0       0       0       0       0       0       0       0       0
  2275 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2276 ;;      Temps:         14       0       0       0       0       0       0       0       0
  2277 ;;      Totals:        14       0       0       0       0       0       0       0       0
  2278 ;;Total ram usage:       14 bytes
  2279 ;; Hardware stack levels used:    1
  2280 ;; This function calls:
  2281 ;;		Nothing
  2282 ;; This function is called by:
  2283 ;;		Interrupt level 2
  2284 ;; This function uses a non-reentrant model
  2285 ;;
  2286                           
  2287                           	psect	intcode
  2288  000008                     __pintcode:
  2289                           	opt stack 0
  2290  000008                     _HighISR:
  2291                           	opt stack 29
  2292                           
  2293                           ;incstack = 0
  2294  000008  824E               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  2295  00000A  CFFA F02E          	movff	pclath,??_HighISR
  2296  00000E  CFFB F02F          	movff	pclatu,??_HighISR+1
  2297  000012  ED72  F008         	call	int_func,f	;refresh shadow registers
  2298                           pclatu	equ	0xFFB
  2299                           pclath	equ	0xFFA
  2300                           tblptru	equ	0xFF8
  2301                           tblptrh	equ	0xFF7
  2302                           tblptrl	equ	0xFF6
  2303                           tablat	equ	0xFF5
  2304                           intcon	equ	0xFF2
  2305                           postinc0	equ	0xFEE
  2306                           wreg	equ	0xFE8
  2307                           postdec1	equ	0xFE5
  2308                           fsr1l	equ	0xFE1
  2309                           indf2	equ	0xFDF
  2310                           fsr2h	equ	0xFDA
  2311                           fsr2l	equ	0xFD9
  2312                           status	equ	0xFD8
  2313                           
  2314                           	psect	intcode_body
  2315  0010E4                     __pintcode_body:
  2316                           	opt stack 29
  2317  0010E4                     int_func:
  2318                           	opt stack 29
  2319  0010E4  0006               	pop		; remove dummy address from shadow register refresh
  2320  0010E6  CFE9 F030          	movff	fsr0l,??_HighISR+2
  2321  0010EA  CFEA F031          	movff	fsr0h,??_HighISR+3
  2322  0010EE  CFE1 F032          	movff	fsr1l,??_HighISR+4
  2323  0010F2  CFE2 F033          	movff	fsr1h,??_HighISR+5
  2324  0010F6  CFD9 F034          	movff	fsr2l,??_HighISR+6
  2325  0010FA  CFDA F035          	movff	fsr2h,??_HighISR+7
  2326  0010FE  CFF3 F036          	movff	prodl,??_HighISR+8
  2327  001102  CFF4 F037          	movff	prodh,??_HighISR+9
  2328  001106  CFF6 F038          	movff	tblptrl,??_HighISR+10
  2329  00110A  CFF7 F039          	movff	tblptrh,??_HighISR+11
  2330  00110E  CFF8 F03A          	movff	tblptru,??_HighISR+12
  2331  001112  CFF5 F03B          	movff	tablat,??_HighISR+13
  2332                           
  2333                           ;4-7seg.c: 292: if (TMR0IE && TMR0IF)
  2334  001116  BAF2               	btfsc	intcon,5,c	;volatile
  2335  001118  A4F2               	btfss	intcon,2,c	;volatile
  2336  00111A  D007               	goto	i2l163
  2337                           
  2338                           ;4-7seg.c: 293: {
  2339                           ;4-7seg.c: 294: ((void)(TMR0H=((65536-521)>>8),TMR0L=((65536-521)&0xFF)));
  2340  00111C  0EFD               	movlw	253
  2341  00111E  6ED7               	movwf	4055,c	;volatile
  2342  001120  0EF7               	movlw	247
  2343  001122  6ED6               	movwf	4054,c	;volatile
  2344                           
  2345                           ;4-7seg.c: 295: TMR0IF=0;
  2346  001124  94F2               	bcf	intcon,2,c	;volatile
  2347                           
  2348                           ;4-7seg.c: 296: T0Flag = 1;
  2349  001126  0E01               	movlw	1
  2350  001128  6E2A               	movwf	_T0Flag,c
  2351  00112A                     i2l163:
  2352  00112A  C03B  FFF5         	movff	??_HighISR+13,tablat
  2353  00112E  C03A  FFF8         	movff	??_HighISR+12,tblptru
  2354  001132  C039  FFF7         	movff	??_HighISR+11,tblptrh
  2355  001136  C038  FFF6         	movff	??_HighISR+10,tblptrl
  2356  00113A  C037  FFF4         	movff	??_HighISR+9,prodh
  2357  00113E  C036  FFF3         	movff	??_HighISR+8,prodl
  2358  001142  C035  FFDA         	movff	??_HighISR+7,fsr2h
  2359  001146  C034  FFD9         	movff	??_HighISR+6,fsr2l
  2360  00114A  C033  FFE2         	movff	??_HighISR+5,fsr1h
  2361  00114E  C032  FFE1         	movff	??_HighISR+4,fsr1l
  2362  001152  C031  FFEA         	movff	??_HighISR+3,fsr0h
  2363  001156  C030  FFE9         	movff	??_HighISR+2,fsr0l
  2364  00115A  C02F  FFFB         	movff	??_HighISR+1,pclatu
  2365  00115E  C02E  FFFA         	movff	??_HighISR,pclath
  2366  001162  924E               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  2367  001164  0011               	retfie		f
  2368  001166                     __end_of_HighISR:
  2369                           	opt stack 0
  2370                           pclatu	equ	0xFFB
  2371                           pclath	equ	0xFFA
  2372                           tblptru	equ	0xFF8
  2373                           tblptrh	equ	0xFF7
  2374                           tblptrl	equ	0xFF6
  2375                           tablat	equ	0xFF5
  2376                           prodh	equ	0xFF4
  2377                           prodl	equ	0xFF3
  2378                           intcon	equ	0xFF2
  2379                           postinc0	equ	0xFEE
  2380                           fsr0h	equ	0xFEA
  2381                           fsr0l	equ	0xFE9
  2382                           wreg	equ	0xFE8
  2383                           postdec1	equ	0xFE5
  2384                           fsr1h	equ	0xFE2
  2385                           fsr1l	equ	0xFE1
  2386                           indf2	equ	0xFDF
  2387                           fsr2h	equ	0xFDA
  2388                           fsr2l	equ	0xFD9
  2389                           status	equ	0xFD8
  2390                           pclatu	equ	0xFFB
  2391                           pclath	equ	0xFFA
  2392                           tblptru	equ	0xFF8
  2393                           tblptrh	equ	0xFF7
  2394                           tblptrl	equ	0xFF6
  2395                           tablat	equ	0xFF5
  2396                           prodh	equ	0xFF4
  2397                           prodl	equ	0xFF3
  2398                           intcon	equ	0xFF2
  2399                           postinc0	equ	0xFEE
  2400                           fsr0h	equ	0xFEA
  2401                           fsr0l	equ	0xFE9
  2402                           wreg	equ	0xFE8
  2403                           postdec1	equ	0xFE5
  2404                           fsr1h	equ	0xFE2
  2405                           fsr1l	equ	0xFE1
  2406                           indf2	equ	0xFDF
  2407                           fsr2h	equ	0xFDA
  2408                           fsr2l	equ	0xFD9
  2409                           status	equ	0xFD8
  2410                           
  2411                           	psect	rparam
  2412  0000                     pclatu	equ	0xFFB
  2413                           pclath	equ	0xFFA
  2414                           tblptru	equ	0xFF8
  2415                           tblptrh	equ	0xFF7
  2416                           tblptrl	equ	0xFF6
  2417                           tablat	equ	0xFF5
  2418                           prodh	equ	0xFF4
  2419                           prodl	equ	0xFF3
  2420                           intcon	equ	0xFF2
  2421                           postinc0	equ	0xFEE
  2422                           fsr0h	equ	0xFEA
  2423                           fsr0l	equ	0xFE9
  2424                           wreg	equ	0xFE8
  2425                           postdec1	equ	0xFE5
  2426                           fsr1h	equ	0xFE2
  2427                           fsr1l	equ	0xFE1
  2428                           indf2	equ	0xFDF
  2429                           fsr2h	equ	0xFDA
  2430                           fsr2l	equ	0xFD9
  2431                           status	equ	0xFD8
  2432                           
  2433                           	psect	temp
  2434  00004E                     btemp:
  2435                           	opt stack 0
  2436  00004E                     	ds	1
  2437  0000                     int$flags	set	btemp
  2438                           pclatu	equ	0xFFB
  2439                           pclath	equ	0xFFA
  2440                           tblptru	equ	0xFF8
  2441                           tblptrh	equ	0xFF7
  2442                           tblptrl	equ	0xFF6
  2443                           tablat	equ	0xFF5
  2444                           prodh	equ	0xFF4
  2445                           prodl	equ	0xFF3
  2446                           intcon	equ	0xFF2
  2447                           postinc0	equ	0xFEE
  2448                           fsr0h	equ	0xFEA
  2449                           fsr0l	equ	0xFE9
  2450                           wreg	equ	0xFE8
  2451                           postdec1	equ	0xFE5
  2452                           fsr1h	equ	0xFE2
  2453                           fsr1l	equ	0xFE1
  2454                           indf2	equ	0xFDF
  2455                           fsr2h	equ	0xFDA
  2456                           fsr2l	equ	0xFD9
  2457                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    84
    Data        4
    BSS         45
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     28      77
    BANK0           160      4       4
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           239      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->___awmod
    ___lwmod->___lwdiv
    ___awmod->___awdiv

Critical Paths under _HighISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0    3325
                                              0 BANK0      4     4      0
                            ___awdiv
                            ___awmod
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (1) ___lwmod                                              5     1      4    1019
                                             21 COMRAM     5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (1) ___lwdiv                                              7     3      4     506
                                             14 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (1) ___awmod                                              6     2      4     984
                                             22 COMRAM     6     2      4
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              8     4      4     816
                                             14 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _HighISR                                             14    14      0       0
                                              0 COMRAM    14    14      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___awdiv
   ___awmod
     ___awdiv (ARG)
   ___lwdiv
   ___lwmod
     ___lwdiv (ARG)

 _HighISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM_1           400      0       0      21        0.0%
BIGRAM             3EE      0       0      22        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK3            EF      0       0      12        0.0%
BANK3               EF      0       0      10        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      4       4       5        2.5%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     1C      4D       1       81.9%
BITSFR_5             0      0       0      40        0.0%
SFR_5                0      0       0      40        0.0%
BITSFR_4             0      0       0      40        0.0%
SFR_4                0      0       0      40        0.0%
BITSFR_3             0      0       0      40        0.0%
SFR_3                0      0       0      40        0.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      51      11        0.0%
DATA                 0      0      51       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Mon Oct 26 21:23:34 2015

                      _a 0007                        _e 000B                        _i 0011  
                      _r 001D                        _t 0027                       _MQ 0801  
           ___awdiv@sign 0041                       _mq 001B              __CFG_BORV$1 000000  
                    l113 089E                      l566 121E                      l576 1260  
                    _LED 0831                      _ggg 000D                      _col 0009  
                    _min 0019                      _sec 0025                      _hur 000F  
                    _row 001F                      _rrr 0023             ___awmod@sign 0049  
                    wreg 000FE8             __CFG_FOSC$HS 000000             __CFG_LVP$OFF 000000  
           __CFG_WDT$OFF 000000                     l1201 119C                     l1203 11A0  
                   l1211 11BE                     l1215 11CC                     l1207 11B4  
                   l1161 10A2                     l1153 1084                     l1225 11EC  
                   l1171 10C2                     l1163 10A6                     l1147 1074  
                   l1227 11F4                     l1237 1214                     l1229 11F8  
                   l1253 1256                     l1245 1236                     l1159 109A  
                   l1175 10CC                     l1191 117A                     l1247 123E  
                   l1249 1242                     l1179 10DA                     l1195 1186  
                   l1611 09C2                     l1603 099E                     l1701 0E6C  
                   l1199 1194                     l1711 0EBC                     l1703 0E8A  
                   l1607 09AE                     l1731 0FBC                     l1715 0EF6  
                   l1643 0BC0                     l1635 0AF2                     l1627 0AC6  
                   l1619 09FA                     l1723 0F50                     l1725 0F96  
                   l1743 1014                     l1719 0F1C                     l1663 0C9C  
                   l1655 0C1A                     l1591 0944                     l1583 0920  
                   l1665 0CF0                     l1569 08C0                     l1595 0956  
                   l1587 0932                     l1749 1042                     l1685 0DAC  
                   l1677 0D2A                     l1687 0E06                     l1599 0998  
                   l1697 0E46                     u1300 1004                     u1310 1028  
                   u1320 103C                     u1330 103E                     u1250 0E3C  
                   u1170 0BEA                     u1340 1052                     u1180 0C12  
                   _LATB 000F8A                     u1280 0FB4                     _LATD 000F8C  
                   _disp 0001                     _main 0856                     fsr0h 000FEA  
                   fsr1h 000FE2                     fsr0l 000FE9                     fsr2h 000FDA  
                   fsr1l 000FE1                     indf2 000FDF                     fsr2l 000FD9  
                   btemp 004E                     pclat 000FFA                     prodh 000FF4  
                   prodl 000FF3                     start 0016          __end_of_HighISR 1166  
          __CFG_MCLRE$ON 000000             ___param_bank 000010                    ?_main 002E  
        __end_of___awdiv 10E4          __end_of___awmod 11D6          ___awdiv@divisor 003E  
        __end_of___lwdiv 1228          __end_of___lwmod 126A                    i2l163 112A  
        ___awdiv@counter 0040                    _TMR0H 000FD7                    _TMR0L 000FD6  
                  _PORTB 000F81                    _PORTD 000F83                    _PORTE 000F84  
                  _TRISD 000F95                    _kcode 0015                    _inval 0013  
                  tablat 000FF5                    status 000FD8          __initialization 126A  
           __end_of_main 1060                   ??_main 0060            __activetblptr 000002  
                 _ADCON1 000FC1         ___awdiv@dividend 003C                   _T0Flag 002A  
              ??_HighISR 002E                   _TMR0IE 007F95                   _TMR0IF 007F92  
                 _TRISB0 007C98                   _TRISB1 007C99                   _TRISB2 007C9A  
                 _TRISB3 007C9B                   _TRISB4 007C9C                   _TRISB5 007C9D  
                 _TRISE0 007CB0                   _TRISB6 007C9E                   _TRISE1 007CB1  
                 _TRISB7 007C9F                   _TRISE2 007CB2                   _TRISC6 007CA6  
                 _TRISC7 007CA7                   _KeyMap 0845           __CFG_XINST$OFF 000000  
              ??___awdiv 0040                ??___awmod 0048                ??___lwdiv 0040  
              ??___lwmod 0047                   clear_0 1270         ___awdiv@quotient 0042  
        ___awmod@divisor 0046          ___awmod@counter 0048                   _pwmbuf 002D  
                 _rowkey 0021             __pdataCOMRAM 004A             __mediumconst 0000  
                 tblptrh 000FF7                   tblptrl 000FF6                   tblptru 000FF8  
             __accesstop 0060  __end_of__initialization 1296          __CFG_PBADEN$OFF 000000  
          ___rparam_used 000001           __pcstackCOMRAM 002E               __end_of_MQ 0831  
                _HighISR 0008                  __Hparam 0000                  __Lparam 0000  
                ___awdiv 1060                  ___awmod 1166                  ___lwdiv 11D6  
                ___lwmod 1228             __psmallconst 0800                  __pcinit 126A  
                __ramtop 0800                  __ptext0 0856                  __ptext1 1228  
                __ptext2 11D6                  __ptext3 1166                  __ptext4 1060  
              _T0CONbits 000FD5         ___awmod@dividend 0044           __pintcode_body 10E4  
   end_of_initialization 1296            __Lmediumconst 0000                  int_func 10E4  
                postdec1 000FE5                  postinc0 000FEE                _TRISAbits 000F92  
         __end_of_KeyMap 0855            __pidataCOMRAM 12A4      start_initialization 126A  
            __end_of_LED 0845                _Timer250m 0005                _Timer500m 002C  
     __CFG_BOR$ON_ACTIVE 000000              __pbssCOMRAM 0001            __pcstackBANK0 0060  
               ?_HighISR 002E         ___lwdiv@dividend 003C                __pintcode 0008  
               ?___awdiv 003C                 ?___awmod 0044                 ?___lwdiv 003C  
               ?___lwmod 0043              __smallconst 0800         ___lwdiv@quotient 0040  
              copy_data0 128A                 _ScanLine 004A         __size_of_HighISR 115E  
               __Hrparam 0000                 _Timer10m 002B                 __Lrparam 0000  
               _OutPortB 0029         __size_of___awdiv 0084         __size_of___awmod 0070  
       __size_of___lwdiv 0052         __size_of___lwmod 0042          ___lwdiv@divisor 003E  
        ___lwdiv@counter 0042            __size_of_main 080A                 _keypress 0017  
               int$flags 004E               _INTCONbits 000FF2                 intlevel2 0000  
       ___lwmod@dividend 0043          ___lwmod@divisor 0045          ___lwmod@counter 0047  
